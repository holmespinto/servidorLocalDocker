{"version":3,"sources":["constants/menu.js","helpers/menu.js","layouts/Horizontal/Menu.js","layouts/Horizontal/Navbar.js"],"names":["MENU_ITEMS","key","label","isTitle","children","icon","badge","variant","text","parentKey","url","getMenuItems","findAllParent","menuItems","menuItem","parents","parent","findMenuItem","push","menuItemKey","i","length","found","MenuItemWithChildren","item","tag","linkClassName","className","subMenuClassNames","activeMenuItems","toggleMenu","Tag","useState","includes","open","setOpen","useEffect","classNames","to","onClick","e","preventDefault","status","data-menu-key","active","id","role","data-bs-toggle","aria-haspopup","aria-expanded","show","aria-labelledby","map","child","Fragment","MenuItem","MenuItemLink","target","withRouter","location","menuRef","useRef","topnavMenuItems","setTopnavMenuItems","setActiveMenuItems","activeMenu","useCallback","div","document","getElementById","matchingMenuItem","items","getElementsByTagName","pathname","mid","getAttribute","activeMt","modifiedMenuItems","filter","defaultDisplayedItems","window","screen","width","displayedItems","slice","moreChildren","otherItems","path","ref","idx","Navbar","props","Collapse","in","isMenuOpened"],"mappings":"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","file":"static/js/19.5cac24be.chunk.js","sourcesContent":["const MENU_ITEMS = [{\n    key: 'programas',\n    label: 'EstadÃ­sticas por Programas',\n    isTitle: false,\n    children: [{\n        key: 'graduados',\n        label: 'Graduados',\n        isTitle: false,\n        icon: 'uil uil-graduation-hat',\n        badge: {\n          variant: 'success',\n          text: '5'\n        },\n        parentKey: 'programas',\n        children: [{\n            key: 'ds-doctorados',\n            label: 'Doctorados',\n            url: '/estadisticas_programas/graduados/doctorados',\n            parentKey: 'graduados'\n          },\n          {\n            key: 'ds-maestrias',\n            label: 'Maestrias',\n            url: '/estadisticas_programas/graduados/maestrias',\n            parentKey: 'graduados'\n          },\n          {\n            key: 'ds-especializaciones',\n            label: 'Especializaciones',\n            url: '/estadisticas_programas/graduados/especializaciones',\n            parentKey: 'graduados',\n          },\n          {\n            key: 'ds-pregrado',\n            label: 'Pregrado',\n            url: '/estadisticas_programas/graduados/pregrado',\n            parentKey: 'graduados'\n          },\n          {\n            key: 'ds-tecnologos',\n            label: 'Tecnologos',\n            url: '/estadisticas_programas/graduados/tecnologos',\n            parentKey: 'graduados'\n          },\n        ],\n      },\n      {\n        key: 'matriculados',\n        label: 'Matriculados',\n        isTitle: false,\n        icon: 'uil uil-user-check',\n        badge: {\n          variant: 'success',\n          text: '5'\n        },\n        parentKey: 'programas',\n        children: [\n          {\n            key: 'ds-pregrado',\n            label: 'Todos',\n            url: '/estadisticas_programas/matriculados/pregrado',\n            parentKey: 'matriculados'\n          }\n        ],\n      },\n      {\n        key: 'admitidos',\n        label: 'Admitidos',\n        isTitle: false,\n        icon: 'uil uil-user-square',\n        badge: {\n          variant: 'success',\n          text: '1'\n        },\n        parentKey: 'programas',\n        children: [\n          {\n            key: 'ds-pregrado',\n            label: 'Pregrado',\n            url: '/estadisticas_programas/admitidos/pregrado',\n            parentKey: 'admitidos'\n          },\n        ],\n      },\n      {\n        key: 'inscritos',\n        label: 'Inscritos',\n        isTitle: false,\n        icon: 'uil uil-book-reader',\n        badge: {\n          variant: 'success',\n          text: '1'\n        },\n        parentKey: 'programas',\n        children: [\n          {\n            key: 'ds-pregrado',\n            label: 'Pregrado',\n            url: '/estadisticas_programas/inscritos/pregrado',\n            parentKey: 'inscritos'\n          },\n        ],\n      },\n      {\n        key: 'totales',\n        label: 'Total General',\n        isTitle: false,\n        icon: 'uil uil-book-reader',\n        badge: {\n          variant: 'success',\n          text: '1'\n        },\n        parentKey: 'programas',\n        children: [\n          {\n            key: 'ds-pregrado',\n            label: 'Por AÃ±os',\n            url: '/estadisticas_programas/por_fecha/general',\n            parentKey: 'totales'\n          },\n        ],\n      },\n    ],\n  },\n];\n\nexport default MENU_ITEMS;\n","import MENU_ITEMS from '../constants/menu';\r\n\r\nconst getMenuItems = () => {\r\n    // NOTE - You can fetch from server and return here as well\r\n    return MENU_ITEMS;\r\n};\r\n\r\nconst findAllParent = (menuItems, menuItem) => {\r\n    let parents = [];\r\n    const parent = findMenuItem(menuItems, menuItem['parentKey']);\r\n\r\n    if (parent) {\r\n        parents.push(parent['key']);\r\n        if (parent['parentKey']) parents = [...parents, ...findAllParent(menuItems, parent)];\r\n    }\r\n    return parents;\r\n};\r\n\r\nconst findMenuItem = (menuItems, menuItemKey) => {\r\n    if (menuItems && menuItemKey) {\r\n        for (var i = 0; i < menuItems.length; i++) {\r\n            if (menuItems[i].key === menuItemKey) {\r\n                return menuItems[i];\r\n            }\r\n            var found = findMenuItem(menuItems[i].children, menuItemKey);\r\n            if (found) return found;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n\r\nexport { getMenuItems, findAllParent, findMenuItem };\r\n","// @flow\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { findAllParent, findMenuItem } from '../../helpers/menu';\n\nconst MenuItemWithChildren = ({\n    item,\n    tag,\n    linkClassName,\n    className,\n    subMenuClassNames,\n    activeMenuItems,\n    toggleMenu,\n}) => {\n    const Tag = tag;\n\n    const [open, setOpen] = useState(activeMenuItems.includes(item.key));\n\n    useEffect(() => {\n        setOpen(activeMenuItems.includes(item.key));\n    }, [activeMenuItems, item]);\n\n    const toggleMenuItem = (e) => {\n        e.preventDefault();\n        const status = !open;\n        setOpen(status);\n        if (toggleMenu) toggleMenu(item, status);\n        return false;\n    };\n//console.log(open)\n    return (\n        <Tag className={classNames('dropdown', className, activeMenuItems.includes(item.key) ? 'active' : '')}>\n            <Link\n                to=\"/#\"\n                onClick={toggleMenuItem}\n                data-menu-key={item.key}\n                className={classNames('dropdown-toggle', 'arrow-none', linkClassName, {\n                    active: activeMenuItems.includes(item.key),\n                })}\n                id={item.key}\n                role=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded={open}>\n                {item.icon && <i className={item.icon}></i>}\n                <span> {item.label} </span>\n                <div className=\"arrow-down\"></div>\n            </Link>\n\n            {item.children ? (\n                <div className={classNames(subMenuClassNames, { show: open })} aria-labelledby={item.key}>\n                    {item.children.map((child, i) => {\n                        return (\n                            <React.Fragment key={i}>\n                                {child.children ? (\n                                    <>\n                                        {/* parent */}\n                                        <MenuItemWithChildren\n                                            item={child}\n                                            tag=\"div\"\n                                            linkClassName={classNames(\n                                                'dropdown-item',\n                                                activeMenuItems.includes(child.key) ? 'active' : ''\n                                            )}\n                                            activeMenuItems={activeMenuItems}\n                                            className=\"\"\n                                            subMenuClassNames=\"dropdown-menu\"\n                                            toggleMenu={toggleMenu}\n                                        />\n                                    </>\n                                ) : (\n                                    <>\n                                        {/* child */}\n                                        <MenuItemLink\n                                            item={child}\n                                            className={classNames('dropdown-item', {\n                                                active: activeMenuItems.includes(child.key),\n                                            })}\n                                        />\n                                    </>\n                                )}\n                            </React.Fragment>\n                        );\n                    })}\n                </div>\n            ) : null}\n        </Tag>\n    );\n};\n\nconst MenuItem = ({ item, className, linkClassName }) => {\n    return (\n        <li className={classNames('nav-item', className)}>\n            <MenuItemLink item={item} className={linkClassName} />\n        </li>\n    );\n};\n\nconst MenuItemLink = ({ item, className }) => {\n    return (\n        <Link to={item.url} target={item.target} className={classNames(className)} data-menu-key={item.key}>\n            {item.icon && <i className={item.icon}></i>}\n            <span> {item.label} </span>\n        </Link>\n    );\n};\n\n/**\n * Renders the application menu\n */\n\ntype AppMenuProps = {\n    menuItems: Array<any>,\n    location: {\n        hash: string,\n        key: string,\n        pathname: string,\n        search: string,\n        state: any,\n    },\n};\n\nconst AppMenu = ({ menuItems, location }: AppMenuProps) => {\n    const menuRef = useRef(null);\n\n    const [topnavMenuItems, setTopnavMenuItems] = useState([]);\n    const [activeMenuItems, setActiveMenuItems] = useState([]);\n\n    /*\n     * toggle the menus\n     */\n    const toggleMenu = (menuItem, show) => {\n        if (show) setActiveMenuItems([menuItem['key'], ...findAllParent(topnavMenuItems, menuItem)]);\n    };\n\n    /**\n     * activate the menuitems\n     */\n    const activeMenu = useCallback(() => {\n        const div = document.getElementById('main-side-menu');\n        let matchingMenuItem = null;\n\n        if (div) {\n            let items: any = div.getElementsByTagName('a');\n            for (let i = 0; i < items.length; ++i) {\n                if (location.pathname === items[i].pathname) {\n                    matchingMenuItem = items[i];\n                    break;\n                }\n            }\n\n            if (matchingMenuItem) {\n                const mid = matchingMenuItem.getAttribute('data-menu-key');\n                const activeMt = findMenuItem(topnavMenuItems, mid);\n                if (activeMt) {\n                    setActiveMenuItems([activeMt['key'], ...findAllParent(topnavMenuItems, activeMt)]);\n                }\n            }\n        }\n    }, [location.pathname, topnavMenuItems]);\n\n    useEffect(() => {\n        //controlling how many menu items can be displayed in it\n        let modifiedMenuItems = menuItems ? menuItems.filter((item) => (!item.isTitle ? item : null)) : [];\n        const defaultDisplayedItems = window.screen.width > 1366 ? 7 : 5;\n\n        if (modifiedMenuItems.length > defaultDisplayedItems) {\n            const displayedItems = modifiedMenuItems.slice(0, defaultDisplayedItems);\n\n            const moreChildren = modifiedMenuItems\n                .slice(defaultDisplayedItems, menuItems.length)\n                .map((i) => ({ ...i, parentKey: 'more' }));\n\n            const otherItems = {\n                id: modifiedMenuItems.length + 1,\n                path: '/',\n                label: 'More',\n                icon: 'uil-ellipsis-h',\n                key: 'more',\n                children: moreChildren,\n            };\n            modifiedMenuItems = [...displayedItems, otherItems];\n            setTopnavMenuItems(modifiedMenuItems);\n        }\n    }, [menuItems]);\n\n    useEffect(() => {\n        if (topnavMenuItems && topnavMenuItems.length > 0) activeMenu();\n    }, [activeMenu, topnavMenuItems]);\n\n    return (\n        <>\n            <ul className=\"navbar-nav\" ref={menuRef} id=\"main-side-menu\">\n                {(topnavMenuItems || []).map((item, idx) => {\n                    return (\n                        <React.Fragment key={idx}>\n                            {item.children ? (\n                                <MenuItemWithChildren\n                                    item={item}\n                                    tag=\"li\"\n                                    className=\"nav-item\"\n                                    subMenuClassNames=\"dropdown-menu\"\n                                    activeMenuItems={activeMenuItems}\n                                    linkClassName=\"nav-link\"\n                                    toggleMenu={toggleMenu}\n                                />\n                            ) : (\n                                <MenuItem\n                                    item={item}\n                                    linkClassName=\"nav-link dropdown-toggle arrow-none\"\n                                    className={{ active: activeMenuItems.includes(item.key) }}\n                                />\n                            )}\n                        </React.Fragment>\n                    );\n                })}\n            </ul>\n        </>\n    );\n};\n\nexport default (withRouter(AppMenu): any);\n","// @flow\r\nimport React from 'react';\r\nimport AppMenu from './Menu';\r\nimport { Collapse } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\nimport { getMenuItems } from '../../helpers/menu';\r\n\r\ntype NavbarProps = {\r\n    isMenuOpened?: boolean,\r\n};\r\n\r\nconst Navbar = (props: NavbarProps): React$Element<React$FragmentType> => {\r\n    // change the inputTheme value to light for creative theme\r\n    const inputTheme = 'dark';\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"topnav\">\r\n                <div className=\"container-fluid\">\r\n                    <nav className={classNames('navbar', 'navbar-expand-lg', 'topnav-menu', 'navbar-' + inputTheme)}>\r\n                        <Collapse in={props.isMenuOpened} className=\"navbar-collapse\" id=\"topnav-menu-content\">\r\n                            <div>\r\n                                <AppMenu menuItems={getMenuItems()} />\r\n                            </div>\r\n                        </Collapse>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n"],"sourceRoot":""}