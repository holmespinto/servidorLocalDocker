{"version":3,"sources":["layouts/RightSidebar.js"],"names":["RightSideBar","props","dispatch","useDispatch","rightBarNodeRef","useRef","defaultProps","title","component","children","handleOtherClick","e","current","contains","target","hideRightSidebar","useEffect","document","addEventListener","removeEventListener","Fragment","className","ref","to","onClick","preventDefault","style","maxHeight","zIndex","timeout","scrollbarMaxSize"],"mappings":"oGACA,mEAuEeA,UAxDM,SAAfA,EAAgBC,GAClB,IAAMC,EAAWC,cAEXC,EAAuBC,iBAAO,MAEpCL,EAAaM,aAAe,CACxBC,MAAO,YAGX,IAAMA,EAAQN,EAAMM,MACdC,EAAYP,EAAMQ,UAAY,KAa9BC,EAAmB,SAACC,GAClBP,GAAmBA,EAAgBQ,SAAWR,EAAgBQ,QAAQC,SAASF,EAAEG,SAEhFZ,EAASa,gBAUlB,OAPAC,qBAAU,WAEN,OADAC,SAASC,iBAAiB,YAAaR,GAAkB,GAClD,WACHO,SAASE,oBAAoB,YAAaT,GAAkB,OAKhE,eAAC,IAAMU,SAAP,WACI,sBAAKC,UAAU,UAAUC,IAAKlB,EAA9B,UACI,sBAAKiB,UAAU,iBAAf,UACI,cAAC,IAAD,CAAME,GAAG,IAAIF,UAAU,2BAA2BG,QAzB9C,SAACb,GACjBA,EAAEc,iBACFvB,EAASa,gBAuBG,SACI,mBAAGM,UAAU,gCAEjB,oBAAIA,UAAU,MAAd,SAAqBd,OAGzB,cAAC,IAAD,CAAWmB,MAAO,CAAEC,UAAW,OAAQC,OAAQ,KAASC,QAAS,IAAKC,iBAAkB,IAAxF,SACI,qBAAKT,UAAU,yBAAf,SAAyCb,SAIjD,qBAAKa,UAAU","file":"static/js/7.ba8076a9.chunk.js","sourcesContent":["// @flow\nimport React, { useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport SimpleBar from 'simplebar-react';\n\n// actions\nimport { hideRightSidebar } from '../redux/actions';\n\ntype RightSideBarProps = {\n    hideRightSidebar?: () => void,\n    title?: string,\n    children?: any,\n};\n\nconst RightSideBar = (props: RightSideBarProps): React$Element<React$FragmentType> => {\n    const dispatch = useDispatch();\n\n    const rightBarNodeRef: any = useRef(null);\n\n    RightSideBar.defaultProps = {\n        title: 'Settings',\n    };\n\n    const title = props.title;\n    const component = props.children || null;\n\n    /**\n     * Handles the close\n     */\n    const handleClose = (e: any) => {\n        e.preventDefault();\n        dispatch(hideRightSidebar());\n    };\n\n    /**\n     * Handle the click anywhere in doc\n     */\n    const handleOtherClick = (e: any) => {\n        if (rightBarNodeRef && rightBarNodeRef.current && rightBarNodeRef.current.contains(e.target)) return;\n        // else hide the right sidebar\n        else dispatch(hideRightSidebar());\n    };\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleOtherClick, false);\n        return () => {\n            document.removeEventListener('mousedown', handleOtherClick, false);\n        };\n    });\n\n    return (\n        <React.Fragment>\n            <div className=\"end-bar\" ref={rightBarNodeRef}>\n                <div className=\"rightbar-title\">\n                    <Link to=\"#\" className=\"end-bar-toggle float-end\" onClick={handleClose}>\n                        <i className=\"dripicons-cross noti-icon\"></i>\n                    </Link>\n                    <h5 className=\"m-0\">{title}</h5>\n                </div>\n\n                <SimpleBar style={{ maxHeight: '100%', zIndex: 10000 }} timeout={500} scrollbarMaxSize={320}>\n                    <div className=\"rightbar-content h-100\">{component}</div>\n                </SimpleBar>\n            </div>\n\n            <div className=\"rightbar-overlay\"></div>\n        </React.Fragment>\n    );\n};\n\nexport default RightSideBar;\n"],"sourceRoot":""}