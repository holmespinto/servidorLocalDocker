{"version":3,"sources":["components/Pagination.js","pages/dashboard/components/ButtonExportar/ButtonExportar.js","components/Table.js","pages/dashboard/components/FormInput.js","pages/dashboard/components/Spinner.js","pages/dashboard/components/BuscadorProgramas/BuscadorProgramas.js","pages/dashboard/components/SearchCustomizations.js","pages/dashboard/estadisticas/BarChartMaInsGra.js","pages/dashboard/estadisticas/StackedBarChart.js","pages/dashboard/estadisticas/ApexBarChartData.js","pages/dashboard/estadisticas/BarChart.js","pages/dashboard/estadisticas/BarChartVertical.js","pages/dashboard/estadisticas/DonutChart.js","pages/dashboard/estadisticas/GraficaUno.js","pages/dashboard/estadisticas/LineChart.js","pages/dashboard/estadisticas/PieChart.js","pages/dashboard/estadisticas/MixedChart.js","pages/dashboard/Project/menu.js","pages/dashboard/Project/Graduados.js","pages/dashboard/estadisticas/matriculados/BarChartGeneroUno.js","pages/dashboard/estadisticas/matriculados/BarChartGeneroDos.js","pages/dashboard/estadisticas/matriculados/ApexBarChartDataMatriculados.js","pages/dashboard/estadisticas/matriculados/LineChartGenero.js","pages/dashboard/estadisticas/matriculados/LineChartEstracto.js","pages/dashboard/estadisticas/matriculados/MixedChartEstracto.js","pages/dashboard/Project/Matriculados.js","pages/dashboard/Project/Admitidos.js","pages/dashboard/estadisticas/GraficaInscritos.js","pages/dashboard/Project/Inscritos.js","pages/dashboard/components/BuscadorProgramas/SearchFechas.js","pages/dashboard/estadisticas/GraficaFecha.js","pages/dashboard/Project/TotalesFecha.js","pages/dashboard/components/Title.js","pages/dashboard/components/Pagination.js","pages/dashboard/components/Table.js","pages/dashboard/components/Usuarios/GuardarUsuarios.js","pages/dashboard/components/Usuarios/ListaUsuarios.js","pages/dashboard/components/ExcelToJsonComponent/ExcelToJsonComponent.js","pages/dashboard/Project/HerramientaImportar.js","pages/dashboard/Project/index.js"],"names":["Pagination","tableProps","sizePerPageList","className","value","state","pageSize","onChange","e","setPageSize","Number","target","map","index","text","pageIndex","pageOptions","length","type","defaultValue","page","gotoPage","onClick","disabled","canPreviousPage","previousPage","nextPage","canNextPage","pageCount","ButtonExportar","numtable","tablexls","sheet","id","table","filename","buttonText","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","searchBoxClass","count","React","useState","setValue","useAsyncDebounce","undefined","classNames","placeholder","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","htmlFor","Table","props","isSearchable","isSortable","pagination","isSelectable","isExpandable","isVisible","dataTable","useTable","columns","data","initialState","useGlobalFilter","useSortBy","useExpanded","usePagination","useRowSelect","hooks","visibleColumns","push","Header","getToggleAllPageRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getToggleAllRowsExpandedProps","isAllRowsExpanded","canExpand","getToggleRowExpandedProps","style","paddingLeft","depth","isExpanded","rows","class","getTableProps","headerGroups","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","sort","getSortByToggleProps","sorting_desc","isSortedDesc","sorting_asc","sortable","render","getTableBodyProps","i","prepareRow","getRowProps","cells","cell","getCellProps","PasswordInput","name","refCallback","errors","register","showPassword","setShowPassword","InputGroup","Form","Control","as","r","isInvalid","autoComplete","data-password","FormInput","label","labelClassName","containerClass","children","otherProps","comp","Group","Label","Feedback","Check","Spinner","Tag","tag","color","size","role","defaultProps","BuscadorProgramas","useContext","DashboardContext","itemsmenuprincipal","isLoading","itemsmenu","SearchContext","itemsForm","itemsProgramas","itemPeriodo","onItemSedes","onItemPeriodo","onItemProgramas","handleSubmit","validated","Alert","variant","noValidate","onSubmit","classnames","required","p","Programa","Periodo","Button","memo","api","APICore","SearchCustomizations","itemPrograma","setPeriodo","url","sendRequestData","then","resp","Fragment","BarChart","ApexBarChartData","apexBarChartOpts","chart","height","toolbar","show","plotOptions","bar","horizontal","dataLabels","position","enabled","offsetX","fontSize","colors","stroke","width","xaxis","categories","axial","legend","offsetY","states","hover","filter","grid","borderColor","apexBarChartData","graduados","inscritos","admitidos","Card","Body","programa","options","series","StackedBarChart","apexBarChartStackedOpts","stacked","yaxis","title","tooltip","y","formatter","val","fill","opacity","horizontalAlign","apexBarChartStackedData","Row","Tab","Container","defaultActiveKey","Nav","Item","Link","href","eventKey","Content","Pane","BarChartMaInsGra","ResponsiveBarChart","withResponsiveness","Bar","Data","barChartData","isAnimated","isHorizontal","betweenBarsPadding","colorSchema","margin","top","left","bottom","right","BarChartVertical","enableLabels","percentageAxisToMaxRatio","labelsNumberFormat","DonutChart","donutDatas","donutData","Col","internalRadius","hasFixedHighlightedSlice","numberFormat","GraficaUno","LineChart","apexLineChartWithLables","zoom","curve","categoria","align","markers","floating","responsive","breakpoint","apexLineChartWithLablesData","PieChart","pieChart","apexDonutData","totalgeneral","totalrango","totalprograma","labels","verticalAlign","MixedChart","grafiCuatro","apexMixedOpts","columnWidth","gradient","inverseColors","shade","opacityFrom","opacityTo","stops","shared","intersect","toFixed","apexMixedData","tabItems","icon","tabMatriculados","tabAdmitidos","columItemsPrincipal","accessor","columFecha","columTotales","columAdInsMa","columnsAdmitidos","columItemsMatriculados","colMatricGenero","colMatricEstracto","Graduados","categoryGraduados","tab","sm","Items","xl","DonutData","Chart","Piechart","Totales","InscritosAdmitidosMatriculados","BarChartGeneroUno","masculino","femenino","BarChartGeneroDos","ApexBarChartDataMatriculados","LineChartGenero","LineChartEstracto","uno","dos","tres","cuatro","MixedChartEstracto","Matriculados","categoryMatriculados","Estracto","Genero","Categorias","Donut","ApexBarChartGenero","ApexBarChartEstracto","Admitidos","categoryAdmitidos","GraficaInscritos","labels1","apexBarChartOpts2","labels2","ChartUno","apexBarChartData1","apexBarChartData2","console","log","Inscritos","categoryInscritos","SearchFechas","onSelectFecha","fechas","useCallback","years","year","getYearsInRange","GraficaFecha","apexDonutOpts","apexDonutOpts2","apexDonutData1","apexDonutData2","TotalesFecha","categoryPorFecha","itemUrl","Title","info","breadCrumbItems","toUpperCase","path","active","Breadcrumb","sede","GuardarUsuarios","setValidated","temas","setTemas","t","useTranslation","schemaResolver","yupResolver","yup","shape","username","password","nombres","email","apellidos","rol","Modal","signUpModal","onHide","toggleSignUp","resolver","defaultValues","controlId","classNamePrefix","selected","message","event","pass","require","AES","encrypt","toString","currentTarget","checkValidity","preventDefault","stopPropagation","response","clave","queryString","Object","keys","key","join","getDatos","Swal","fire","menssage","Close","classes","INIT_TEMAS","status","setSignUpModal","to","showCancelButton","result","isConfirmed","original","ListaUsuarios","records","openCategoriass","cargarCategorias","mapped","theadClass","ExcelToJson","ConvertButtonText","CleanButtonText","JsonDataSetter","setSelectedFile","selectedFile","validar","importarDataCvs","files","hojas","fileReader","FileReader","readAsArrayBuffer","onload","datas","Uint8Array","workbook","XLSX","SheetNames","forEach","sheetName","XL_row_object","sheet_to_row_object_array","Sheets","JSON","parse","stringify","document","getElementById","HerramientaImportar","jsonDataImport","items","setEstados","setValidar","objet","NombresApellidos","Identificacion","Fecha","Sede","ProjectDashboard"],"mappings":"8OAkFeA,EAvEI,SAAC,GAAyF,IAAvFC,EAAsF,EAAtFA,WAAYC,EAA0E,EAA1EA,gBAC9B,OACI,mCACI,sBAAKC,UAAU,gDAAf,UACI,uBAAOA,UAAU,OAAjB,uBACA,wBACIC,MAAOH,EAAWI,MAAMC,SACxBC,SAAU,SAACC,GACPP,EAAWQ,YAAYC,OAAOF,EAAEG,OAAOP,SAE3CD,UAAU,oCALd,SAMKD,EAAgBU,KAAI,SAACN,EAAUO,GAC5B,OACI,wBAAoBT,MAAOE,EAASF,MAApC,SACKE,EAASQ,MADDD,QAOzB,uBAAMV,UAAU,OAAhB,iBACS,IACL,mCACKF,EAAWI,MAAMU,UAAY,EADlC,OACyCd,EAAWe,YAAYC,UACtD,OAGd,uBAAMd,UAAU,2EAAhB,UACI,kDACA,uBACIe,KAAK,SACLC,aAAclB,EAAWI,MAAMU,UAAY,EAC3CR,SAAU,SAACC,GACP,IAAMY,EAAOZ,EAAEG,OAAOP,MAAQM,OAAOF,EAAEG,OAAOP,OAAS,EAAI,EAC3DH,EAAWoB,SAASD,IAExBjB,UAAU,6CAIlB,sBAAKA,UAAU,sDAAf,UACI,wBACImB,QAAS,kBAAMrB,EAAWoB,SAAS,IACnClB,UAAU,YACVoB,UAAWtB,EAAWuB,gBAH1B,SAIK,OACK,IACV,wBACIF,QAAS,kBAAMrB,EAAWwB,gBAC1BtB,UAAU,YACVoB,UAAWtB,EAAWuB,gBAH1B,SAIK,MACK,IACV,wBACIF,QAAS,kBAAMrB,EAAWyB,YAC1BvB,UAAU,YACVoB,UAAWtB,EAAW0B,YAH1B,SAIK,MACK,IACV,wBACIL,QAAS,kBAAMrB,EAAWoB,SAASpB,EAAW2B,UAAY,IAC1DzB,UAAU,YACVoB,UAAWtB,EAAW0B,YAH1B,SAIK,OACK,a,kBC1DfE,EAfQ,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACjBC,EAAS,GAAD,OAAID,GACZE,EAAM,WAAD,OAAYF,GACrB,OACE,qBAAM3B,UAAU,YAAhB,SACA,cAAC,IAAD,CACc8B,GAAG,QACH9B,UAAW,2DACX+B,MAAOJ,EACPK,SAAUJ,EACVC,MAAOA,EACPI,WAAW,WCKzBC,EAAe,SAAC,GAA8E,IAA5EC,EAA2E,EAA3EA,sBAAuBC,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,gBAAiBC,EAAqB,EAArBA,eACpEC,EAAQJ,EAAsBrB,OAD2D,EAErE0B,IAAMC,SAASL,GAFsD,mBAExFnC,EAFwF,KAEjFyC,EAFiF,KAGzFtC,EAAWuC,4BAAiB,SAAC1C,GAC/BoC,EAAgBpC,QAAS2C,KAC1B,KAEH,OACI,qBAAK5C,UAAW6C,IAAWP,GAA3B,SACI,uBAAMtC,UAAU,4BAAhB,qBACa,IACT,uBACIC,MAAOA,GAAS,GAChBG,SAAU,SAACC,GACPqC,EAASrC,EAAEG,OAAOP,OAClBG,EAASC,EAAEG,OAAOP,QAEtB6C,YAAW,UAAKP,EAAL,eACXvC,UAAU,mCASxB+C,EAAwBC,sBAAW,WAA6BC,GAAS,IAAnCC,EAAkC,EAAlCA,cAAkBC,EAAgB,iCACpEC,EAAaC,mBACbC,EAAmBL,GAAOG,EAMhC,OAJAG,qBAAU,WACND,EAAYE,QAAQN,cAAgBA,IACrC,CAACI,EAAaJ,IAGb,mCACI,sBAAKlD,UAAU,aAAf,UACI,mCAAOe,KAAK,WAAWf,UAAU,mBAAmBiD,IAAKK,GAAiBH,IAC1E,uBAAOM,QAAQ,mBAAmBzD,UAAU,6BAkK7C0D,EAxID,SAACC,GACX,IAAMC,EAAeD,EAAK,eAAoB,EACxCE,EAAaF,EAAK,aAAkB,EACpCG,EAAaH,EAAK,aAAkB,EACpCI,EAAeJ,EAAK,eAAoB,EACxCK,EAAeL,EAAK,eAAoB,EACxCM,EAAYN,EAAK,YAAiB,EAClChC,EAAWgC,EAAK,UAAgB,IAEhCO,EAAYC,mBACd,CACIC,QAAST,EAAK,QACdU,KAAMV,EAAK,KACXW,aAAc,CAAEnE,SAAUwD,EAAK,UAAgB,KAEnDC,GAAgBW,kBAChBV,GAAcW,YACdR,GAAgBS,cAChBX,GAAcY,gBACdX,GAAgBY,gBAChB,SAACC,GACGb,GACIa,EAAMC,eAAeC,MAAK,SAACV,GAAD,OAEtB,CACItC,GAAI,YAGJiD,OAAQ,gBAAGC,EAAH,EAAGA,kCAAH,OACJ,8BACI,cAACjC,EAAD,eAA2BiC,SAKnCC,KAAM,gBAAGC,EAAH,EAAGA,IAAH,OACF,8BACI,cAACnC,EAAD,eAA2BmC,EAAIC,mCAfrB,mBAmBnBf,OAGXJ,GACIY,EAAMC,eAAeC,MAAK,SAACV,GAAD,OAEtB,CAEItC,GAAI,WACJiD,OAAQ,gBAAGK,EAAH,EAAGA,8BAA+BC,EAAlC,EAAkCA,kBAAlC,OACJ,gDAAUD,KAAV,aAA4CC,EAAoB,IAAM,QAE1EJ,KAAM,gBAAGC,EAAH,EAAGA,IAAH,OAGFA,EAAII,UACA,gDACQJ,EAAIK,0BAA0B,CAC9BC,MAAO,CAIHC,YAAY,GAAD,OAAiB,EAAZP,EAAIQ,MAAT,WANvB,aASKR,EAAIS,WAAa,IAAM,OAE5B,QAvBU,mBAyBnBvB,UAKfwB,EAAO9B,EAAaI,EAAUjD,KAAOiD,EAAU0B,KAC7C7D,EAAM,gBAAD,OAAiBJ,GAC5B,OACI,qCACI,sBAAK3B,UAAU,4BAAf,UACA,qBAAK6F,MAAM,QAAX,SACEjC,GACE,cAAC,EAAD,CACIzB,sBAAuB+B,EAAU/B,sBACjCC,aAAc8B,EAAUhE,MAAMkC,aAC9BC,gBAAiB6B,EAAU7B,gBAC3BC,eAAgBqB,EAAK,mBAGzB,qBAAKkC,MAAM,SAAX,SACC5B,GAAc,cAAC,EAAD,CAAgBtC,SAAUI,SAI7C,qBAAK/B,UAAU,mBAAf,SACI,gDAAO8B,GAAIC,GACHmC,EAAU4B,iBADlB,IAEI9F,UAAW6C,IAAW,mCAAoCc,EAAK,YAFnE,UAGI,uBAAO3D,UAAW2D,EAAK,WAAvB,SACKO,EAAU6B,aAAatF,KAAI,SAACuF,GAAD,OACxB,8CAAQA,EAAYC,uBAApB,aACKD,EAAYE,QAAQzF,KAAI,SAAC0F,GAAD,OACrB,8CACQA,EAAOC,eAAeD,EAAOE,MAAQF,EAAOG,yBADpD,IAEItG,UAAW6C,IAAW,CAClB0D,cAAsC,IAAxBJ,EAAOK,aACrBC,aAAqC,IAAxBN,EAAOK,aACpBE,UAA0B,IAAhBP,EAAOE,OALzB,SAOKF,EAAOQ,OAAO,wBAMnC,iDAAWzC,EAAU0C,qBAArB,cACMhB,GAAQ,IAAInF,KAAI,SAACyE,EAAK2B,GAEpB,OADA3C,EAAU4C,WAAW5B,GAEjB,8CAAQA,EAAI6B,eAAZ,aACK7B,EAAI8B,MAAMvG,KAAI,SAACwG,GACZ,OAAO,8CAAQA,EAAKC,gBAAb,aAA8BD,EAAKN,OAAO,6BAU5E7C,GAAc,cAAC,EAAD,CAAYhE,WAAYoE,EAAWnE,gBAAiB4D,EAAK,sB,kBChN9EwD,EAAgB,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,KAAMtE,EAA4D,EAA5DA,YAAauE,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,SAAUvH,EAAgB,EAAhBA,UAAgB,EAC/CyC,oBAAS,GADsC,mBAChF+E,EADgF,KAClEC,EADkE,KAGvF,OACI,mCACI,eAACC,EAAA,EAAD,CAAY1H,UAAU,OAAtB,UACI,cAAC2H,EAAA,EAAKC,QAAN,yBACI7G,KAAMyG,EAAe,OAAS,WAC9B1E,YAAaA,EACbsE,KAAMA,EACNtF,GAAIsF,EACJS,GAAG,QACH5E,IAAK,SAAC6E,GACET,GAAaA,EAAYS,IAEjC9H,UAAWA,EACX+H,aAAWT,IAAUA,EAAOF,KACvBG,EAAWA,EAASH,GAAQ,IAXrC,IAYIY,aAAcZ,KAElB,qBACIpH,UAAW6C,IAAW,mBAAoB,uBAAwB,CAC9D,gBAAiB2E,IAErBS,gBAAeT,EAAe,OAAS,QAJ3C,SAKI,sBACIxH,UAAU,eACVmB,QAAS,WACLsG,GAAiBD,cAoI9BU,EA9GG,SAAC,GAauC,IAZtDC,EAYqD,EAZrDA,MACApH,EAWqD,EAXrDA,KACAqG,EAUqD,EAVrDA,KACAtE,EASqD,EATrDA,YACAyE,EAQqD,EARrDA,SACAD,EAOqD,EAPrDA,OACAtH,EAMqD,EANrDA,UACAoI,EAKqD,EALrDA,eACAC,EAIqD,EAJrDA,eACAhB,EAGqD,EAHrDA,YACAiB,EAEqD,EAFrDA,SACGC,EACkD,gJAE/CC,EAAgB,aAATzH,EAAsB,WAAsB,WAATA,EAAoB,SAAW,QAE/E,OACI,mCACc,WAATA,EACG,+CAAOA,KAAMA,EAAMqG,KAAMA,GAAWG,EAAWA,EAASH,GAAQ,IAASmB,IAEzE,mCACc,aAATxH,EACG,mCACI,eAAC4G,EAAA,EAAKc,MAAN,CAAYzI,UAAWqI,EAAvB,UACKF,EACG,qCACK,IACD,cAACR,EAAA,EAAKe,MAAN,CAAY1I,UAAWoI,EAAvB,SAAwCD,IAF5C,IAEiEG,EAAU,OAE3E,KACJ,cAAC,EAAD,CACIlB,KAAMA,EACNtE,YAAaA,EACbuE,YAAaA,EACbC,OAAQA,EACRC,SAAUA,EACVvH,UAAWA,IAGdsH,GAAUA,EAAOF,GACd,cAACO,EAAA,EAAKC,QAAQe,SAAd,CAAuB5H,KAAK,UAAUf,UAAU,UAAhD,SACKsH,EAAOF,GAAP,UAEL,UAIZ,mCACc,aAATrG,GAAgC,UAATA,EACpB,mCACI,eAAC4G,EAAA,EAAKc,MAAN,CAAYzI,UAAWqI,EAAvB,UACI,cAACV,EAAA,EAAKiB,MAAN,yBACI7H,KAAMA,EACNoH,MAAOA,EACPf,KAAMA,EACNtF,GAAIsF,EACJnE,IAAK,SAAC6E,GACET,GAAaA,EAAYS,IAEjC9H,UAAWA,EACX+H,aAAWT,IAAUA,EAAOF,KACvBG,EAAWA,EAASH,GAAQ,IAC7BmB,IAGPjB,GAAUA,EAAOF,GACd,cAACO,EAAA,EAAKC,QAAQe,SAAd,CAAuB5H,KAAK,UAA5B,SACKuG,EAAOF,GAAP,UAEL,UAIZ,eAACO,EAAA,EAAKc,MAAN,CAAYzI,UAAWqI,EAAvB,UACKF,EAAQ,cAACR,EAAA,EAAKe,MAAN,CAAY1I,UAAWoI,EAAvB,SAAwCD,IAAsB,KAEvE,cAACR,EAAA,EAAKC,QAAN,qCACI7G,KAAMA,EACN+B,YAAaA,EACbsE,KAAMA,EACNtF,GAAIsF,EACJS,GAAIW,EACJvF,IAAK,SAAC6E,GACET,GAAaA,EAAYS,IAEjC9H,UAAWA,EACX+H,aAAWT,IAAUA,EAAOF,KACvBG,EAAWA,EAASH,GAAQ,IAC7BmB,GAZR,IAaIP,aAAcZ,EAblB,SAcKkB,GAAsB,QAG1BhB,GAAUA,EAAOF,GACd,cAACO,EAAA,EAAKC,QAAQe,SAAd,CAAuB5H,KAAK,UAA5B,SACKuG,EAAOF,GAAP,UAEL,e,SC3IlCyB,EAAU,SAAClF,GACb,IAAM2E,EAAW3E,EAAM2E,UAAY,KAC7BQ,EAAMnF,EAAMoF,KAAO,MACnBC,EAAQrF,EAAMqF,OAAS,YACvBC,EAAOtF,EAAMsF,MAAQ,GAE3B,OACI,cAACH,EAAD,CACII,KAAK,SACLlJ,UAAW6C,IACP,CAAE,iBAAiC,aAAfc,EAAM5C,KAAqB,eAA+B,SAAf4C,EAAM5C,MACrE,CAAC,QAAD,OAASiI,IAFQ,gCAGJC,EAHI,KAGMA,GACvBtF,EAAM3D,WANd,SAQKsI,KAKbO,EAAQM,aAAe,CACnBJ,IAAK,MACLhI,KAAM,YAGK8H,Q,mCChCTO,EAAoB,WAAO,IAAD,IAKxBC,qBAAWC,KAHXC,EAFwB,EAExBA,mBACAC,EAHwB,EAGxBA,UACAC,EAJwB,EAIxBA,UAJwB,EAe1BJ,qBAAWK,KARXC,EAP0B,EAO1BA,UACAC,EAR0B,EAQ1BA,eACAC,EAT0B,EAS1BA,YACAC,EAV0B,EAU1BA,YACAC,EAX0B,EAW1BA,cACAC,EAZ0B,EAY1BA,gBACAC,EAb0B,EAa1BA,aACAC,EAd0B,EAc1BA,UAUF,OACI,mCACI,cAACC,EAAA,EAAD,CAAOC,QAAS,UAAhB,SACI,cAACzC,EAAA,EAAD,CAAM0C,YAAU,EAACH,UAAWA,EAAWI,SAAUL,EAAjD,SACI,eAACtC,EAAA,EAAKc,MAAN,CAAYzI,UAAWuK,IAAW,0BAAlC,UACI,eAAC5C,EAAA,EAAKc,MAAN,CAAYzI,UAAWuK,IAAW,YAAlC,UACI,eAAC,EAAD,CACIxJ,KAAK,SACLoH,MAAM,OACNf,KAAK,QACLpH,UAAU,eACVqI,eAAgB,YAEhBvG,GAAG,QACH0I,UAAQ,EACRpK,SAAU,SAACC,GACPyJ,EAAW,WAAX,cAAeH,GAAf,QAA0BtJ,MAVlC,UAYI,wBAAQJ,MAAM,IAAd,+BACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,YAAd,uBACe,cAAdwJ,EACG,qCACI,wBAAQxJ,MAAM,cAAd,sCACA,wBAAQA,MAAM,MAAd,iCAGJ,KAfA,SAkBR,cAAC0H,EAAA,EAAKC,QAAQe,SAAd,6BAEJ,eAAChB,EAAA,EAAKc,MAAN,CAAYzI,UAAWuK,IAAW,YAAlC,UACI,eAAC,EAAD,CACIxJ,KAAK,SACLoH,MAAM,WACNf,KAAK,YACLpH,UAAU,eACVqI,eAAgB,YAEhBvG,GAAG,YACH0I,UAAQ,EACRpK,SAAU,SAACC,GACP2J,EAAe,WAAf,cAAmBL,GAAnB,QAA8BtJ,MAVtC,UAYI,wBAAQJ,MAAM,IAAd,oCAZJ,OAaK2J,QAbL,IAaKA,OAbL,EAaKA,EAAgBnJ,KAAI,SAACgK,EAAG5D,GACrB,OACI,wBAAQ5G,MAAOwK,EAAEC,SAAjB,SACKD,EAAEC,UADyB7D,EAAI,QATxC,aAeR,cAACc,EAAA,EAAKC,QAAQe,SAAd,6BAEJ,cAAChB,EAAA,EAAKc,MAAN,CAAYzI,UAAWuK,IAAW,YAAlC,SACI,eAAC5C,EAAA,EAAKc,MAAN,CAAYzI,UAAU,kBAAtB,UACI,eAAC,EAAD,CACIe,KAAK,SACLoH,MAAM,SACNf,KAAK,UACLpH,UAAU,eACVqI,eAAgB,YAEhBvG,GAAG,UACH0I,UAAQ,EACRpK,SAAU,SAACC,GACP0J,EAAa,WAAb,cAAiBJ,GAAjB,QAA4BtJ,MAVpC,UAYI,wBAAQJ,MAAM,IAAd,kCAZJ,UAeQ4J,EAAY,UAfpB,aAeQ,EAAgBpJ,KAAI,SAACgK,EAAG5D,GACpB,GAAI4D,EAAEE,QAAU,KACZ,OACI,wBAAQ1K,MAAOwK,EAAEE,QAAjB,SACKF,EAAEE,SADwB9D,EAAI,QAZ/C,WAmBR,cAACc,EAAA,EAAKC,QAAQe,SAAd,CAAuB5H,KAAK,UAA5B,wDAKR,cAAC4G,EAAA,EAAKc,MAAN,CAAYzI,UAAWuK,IAAW,YAAlC,SACI,eAAC5C,EAAA,EAAKc,MAAN,CAAYzI,UAAU,kBAAtB,UACI,cAAC2H,EAAA,EAAKC,QAAN,CACI7G,KAAK,SACLoH,MAAM,YACNlI,MAAOwJ,EACPrC,KAAK,YAELtF,GAAG,aADC,aAGR,cAAC6F,EAAA,EAAKC,QAAN,CACI7G,KAAK,SACLoH,MAAM,qBACNlI,MAAOsJ,EACPnC,KAAK,qBAELtF,GAAG,sBADC,sBAGR,cAAC6F,EAAA,EAAKC,QAAQe,SAAd,CAAuB5H,KAAK,UAA5B,gDAKR,cAAC4G,EAAA,EAAKc,MAAN,CAAYzI,UAAU,WAAtB,SACI,sBAAKA,UAAU,kBAAf,UACI,uBAAOA,UAAU,aAAjB,SAA+B,KADnC,IAC+C,uBAC1CwJ,EACG,cAACoB,EAAA,EAAD,CAAQ7J,KAAK,SAASqJ,QAAQ,UAA9B,uBAIA,eAACQ,EAAA,EAAD,CAAQ5B,MAAM,UAAU5H,UAAQ,EAAhC,UACI,cAAC,EAAD,CAASpB,UAAU,oBAAoB+I,IAAI,OAAOC,MAAM,UACxD,sBAAMhJ,UAAU,kBAAhB,0CAWzB6K,iBAAKzB,G,QChKd0B,EAAM,IAAIC,IA6BDC,EA3Bc,WAAO,IAAD,EAI/B3B,qBAAWK,KAFXuB,EAF+B,EAE/BA,aACAC,EAH+B,EAG/BA,WAGK3B,EAAsBF,qBAAWC,KAAjCC,mBAcL,OAZFhG,qBAAU,WACR,IAAe,OAAZ0H,QAAY,IAAZA,OAAA,EAAAA,EAAcnK,QAAS,EAAE,CAC3B,IAAMqK,EAAG,mDAA+CF,EAA/C,oBAAuE1B,GACjEuB,EAAIM,gBAAJ,UAAuBD,IAC/BE,MAAK,SAAUC,GACdA,GACFJ,EAAW,CAACI,UAIjB,CAACL,EAAa1B,EAAmB2B,IAG/B,cAAC,IAAMK,SAAP,UACI,cAAC,EAAD,O,kBCwDGC,EA/EE,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,iBAETC,EAAmB,CACrBC,MAAO,CACHC,OAAQ,IACR7K,KAAM,MACN8K,QAAS,CACLC,MAAM,IAGdC,YAAa,CACTC,IAAK,CACDC,YAAY,EACZC,WAAY,CACRC,SAAU,SAItBD,WAAY,CACRE,SAAS,EACTC,SAAU,EACV7G,MAAO,CACH8G,SAAU,OACVC,OAAQ,CAAC,UAGjBA,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1CC,OAAQ,CACJV,MAAM,EACNW,MAAO,EACPF,OAAQ,CAAC,SAGbG,MAAO,CACHC,WAAU,OAAElB,QAAF,IAAEA,OAAF,EAAEA,EAAkBmB,OAElCC,OAAQ,CACJC,SAAU,IAEdC,OAAQ,CACJC,MAAO,CACHC,OAAQ,SAGhBC,KAAM,CACFC,YAAa,YAKfC,EAAmB,CACvB,CACEhG,KAAM,YACN/C,KAAI,OAACoH,QAAD,IAACA,OAAD,EAACA,EAAkB4B,WAE3B,CACIjG,KAAM,YACN/C,KAAI,OAAEoH,QAAF,IAAEA,OAAF,EAAEA,EAAkB6B,WAE5B,CACIlG,KAAM,YACN/C,KAAI,OAACoH,QAAD,IAACA,OAAD,EAACA,EAAkB8B,WAE3B,CACInG,KAAM,eACN/C,KAAI,OAAEoH,QAAF,IAAEA,OAAF,EAAEA,EAAkB8B,YAI5B,OACI,cAACC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACE,oBAAIzN,UAAU,oBAAd,gBAAmCyL,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAkBiC,WACnD,cAAC,IAAD,CAAOC,QAASjC,EAAkBkC,OAAQR,EAAkBrM,KAAK,MAAMf,UAAU,sBCclF6N,EAvFS,SAAC,GAA4C,IAA3CpC,EAA0C,EAA1CA,iBAEhBqC,EAA0B,CAC5BnC,MAAO,CACHC,OAAQ,IACR7K,KAAM,MACNgN,SAAS,EACTlC,QAAS,CACLC,MAAM,IAGdC,YAAa,CACTC,IAAK,CACDC,YAAY,IAGpBO,OAAQ,CACJV,MAAM,GAEVY,MAAO,CACHC,WAAYlB,EAAiBmB,OAEjCoB,MAAO,CACHC,MAAO,CACHtN,UAAMiC,IAGd2J,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1C2B,QAAS,CACLC,EAAG,CACCC,UAAW,SAAUC,GACjB,OAAOA,KAInBC,KAAM,CACFC,QAAS,GAEbxB,OAAQ,CACJC,MAAO,CACHC,OAAQ,SAGhBJ,OAAQ,CACJV,SAAU,MACVqC,gBAAiB,UAErBtB,KAAM,CACFC,YAAa,YAKfsB,EAA0B,CAC9B,CACErH,KAAM,YACN/C,KAAKoH,EAAiB4B,WAE1B,CACIjG,KAAM,YACN/C,KAAMoH,EAAiB6B,WAE3B,CACIlG,KAAM,YACN/C,KAAKoH,EAAiB8B,WAE1B,CACInG,KAAM,eACN/C,KAAMoH,EAAiB8B,YAI3B,OACI,cAACC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACA,oBAAIzN,UAAU,oBAAd,SAAmCyL,EAAiBiC,WAChD,cAAC,IAAD,CACIC,QAASG,EACTF,OAAQa,EACR1N,KAAK,MACLf,UAAU,sBCjFxByL,EAAmB,YAAyB,IAAvBA,EAAsB,EAAtBA,iBACzB,OACE,mCACM,cAACiD,EAAA,EAAD,UACF,cAAClB,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,eAACkB,EAAA,EAAIC,UAAL,CAAeC,iBAAiB,IAAhC,UACE,eAACC,EAAA,EAAD,CAAK1E,QAAQ,OAAOpK,UAAU,eAAe6H,GAAG,KAAhD,UACM,cAACiH,EAAA,EAAIC,KAAL,CAAUlH,GAAG,KAAb,SACE,eAACiH,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIC,SAAU,IAA7B,UACE,mBAAGlP,UAAWuK,IAAW,YAAa,UAAW,UACjD,sBAAMvK,UAAU,oBAAhB,0BAHmB,KAMvB,cAAC8O,EAAA,EAAIC,KAAL,CAAUlH,GAAG,KAAb,SACE,eAACiH,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIC,SAAU,IAA7B,UACE,mBAAGlP,UAAWuK,IAAW,YAAa,UAAW,UACjD,sBAAMvK,UAAU,oBAAhB,4BAHmB,QAO7B,cAAC2O,EAAA,EAAIQ,QAAL,CAAanP,UAAU,yBAAvB,SACM,cAAC2O,EAAA,EAAIS,KAAL,CAAUF,SAAU,IAAMpN,GAAI,IAA9B,SAA6C,cAACuN,EAAD,CAAkB5D,iBAAkBA,KAAzC,OAE9C,cAACkD,EAAA,EAAIQ,QAAL,CAAanP,UAAU,yBAAvB,SACM,cAAC2O,EAAA,EAAIS,KAAL,CAAUF,SAAU,IAAMpN,GAAI,IAA9B,SAA8C,cAAC,EAAD,CAAiB2J,iBAAkBA,KAAzC,mBAS7CZ,iBAAKY,G,SClCd6D,EAAqBC,6BAAmBC,OAgC/BhE,EA7BE,SAACiE,GAA8B,IAAD,EAO3C,OACI,cAACjC,EAAA,EAAD,UACI,cAACA,EAAA,EAAKC,KAAN,UACI,qBAAKzN,UAAU,gBAAgBwF,MARf,CACxBiH,MAAO,OACPb,OAAQ,SAMA,UAEQ,OAAJ6D,QAAI,IAAJA,GAAA,UAAAA,EAAMC,oBAAN,eAAoB5O,QAAO,EAC5B,cAACwO,EAAD,CACKK,YAAY,EACZtL,KAAI,OAAEoL,QAAF,IAAEA,OAAF,EAAEA,EAAMC,aACZE,cAAc,EACdhE,OAAQ,IACRiE,mBAAoB,GACpBC,YAAa,CAAC,WACdC,OAAQ,CAAEC,IAAK,GAAIC,KAAM,GAAIC,OAAQ,GAAIC,MAAO,MACjD,UCxBjBb,EAAqBC,6BAAmBC,OA6B/BY,EA1BU,SAAC,GAAwC,IAAvCV,EAAsC,EAAtCA,aAMtB,OACG,cAAClC,EAAA,EAAD,UACI,cAACA,EAAA,EAAKC,KAAN,UACI,qBAAKzN,UAAU,gBAAgBwF,MAPf,CACxBiH,MAAO,OACPb,OAAQ,SAKA,SACI,cAAC,EAAD,CACIvH,KAAMqL,EACNE,cAAc,EACdhE,OAAQ,IACRyE,cAAc,EACdC,yBAA0B,IAC1BC,mBAAoB,EACpBT,YAAa,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WACrEC,OAAQ,CAAEC,IAAK,GAAIC,KAAM,GAAIC,OAAQ,GAAIC,MAAO,aCkBzDK,EAtCI,SAACC,GAAoC,IAAD,EACnD,OACa,OAAVA,QAAU,IAAVA,GAAA,UAAAA,EAAYC,iBAAZ,eAAuB5P,QAAO,EAC7B,cAAC0M,EAAA,EAAD,UACI,cAACA,EAAA,EAAKC,KAAN,UACI,qBAAKzN,UAAU,kBAAf,SACI,cAAC,sBAAD,CACI2G,OAAQ,kBACJ,eAAC+H,EAAA,EAAD,WACI,cAACiC,EAAA,EAAD,UACI,cAAC,QAAD,CACItM,KAAI,OAAEoM,QAAF,IAAEA,OAAF,EAAEA,EAAYC,UAClB9E,OAAQ,IACRgF,eAAgB,GAChBd,YAAa,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WACrEH,YAAY,EACZkB,0BAA0B,MAGlC,cAACF,EAAA,EAAD,UACI,cAAC,SAAD,CACItM,KAAI,OAAEoM,QAAF,IAAEA,OAAF,EAAEA,EAAYC,UAClB9E,OAAQ,IACRa,MAAO,IACPqE,aAAc,IACdhB,YAAa,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WACrEC,OAAQ,CAAEC,IAAK,GAAIE,OAAQ,GAAID,KAAM,EAAGE,MAAO,oBAQvE,IClCVY,EAAa,SAAC,GAA8B,IAAD,MAA5BrB,EAA4B,EAA5BA,aAAagB,EAAe,EAAfA,UAEhC,OACE,mCACM,cAAChC,EAAA,EAAD,UACF,cAAClB,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,eAACkB,EAAA,EAAIC,UAAL,CAAeC,iBAAiB,IAAhC,UACE,eAACC,EAAA,EAAD,CAAK1E,QAAQ,OAAOpK,UAAU,eAAe6H,GAAG,KAAhD,UACM,cAACiH,EAAA,EAAIC,KAAL,CAAUlH,GAAG,KAAb,SACE,eAACiH,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIC,SAAU,IAA7B,UACE,mBAAGlP,UAAWuK,IAAW,YAAa,UAAW,UACjD,sBAAMvK,UAAU,oBAAhB,0BAHmB,KAMvB,cAAC8O,EAAA,EAAIC,KAAL,CAAUlH,GAAG,KAAb,SACE,eAACiH,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIC,SAAU,IAA7B,UACE,mBAAGlP,UAAWuK,IAAW,YAAa,UAAW,UACjD,sBAAMvK,UAAU,oBAAhB,4BAHmB,KAMvB,cAAC8O,EAAA,EAAIC,KAAL,CAAUlH,GAAG,KAAb,SACE,eAACiH,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIC,SAAU,IAA7B,UACE,mBAAGlP,UAAWuK,IAAW,YAAa,UAAW,UACjD,sBAAMvK,UAAU,oBAAhB,sBAHmB,QAO7B,cAAC2O,EAAA,EAAIQ,QAAL,CAAanP,UAAU,yBAAvB,SACM,eAAC2O,EAAA,EAAIS,KAAL,CAAUF,SAAU,IAAMpN,GAAI,IAA9B,UACE,uBACF,oBAAI9B,UAAU,oBAAd,mBAAmC0Q,EAAU,UAA7C,aAAmC,EAAchD,WAC/C,cAAC,EAAD,CAAUgC,aAAcA,MAHc,OAM9C,cAACf,EAAA,EAAIQ,QAAL,CAAanP,UAAU,yBAAvB,SACM,eAAC2O,EAAA,EAAIS,KAAL,CAAUF,SAAU,IAAMpN,GAAI,IAA9B,UACA,oBAAI9B,UAAU,oBAAd,mBAAmC0Q,EAAU,UAA7C,aAAmC,EAAchD,WAC/C,cAAC,EAAD,CAAkBgC,aAAcA,MAFM,OAK9C,cAACf,EAAA,EAAIQ,QAAL,CAAanP,UAAU,yBAAvB,SACM,eAAC2O,EAAA,EAAIS,KAAL,CAAUF,SAAU,IAAMpN,GAAI,IAA9B,UACA,oBAAI9B,UAAU,oBAAd,mBAAmC0P,EAAa,UAAhD,aAAmC,EAAiBhC,WAClD,cAAC,EAAD,CAAYgD,UAAWA,MAFe,mBAa7C7F,kBAAKkG,GC8CLC,GArGG,SAAC,GAAwC,IAAvCtB,EAAsC,EAAtCA,aAEVuB,EAA0B,CAC5BtF,MAAO,CACHC,OAAQ,IACR7K,KAAM,OACNmQ,KAAM,CACF9E,SAAS,GAEbP,QAAS,CACLC,MAAM,IAGdS,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1CL,WAAY,CACRE,SAAS,GAEbI,OAAQ,CACJC,MAAO,CAAC,EAAG,GACX0E,MAAO,UAEXlD,MAAO,CACHtN,KAAM+O,EAAa0B,UACnBC,MAAO,OACP7L,MAAO,CACH8G,SAAU,SAGlBY,KAAM,CACFhI,IAAK,CACDqH,OAAQ,CAAC,cAAe,eACxBgC,QAAS,IAEbpB,YAAa,WAEjBmE,QAAS,CACL9L,MAAO,WACPyD,KAAM,GAEVyD,MAAO,CACHC,WAAY+C,EAAa9C,OAE7BC,OAAQ,CACJV,SAAU,MACVqC,gBAAiB,QACjB+C,UAAU,EACVzE,SAAU,GACVT,SAAU,GAEdmF,WAAY,CACR,CACIC,WAAY,GACZ9D,QAAS,CACLhC,MAAO,CACHE,QAAS,CACLC,MAAM,IAGde,OAAQ,CACJf,MAAM,OAQpB4F,EAA8B,CAClC,CACEtK,KAAM,YACN/C,KAAKqL,EAAarC,WAEtB,CACIjG,KAAM,YACN/C,KAAMqL,EAAapC,WAEvB,CACIlG,KAAM,YACN/C,KAAKqL,EAAanC,WAEtB,CACInG,KAAM,eACN/C,KAAMqL,EAAanC,YAIvB,OACI,cAACC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACA,oBAAIzN,UAAU,oBAAd,SAAmC0P,EAAahC,WAC5C,cAAC,IAAD,CACIC,QAASsD,EACTrD,OAAQ8D,EACR3Q,KAAK,OACLf,UAAU,sBC/Cf2R,GA/CE,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,SAmCTC,EAAgB,CAACtR,OAAOqR,EAASE,cAAevR,OAAOqR,EAASG,YAAaxR,OAAOqR,EAASI,gBAEnG,OACI,cAACxE,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIzN,UAAU,oBAAd,SAAmC4R,EAASlE,WAC5C,cAAC,IAAD,CAAOC,QAvCG,CAClBhC,MAAO,CACHC,OAAQ,IACR7K,KAAM,OAEVkR,OAAQ,CAAC,gBAAiB,cAAe,kBACzC1F,OAAQ,CAAC,UAAW,UAAW,WAC/BM,OAAQ,CACJf,MAAM,EACNK,SAAU,SACVqC,gBAAiB,SACjB0D,cAAe,SACfX,UAAU,EACVjF,SAAU,OACVD,QAAS,EACTS,SAAU,IAEd0E,WAAY,CACR,CACIC,WAAY,IACZ9D,QAAS,CACLhC,MAAO,CACHC,OAAQ,KAEZiB,OAAQ,CACJf,MAAM,OAciB8B,OAAQiE,EAAe9Q,KAAK,MAAM6K,OAAQ,IAAK5L,UAAU,sBCyDzFmS,GAlGI,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,YAEbC,EAAgB,CAChB1G,MAAO,CACHC,OAAQ,IACR7K,KAAM,OACNgN,SAAS,EACTlC,QAAS,CACLC,MAAM,IAGdU,OAAQ,CACJC,MAAO,CAAC,EAAG,EAAG,GACd0E,MAAO,UAEXpF,YAAa,CACTC,IAAK,CACDsG,YAAa,QAGrB/F,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1C+B,KAAM,CACFC,QAAS,CAAC,IAAM,IAAM,GACtBgE,SAAU,CACNC,eAAe,EACfC,MAAO,QACP1R,KAAM,WACN2R,YAAa,IACbC,UAAW,IACXC,MAAO,CAAC,EAAG,IAAK,IAAK,OAG7BX,OAAQG,EAAYxF,MACpB0E,QAAS,CACLrI,KAAM,GAEV4D,OAAQ,CACJC,SAAU,IAEdJ,MAAO,CACH3L,KAAM,QAEVmN,QAAS,CACL2E,QAAQ,EACRC,WAAW,EACX3E,EAAG,CACCC,UAAW,SAAUD,GACjB,MAAiB,qBAANA,EACAA,EAAE4E,QAAQ,GAAK,SAEnB5E,KAInBjB,KAAM,CACFC,YAAa,YAKf6F,EAAgB,CAClB,CACI5L,KAAM,YACNrG,KAAM,SACNsD,KAAK+N,EAAY/E,WAErB,CACIjG,KAAM,YACNrG,KAAM,OACNsD,KAAK+N,EAAY7E,WAErB,CACInG,KAAM,YACNrG,KAAM,OACNsD,KAAK+N,EAAY7E,WACnB,CACEnG,KAAM,YACNrG,KAAM,OACNsD,KAAM+N,EAAY7E,YAI1B,OACI,cAACC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACA,oBAAIzN,UAAU,oBAAd,SAAmCoS,EAAY1E,WAC3C,cAAC,IAAD,CACIC,QAAS0E,EACTzE,OAAQoF,EACRjS,KAAK,OACL6K,OAAQ,IACR5L,UAAU,sBChGxBiT,GAAW,CACf,CACEnR,GAAI,EACJmM,MAAO,YACPiF,KAAM,uBACNvS,KAAM,kCAER,CACEmB,GAAI,EACJmM,MAAO,cACPiF,KAAM,oBACNvS,KAAM,oDAGR,CACEmB,GAAI,EACJmM,MAAO,gBACPiF,KAAM,0BACNvS,KAAM,kDAIJwS,GAAkB,CACtB,CACErR,GAAI,EACJmM,MAAO,YACPiF,KAAM,uBACNvS,KAAM,kCAER,CACEmB,GAAI,EACJmM,MAAO,gCACPiF,KAAM,0BACNvS,KAAM,iDAER,CACEmB,GAAI,EACJmM,MAAO,gBACPiF,KAAM,0BACNvS,KAAM,kDACN,CACAmB,GAAI,EACJmM,MAAO,oBACPiF,KAAM,0BACNvS,KAAM,sDACN,CACAmB,GAAI,EACJmM,MAAO,cACPiF,KAAM,oBACNvS,KAAM,qDAIJyS,GAAe,CACnB,CACEtR,GAAI,EACJmM,MAAO,YACPiF,KAAM,uBACNvS,KAAM,kCAER,CACEmB,GAAI,EACJmM,MAAO,cACPiF,KAAM,oBACNvS,KAAM,qDAyBJ0S,GAAsB,CAC1B,CACEtO,OAAQ,OACRuO,SAAU,OACVjN,MAAM,GAER,CACItB,OAAQ,WACRuO,SAAU,WACVjN,MAAM,GAEV,CACItB,OAAQ,WACRuO,SAAU,WACVjN,MAAM,GACR,CACEtB,OAAQ,UACRuO,SAAU,UACVjN,MAAM,GACR,CACEtB,OAAQ,QACRuO,SAAU,QACVjN,MAAM,IAGNkN,GAAa,CACjB,CACExO,OAAQ,OACRuO,SAAU,OACVjN,MAAM,GAER,CACItB,OAAQ,UACRuO,SAAU,UACVjN,MAAM,GAEV,CACItB,OAAQ,YACRuO,SAAU,YACVjN,MAAM,GACR,CACEtB,OAAQ,YACRuO,SAAU,YACVjN,MAAM,GACR,CACEtB,OAAQ,eACRuO,SAAU,eACVjN,MAAM,GACR,CACEtB,OAAQ,YACRuO,SAAU,YACVjN,MAAM,GACR,CACEtB,OAAQ,QACRuO,SAAU,QACVjN,MAAM,IAGNmN,GAAe,CACnB,CACEzO,OAAQ,OACRuO,SAAU,OACVjN,MAAM,GAER,CACItB,OAAQ,WACRuO,SAAU,WACVjN,MAAM,GAEV,CACItB,OAAQ,uBACRuO,SAAU,WACVjN,MAAM,GACR,CACEtB,OAAQ,kBACRuO,SAAU,UACVjN,MAAM,GACR,CACEtB,OAAQ,QACRuO,SAAU,QACVjN,MAAM,IAGNoN,GAAe,CACnB,CACE1O,OAAQ,WACRuO,SAAU,UACVjN,MAAM,GAER,CACItB,OAAQ,YACRuO,SAAU,YACVjN,MAAM,GAEV,CACItB,OAAQ,YACRuO,SAAU,YACVjN,MAAM,GACR,CACEtB,OAAQ,eACRuO,SAAU,eACVjN,MAAM,GACR,CACEtB,OAAQ,YACRuO,SAAU,YACVjN,MAAM,IAoENqN,GAAmB,CACvB,CACE3O,OAAQ,UACRuO,SAAU,UACVjN,MAAM,GAER,CACItB,OAAQ,aACRuO,SAAU,YACVjN,MAAM,GACR,CACEtB,OAAQ,QACRuO,SAAU,QACVjN,MAAM,IAqBNsN,GAAyB,CAC7B,CACE5O,OAAQ,OACRuO,SAAU,OACVjN,MAAM,GAER,CACItB,OAAQ,WACRuO,SAAU,WACVjN,MAAM,GAEV,CACItB,OAAQ,UACRuO,SAAU,UACVjN,MAAM,GACR,CACEtB,OAAQ,QACRuO,SAAU,QACVjN,MAAM,IAINuN,GAAkB,CACtB,CACE7O,OAAQ,OACRuO,SAAU,OACVjN,MAAM,GAER,CACItB,OAAQ,WACRuO,SAAU,WACVjN,MAAM,GAEV,CACItB,OAAQ,UACRuO,SAAU,UACVjN,MAAM,GACR,CACEtB,OAAQ,WACRuO,SAAU,IACVjN,MAAM,GAEV,CACEtB,OAAQ,YACRuO,SAAU,IACVjN,MAAM,GAER,CACEtB,OAAQ,QACRuO,SAAU,QACVjN,MAAM,IAGJwN,GAAoB,CACxB,CACE9O,OAAQ,OACRuO,SAAU,OACVjN,MAAM,GAER,CACItB,OAAQ,WACRuO,SAAU,WACVjN,MAAM,GAEV,CACItB,OAAQ,UACRuO,SAAU,UACVjN,MAAM,GACR,CACEtB,OAAQ,IACRuO,SAAU,IACVjN,MAAM,GAEV,CACEtB,OAAQ,IACRuO,SAAU,IACVjN,MAAM,GACN,CACAtB,OAAQ,IACRuO,SAAU,IACVjN,MAAM,GACN,CACAtB,OAAQ,IACRuO,SAAU,IACVjN,MAAM,GACN,CACAtB,OAAQ,IACRuO,SAAU,IACVjN,MAAM,GACN,CACAtB,OAAQ,IACRuO,SAAU,IACVjN,MAAM,GACN,CACAtB,OAAQ,IACRuO,SAAU,IACVjN,MAAM,GACN,CACAtB,OAAQ,IACRuO,SAAU,IACVjN,MAAM,GAER,CACEtB,OAAQ,QACRuO,SAAU,QACVjN,MAAM,IC3NKyN,GA1KG,WAAO,IACfC,EAAsB1K,qBAAWC,KAAjCyK,kBAER,OACE,cAAC,IAAMxI,SAAP,UACE,cAACmD,EAAA,EAAD,UACE,cAAClB,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,eAACkB,EAAA,EAAIC,UAAL,CAAeC,iBAAiB,IAAhC,UACE,cAACC,EAAA,EAAD,CAAK1E,QAAQ,OAAOpK,UAAU,eAAe6H,GAAG,KAAhD,gBACGoL,SADH,IACGA,QADH,EACGA,GAAUxS,KAAI,SAACuT,EAAKtT,GACnB,OACE,cAACoO,EAAA,EAAIC,KAAL,CAAUlH,GAAG,KAAb,SACE,eAACiH,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIC,SAAU8E,EAAIlS,GAAjC,UACE,mBAAG9B,UAAWuK,IAAWyJ,EAAId,KAAM,YAAa,UAAW,UAC3D,sBAAMlT,UAAU,oBAAhB,SAAqCgU,EAAI/F,YAHtBvN,QAS7B,cAACiO,EAAA,EAAIQ,QAAL,CAAanP,UAAU,yBAAvB,gBACGiT,SADH,IACGA,QADH,EACGA,GAAUxS,KAAI,SAACuT,EAAKtT,GACnB,OACE,cAACiO,EAAA,EAAIS,KAAL,CAAUF,SAAU8E,EAAIlS,GAAIA,GAAIkS,EAAIlS,GAApC,SACE,cAAC4M,EAAA,EAAD,UACE,cAACiC,EAAA,EAAD,CAAKsD,GAAG,UAAR,SACI,WAAO,IAAD,oBACN,OAAQD,EAAIlS,IACV,KAAK,EACH,OACE,qCACE,cAAC4M,EAAA,EAAD,UACE,cAACiC,EAAA,EAAD,CAAKsD,GAAG,UAAR,SACE,cAAC,EAAD,QAGJ,cAACvF,EAAA,EAAD,UACE,cAACiC,EAAA,EAAD,CAAKsD,GAAG,UAAR,UACoB,OAAjBF,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBG,aAAnB,eAA0BpT,QACzB,GACE,cAAC,EAAD,CACEsD,QAASiP,GACThP,KAAI,OAAE0P,QAAF,IAAEA,OAAF,EAAEA,EAAmBG,MACzBrQ,YAAY,EACZD,cAAc,EACdjC,SAAU,IACVsC,WAAW,WAO3B,KAAK,EACH,OACE,qCACE,eAACyK,EAAA,EAAD,WACE,cAACiC,EAAA,EAAD,CAAKwD,GAAI,EAAT,UACoB,OAAjBJ,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBK,iBAAnB,eAA8BtT,QAC7B,GACE,cAAC,GAAD,CACE4O,aACEqE,EAAkBM,MAEpB3D,UACEqD,EAAkBK,cAK5B,cAACzD,EAAA,EAAD,CAAKwD,GAAI,EAAT,UACoB,OAAjBJ,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBtI,wBAAnB,mBACGmB,aADH,eACU9L,QAAS,GAChB,cAAC,EAAD,CACE2K,iBAAgB,OACdsI,QADc,IACdA,OADc,EACdA,EAAmBtI,wBAM/B,eAACiD,EAAA,EAAD,WACE,cAACiC,EAAA,EAAD,CAAKwD,GAAI,EAAT,UACoB,OAAjBJ,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBtI,wBAAnB,mBACGmB,aADH,eACU9L,QAAS,GAChB,cAAC,GAAD,CACE4O,aAAY,OACVqE,QADU,IACVA,OADU,EACVA,EAAmBtI,qBAK7B,cAACkF,EAAA,EAAD,CAAKwD,GAAI,EAAT,UACoB,OAAjBJ,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBO,gBAAnB,mBAA6B5G,gBAA7B,eACG5M,QAAS,GACT,cAAC,GAAD,CACE8Q,SAAQ,OACNmC,QADM,IACNA,OADM,EACNA,EAAmBO,gBAM/B,cAAC5F,EAAA,EAAD,UACE,cAACiC,EAAA,EAAD,WACoB,OAAjBoD,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBO,gBAAnB,mBAA6B5G,gBAA7B,eACG5M,QAAS,GACT,cAAC,GAAD,CACEsR,YAAW,OACT2B,QADS,IACTA,OADS,EACTA,EAAmBtI,0BAQrC,KAAK,EACH,OACE,qCACE,cAAC,EAAD,CACErH,QAASoP,GACTnP,KAAI,OAAE0P,QAAF,IAAEA,OAAF,EAAEA,EAAmBQ,QACzBpU,SAAU,EACV0D,YAAY,EACZD,cAAc,EACdjC,SAAU,IACVsC,WAAW,IAEb,cAAC,EAAD,CACEG,QAASqP,GACTpP,KAAI,OACF0P,QADE,IACFA,OADE,EACFA,EAAmBS,+BAErBrU,SAAU,EACV0D,YAAY,EACZD,cAAc,EACdjC,SAAU,IACVsC,WAAW,OAKnB,KAAK,EACH,OACE,mCACE,cAACyK,EAAA,EAAD,UACE,cAACiC,EAAA,EAAD,CAAKsD,GAAG,UAAR,SAAmB,UAI3B,QACE,MAAO,WA9HX,QAHqCvT,oBC/B3D+T,GAAoB,SAAC,GAA4C,IAA3ChJ,EAA0C,EAA1CA,iBAElBC,EAAmB,CACrBC,MAAO,CACHC,OAAQ,IACR7K,KAAM,MACN8K,QAAS,CACLC,MAAM,IAGdC,YAAa,CACTC,IAAK,CACDC,YAAY,EACZC,WAAY,CACRC,SAAU,SAItBD,WAAY,CACRE,SAAS,EACTC,SAAU,EACV7G,MAAO,CACH8G,SAAU,OACVC,OAAQ,CAAC,UAGjBA,OAAQ,CAAC,UAAW,WACpBC,OAAQ,CACJV,MAAM,EACNW,MAAO,EACPF,OAAQ,CAAC,SAGbG,MAAO,CACHC,WAAU,OAAElB,QAAF,IAAEA,OAAF,EAAEA,EAAkBmB,OAElCC,OAAQ,CACJC,SAAU,IAEdC,OAAQ,CACJC,MAAO,CACHC,OAAQ,SAGhBC,KAAM,CACFC,YAAa,YAKfC,EAAmB,CACvB,CACEhG,KAAM,YACN/C,KAAI,OAACoH,QAAD,IAACA,OAAD,EAACA,EAAkBiJ,WAE3B,CACItN,KAAM,WACN/C,KAAI,OAAEoH,QAAF,IAAEA,OAAF,EAAEA,EAAkBkJ,WAI5B,OACI,cAACnH,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACE,oBAAIzN,UAAU,oBAAd,gBAAmCyL,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAkBiC,WACnD,cAAC,IAAD,CAAOC,QAASjC,EAAkBkC,OAAQR,EAAkBrM,KAAK,MAAMf,UAAU,sBAKlF6K,kBAAK4J,ICSLG,GA/EW,SAAC,GAA4C,IAA3CnJ,EAA0C,EAA1CA,iBAElBqC,EAA0B,CAC5BnC,MAAO,CACHC,OAAQ,IACR7K,KAAM,MACNgN,SAAS,EACTlC,QAAS,CACLC,MAAM,IAGdC,YAAa,CACTC,IAAK,CACDC,YAAY,IAGpBO,OAAQ,CACJV,MAAM,GAEVY,MAAO,CACHC,WAAYlB,EAAiBmB,OAEjCoB,MAAO,CACHC,MAAO,CACHtN,UAAMiC,IAGd2J,OAAQ,CAAC,UAAW,WACpB2B,QAAS,CACLC,EAAG,CACCC,UAAW,SAAUC,GACjB,OAAOA,KAInBC,KAAM,CACFC,QAAS,GAEbxB,OAAQ,CACJC,MAAO,CACHC,OAAQ,SAGhBJ,OAAQ,CACJV,SAAU,MACVqC,gBAAiB,UAErBtB,KAAM,CACFC,YAAa,YAKfsB,EAA0B,CAC9B,CACErH,KAAM,WACN/C,KAAKoH,EAAiBkJ,UAE1B,CACIvN,KAAM,YACN/C,KAAMoH,EAAiBiJ,YAI3B,OACI,cAAClH,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACA,oBAAIzN,UAAU,oBAAd,SAAmCyL,EAAiBiC,WAChD,cAAC,IAAD,CACIC,QAASG,EACTF,OAAQa,EACR1N,KAAK,MACLf,UAAU,sBCzExB6U,GAA+B,SAAC,GAAoB,IAAnBnF,EAAkB,EAAlBA,aAGrC,OACE,mCACM,cAAChB,EAAA,EAAD,UACF,cAAClB,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,eAACkB,EAAA,EAAIC,UAAL,CAAeC,iBAAiB,IAAhC,UACE,eAACC,EAAA,EAAD,CAAK1E,QAAQ,OAAOpK,UAAU,eAAe6H,GAAG,KAAhD,UACM,cAACiH,EAAA,EAAIC,KAAL,CAAUlH,GAAG,KAAb,SACE,eAACiH,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIC,SAAU,IAA7B,UACE,mBAAGlP,UAAWuK,IAAW,YAAa,UAAW,UACjD,sBAAMvK,UAAU,oBAAhB,0BAHmB,KAMvB,cAAC8O,EAAA,EAAIC,KAAL,CAAUlH,GAAG,KAAb,SACE,eAACiH,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIC,SAAU,IAA7B,UACE,mBAAGlP,UAAWuK,IAAW,YAAa,UAAW,UACjD,sBAAMvK,UAAU,oBAAhB,4BAHmB,QAO7B,cAAC2O,EAAA,EAAIQ,QAAL,CAAanP,UAAU,yBAAvB,SACM,cAAC2O,EAAA,EAAIS,KAAL,CAAUF,SAAU,IAAMpN,GAAI,IAA9B,SAA6C,cAAC,GAAD,CAAmB2J,iBAAkBiE,KAA1C,OAE9C,cAACf,EAAA,EAAIQ,QAAL,CAAanP,UAAU,yBAAvB,SACM,cAAC2O,EAAA,EAAIS,KAAL,CAAUF,SAAU,IAAMpN,GAAI,IAA9B,SAA8C,cAAC,GAAD,CAAmB2J,iBAAkBiE,KAA3C,mBAS7C7E,kBAAKgK,ICnCdC,GAAkB,SAAC,GAAwC,IAAvCpF,EAAsC,EAAtCA,aAEhBuB,EAA0B,CAC5BtF,MAAO,CACHC,OAAQ,IACR7K,KAAM,OACNmQ,KAAM,CACF9E,SAAS,GAEbP,QAAS,CACLC,MAAM,IAGdS,OAAQ,CAAC,UAAW,WACpBL,WAAY,CACRE,SAAS,GAEbI,OAAQ,CACJC,MAAO,CAAC,EAAG,GACX0E,MAAO,UAEXlD,MAAO,CACHtN,KAAM+O,EAAa0B,UACnBC,MAAO,OACP7L,MAAO,CACH8G,SAAU,SAGlBY,KAAM,CACFhI,IAAK,CACDqH,OAAQ,CAAC,cAAe,eACxBgC,QAAS,IAEbpB,YAAa,WAEjBmE,QAAS,CACL9L,MAAO,WACPyD,KAAM,GAEVyD,MAAO,CACHC,WAAY+C,EAAa9C,OAE7BC,OAAQ,CACJV,SAAU,MACVqC,gBAAiB,QACjB+C,UAAU,EACVzE,SAAU,GACVT,SAAU,GAEdmF,WAAY,CACR,CACIC,WAAY,GACZ9D,QAAS,CACLhC,MAAO,CACHE,QAAS,CACLC,MAAM,IAGde,OAAQ,CACJf,MAAM,OAQpB4F,EAA8B,CAClC,CACEtK,KAAM,YACN/C,KAAKqL,EAAagF,WAEtB,CACItN,KAAM,WACN/C,KAAMqL,EAAaiF,WAIvB,OACI,cAACnH,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACA,oBAAIzN,UAAU,oBAAd,SAAmC0P,EAAahC,WAC5C,cAAC,IAAD,CACIC,QAASsD,EACTrD,OAAQ8D,EACR3Q,KAAK,OACLf,UAAU,sBAOf6K,kBAAKiK,ICQLC,GArGW,SAAC,GAAwC,IAAvCrF,EAAsC,EAAtCA,aAElBuB,EAA0B,CAC5BtF,MAAO,CACHC,OAAQ,IACR7K,KAAM,OACNmQ,KAAM,CACF9E,SAAS,GAEbP,QAAS,CACLC,MAAM,IAGdS,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1CL,WAAY,CACRE,SAAS,GAEbI,OAAQ,CACJC,MAAO,CAAC,EAAG,GACX0E,MAAO,UAEXlD,MAAO,CACHtN,KAAM+O,EAAa0B,UACnBC,MAAO,OACP7L,MAAO,CACH8G,SAAU,SAGlBY,KAAM,CACFhI,IAAK,CACDqH,OAAQ,CAAC,cAAe,eACxBgC,QAAS,IAEbpB,YAAa,WAEjBmE,QAAS,CACL9L,MAAO,WACPyD,KAAM,GAEVyD,MAAO,CACHC,WAAY+C,EAAa9C,OAE7BC,OAAQ,CACJV,SAAU,MACVqC,gBAAiB,QACjB+C,UAAU,EACVzE,SAAU,GACVT,SAAU,GAEdmF,WAAY,CACR,CACIC,WAAY,GACZ9D,QAAS,CACLhC,MAAO,CACHE,QAAS,CACLC,MAAM,IAGde,OAAQ,CACJf,MAAM,OAQpB4F,EAA8B,CAClC,CACEtK,KAAM,IACN/C,KAAKqL,EAAasF,KAEtB,CACI5N,KAAM,IACN/C,KAAMqL,EAAauF,KAEvB,CACI7N,KAAM,IACN/C,KAAKqL,EAAawF,MAEtB,CACI9N,KAAM,IACN/C,KAAMqL,EAAayF,SAIvB,OACI,cAAC3H,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACA,oBAAIzN,UAAU,oBAAd,SAAmC0P,EAAahC,WAC5C,cAAC,IAAD,CACIC,QAASsD,EACTrD,OAAQ8D,EACR3Q,KAAK,OACLf,UAAU,sBC9FxBoV,GAAqB,SAAC,GAAwC,IAAvC1F,EAAsC,EAAtCA,aAErB2C,EAAgB,CAChB1G,MAAO,CACHC,OAAQ,IACR7K,KAAM,OACNgN,SAAS,EACTlC,QAAS,CACLC,MAAM,IAGdU,OAAQ,CACJC,MAAO,CAAC,EAAG,EAAG,GACd0E,MAAO,UAEXpF,YAAa,CACTC,IAAK,CACDsG,YAAa,QAGrB/F,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1C+B,KAAM,CACFC,QAAS,CAAC,IAAM,IAAM,GACtBgE,SAAU,CACNC,eAAe,EACfC,MAAO,QACP1R,KAAM,WACN2R,YAAa,IACbC,UAAW,IACXC,MAAO,CAAC,EAAG,IAAK,IAAK,OAG7BX,OAAQvC,EAAa9C,MACrB0E,QAAS,CACLrI,KAAM,GAEV4D,OAAQ,CACJC,SAAU,IAEdJ,MAAO,CACH3L,KAAM,QAEVmN,QAAS,CACL2E,QAAQ,EACRC,WAAW,EACX3E,EAAG,CACCC,UAAW,SAAUD,GACjB,MAAiB,qBAANA,EACAA,EAAE4E,QAAQ,GAAK,SAEnB5E,KAInBjB,KAAM,CACFC,YAAa,YAKf6F,EAAgB,CAClB,CACI5L,KAAM,IACNrG,KAAM,SACNsD,KAAKqL,EAAasF,KAEtB,CACI5N,KAAM,IACNrG,KAAM,OACNsD,KAAKqL,EAAauF,KAEtB,CACI7N,KAAM,IACNrG,KAAM,OACNsD,KAAKqL,EAAawF,MACpB,CACE9N,KAAM,IACNrG,KAAM,OACNsD,KAAMqL,EAAayF,SAI3B,OACI,cAAC3H,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACA,oBAAIzN,UAAU,oBAAd,SAAmC0P,EAAahC,WAChD,oBAAI1N,UAAU,oBAAd,0BACI,cAAC,IAAD,CACI2N,QAAS0E,EACTzE,OAAQoF,EACRjS,KAAK,OACL6K,OAAQ,IACR5L,UAAU,sBAOf6K,kBAAKuK,ICyELC,GA7JM,WAAO,IACnBC,EAAwBjM,qBAAWC,KAAnCgM,qBACT,OACI,cAAC,IAAM/J,SAAP,UACE,cAACmD,EAAA,EAAD,UACE,cAAClB,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,eAACkB,EAAA,EAAIC,UAAL,CAAeC,iBAAiB,IAAhC,UACE,cAACC,EAAA,EAAD,CAAK1E,QAAQ,OAAOpK,UAAWuK,IAAW,gBAAiB1C,GAAG,KAA9D,gBACGsL,SADH,IACGA,QADH,EACGA,GAAiB1S,KAAI,SAACuT,EAAKtT,GAC1B,OACE,cAACoO,EAAA,EAAIC,KAAL,CAAUlH,GAAG,KAAb,SACE,eAACiH,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIC,SAAU8E,EAAIlS,GAAjC,UACE,mBAAG9B,UAAWuK,IAAWyJ,EAAId,KAAM,YAAa,UAAW,UAC3D,sBAAMlT,UAAWuK,IAAW,qBAA5B,SAAmDyJ,EAAI/F,YAHpCvN,QAU7B,cAACiO,EAAA,EAAIQ,QAAL,CAAanP,UAAWuK,IAAW,0BAAnC,gBACG4I,SADH,IACGA,QADH,EACGA,GAAiB1S,KAAI,SAACuT,EAAKtT,GAC1B,OACE,cAACiO,EAAA,EAAIS,KAAL,CAAUF,SAAU8E,EAAIlS,GAAIA,GAAIkS,EAAIlS,GAApC,SACE,cAAC4M,EAAA,EAAD,UACE,cAACiC,EAAA,EAAD,CAAKsD,GAAG,UAAR,SACI,WAAO,IAAD,0BACN,OAAQD,EAAIlS,IACV,KAAK,EACH,OAAS,qCACP,cAAC4M,EAAA,EAAD,UACA,cAACiC,EAAA,EAAD,CAAKsD,GAAG,UAAR,SACA,cAAC,EAAD,QAGC,cAACvF,EAAA,EAAD,UACA,cAACiC,EAAA,EAAD,CAAKsD,GAAG,UAAR,UAEiB,OAApBqB,QAAoB,IAApBA,GAAA,UAAAA,EAAsBpB,aAAtB,eAA6BpT,QAAQ,GACnC,cAAC,EAAD,CACMsD,QAASuP,GACTtP,KAAI,OAAEiR,QAAF,IAAEA,OAAF,EAAEA,EAAsBpB,MAC5BrQ,YAAY,EACZD,cAAc,EACdjC,SAAU,IACVsC,WAAW,WAMrB,KAAK,EACH,OAAQ,yEACc,OAApBqR,QAAoB,IAApBA,GAAA,UAAAA,EAAsBC,gBAAtB,eAAgCzU,QAAQ,GACtC,cAAC,EAAD,CACMsD,QAASyP,GACTxP,KAAI,OAAEiR,QAAF,IAAEA,OAAF,EAAEA,EAAsBC,SAC5B1R,YAAY,EACZD,cAAc,EACdjC,SAAU,IACVsC,WAAW,OAGvB,KAAK,EACD,OAAQ,yEACc,OAApBqR,QAAoB,IAApBA,GAAA,UAAAA,EAAsBE,cAAtB,eAA8B1U,QAAQ,GACpC,cAAC,EAAD,CACMsD,QAASwP,GACTvP,KAAI,OAAEiR,QAAF,IAAEA,OAAF,EAAEA,EAAsBE,OAC5B3R,YAAY,EACZD,cAAc,EACdjC,SAAU,IACVsC,WAAW,OAGf,KAAK,EACH,OAAQ,yEACc,OAApBqR,QAAoB,IAApBA,GAAA,UAAAA,EAAsBG,kBAAtB,eAAkC3U,QAAQ,GACxC,cAAC,EAAD,CACMsD,QAASsP,GACTrP,KAAI,OAAEiR,QAAF,IAAEA,OAAF,EAAEA,EAAsBG,WAC5B5R,YAAY,EACZD,cAAc,EACdjC,SAAU,IACVsC,WAAW,OAIjC,KAAK,EACC,OAA4C,qCAC1C,eAACyK,EAAA,EAAD,WACI,cAACiC,EAAA,EAAD,CAAKwD,GAAI,EAAT,UAGsB,OAApBmB,QAAoB,IAApBA,GAAA,UAAAA,EAAsBjB,aAAtB,eAA6BvT,QAAQ,GACjC,cAAC,GAAD,CAAY4O,aAAY,OAAE4F,QAAF,IAAEA,OAAF,EAAEA,EAAsBjB,MAAO3D,UAAS,OAAE4E,QAAF,IAAEA,OAAF,EAAEA,EAAsBI,UAG9F,cAAC/E,EAAA,EAAD,CAAKwD,GAAI,EAAT,UAEwB,OAApBmB,QAAoB,IAApBA,GAAA,UAAAA,EAAsBK,0BAAtB,mBAA0C/I,aAA1C,eAAiD9L,QAAQ,GACvD,cAAC,GAAD,CAA8B4O,aAAY,OAAE4F,QAAF,IAAEA,OAAF,EAAEA,EAAsBK,0BAK5E,eAACjH,EAAA,EAAD,WACI,cAACiC,EAAA,EAAD,CAAKwD,GAAI,EAAT,UAEwB,OAApBmB,QAAoB,IAApBA,GAAA,UAAAA,EAAsBK,0BAAtB,mBAA0C/I,aAA1C,eAAiD9L,QAAQ,GACvD,cAAC,GAAD,CAAiB4O,aAAY,OAAE4F,QAAF,IAAEA,OAAF,EAAEA,EAAsBK,uBAI3D,cAAChF,EAAA,EAAD,CAAKwD,GAAI,EAAT,UAEwB,OAApBmB,QAAoB,IAApBA,GAAA,UAAAA,EAAsBM,4BAAtB,mBAA4ChJ,aAA5C,eAAmD9L,QAAQ,GACzD,cAAC,GAAD,CAAmB4O,aAAY,OAAE4F,QAAF,IAAEA,OAAF,EAAEA,EAAsBM,yBAI3D,cAACjF,EAAA,EAAD,CAAKwD,GAAI,GAAT,UAEsB,OAApBmB,QAAoB,IAApBA,GAAA,UAAAA,EAAsBM,4BAAtB,mBAA4ChJ,aAA5C,eAAmD9L,QAAQ,GACzD,cAAC,GAAD,CAAoB4O,aAAY,OAAE4F,QAAF,IAAEA,OAAF,EAAEA,EAAsBM,4BAK9D,cAAClH,EAAA,EAAD,UACF,cAACiC,EAAA,EAAD,SAIV,QACE,MACE,WA9GN,QAHqCjQ,oBC+DlDmV,GA7FG,WAAO,IACbC,EAAsBzM,qBAAWC,KAAjCwM,kBACR,OACI,cAAC,IAAMvK,SAAP,UACI,cAACmD,EAAA,EAAD,UACI,cAAClB,EAAA,EAAD,UACI,cAACA,EAAA,EAAKC,KAAN,UACI,eAACkB,EAAA,EAAIC,UAAL,CAAeC,iBAAiB,IAAhC,UACI,cAACC,EAAA,EAAD,CAAK1E,QAAQ,OAAOpK,UAAWuK,IAAW,gBAAiB1C,GAAG,KAA9D,gBACKuL,SADL,IACKA,QADL,EACKA,GAAc3S,KAAI,SAACuT,EAAKtT,GACrB,OACI,cAACoO,EAAA,EAAIC,KAAL,CAAUlH,GAAG,KAAb,SACI,eAACiH,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIC,SAAU8E,EAAIlS,GAAjC,UACI,mBAAG9B,UAAWuK,IAAWyJ,EAAId,KAAM,YAAa,UAAW,UAC3D,sBAAMlT,UAAWuK,IAAW,qBAA5B,SAAmDyJ,EAAI/F,YAHxCvN,QASnC,cAACiO,EAAA,EAAIQ,QAAL,CAAanP,UAAWuK,IAAW,0BAAnC,gBACK6I,SADL,IACKA,QADL,EACKA,GAAc3S,KAAI,SAACuT,EAAKtT,GACrB,OACI,cAACiO,EAAA,EAAIS,KAAL,CAAUF,SAAU8E,EAAIlS,GAAIA,GAAIkS,EAAIlS,GAApC,SACI,cAAC4M,EAAA,EAAD,UACI,cAACiC,EAAA,EAAD,CAAKsD,GAAG,UAAR,SACM,WAAO,IAAD,EACJ,OAAQD,EAAIlS,IACR,KAAK,EACD,OACI,qCACI,cAAC4M,EAAA,EAAD,UACI,cAACiC,EAAA,EAAD,CAAKsD,GAAG,UAAR,SACI,cAAC,EAAD,QAGR,cAACvF,EAAA,EAAD,UACI,cAACiC,EAAA,EAAD,CAAKsD,GAAG,UAAR,UACsB,OAAjB6B,QAAiB,IAAjBA,GAAA,UAAAA,EAAmB5B,aAAnB,eAA0BpT,QACvB,GACA,cAAC,EAAD,CACIsD,QAASsP,GACTrP,KAAI,OAAEyR,QAAF,IAAEA,OAAF,EAAEA,EAAmB5B,MACzBrQ,YAAY,EACZD,cAAc,EACdjC,SAAU,IACVsC,WAAW,WAOvC,KAAK,EAEL,KAAK,EACD,OAAO,6BAEX,KAAK,EACD,OACI,qCACI,eAACyK,EAAA,EAAD,WACI,cAACiC,EAAA,EAAD,CAAKwD,GAAI,IACT,cAACxD,EAAA,EAAD,CAAKwD,GAAI,OAEb,eAACzF,EAAA,EAAD,WACI,cAACiC,EAAA,EAAD,CAAKwD,GAAI,IACT,cAACxD,EAAA,EAAD,CAAKwD,GAAI,IACT,cAACxD,EAAA,EAAD,CAAKwD,GAAI,QAEb,cAACzF,EAAA,EAAD,UACI,cAACiC,EAAA,EAAD,SAIhB,QACI,MAAO,WAlDjB,QAH+BjQ,oBC/B/EqV,GAAmB,SAAC,GAAoB,IAAnBrG,EAAkB,EAAlBA,aAKpBhE,EAAmB,CACxBC,MAAO,CACHC,OAAQ,IACR7K,KAAM,MACN8K,QAAS,CACLC,MAAM,IAGdC,YAAa,CACTC,IAAK,CACDC,YAAY,EACZC,WAAY,CACRC,SAAU,SAItBD,WAAY,CACRE,SAAS,EACTC,SAAU,EACV7G,MAAO,CACH8G,SAAU,OACVC,OAAQ,CAAC,UAGjBA,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAChEC,OAAQ,CACJV,MAAM,EACNW,MAAO,EACPF,OAAQ,CAAC,SAGbG,MAAO,CACHC,WAAY+C,EAAasG,SAE7BnJ,OAAQ,CACJC,SAAU,IAEdC,OAAQ,CACJC,MAAO,CACHC,OAAQ,SAGhBC,KAAM,CACFC,YAAa,YAGb8I,EAAoB,CACxBtK,MAAO,CACLC,OAAQ,IACR7K,KAAM,MACNgN,SAAS,EACTlC,QAAS,CACLC,MAAM,IAGdC,YAAa,CACTC,IAAK,CACDC,YAAY,IAGpBO,OAAQ,CACJV,MAAM,GAEVY,MAAO,CACHC,WAAY+C,EAAawG,QACzBjE,OAAQ,CACJ7D,UAAW,SAAUC,GACjB,OAAOA,EAAM,OAIzBL,MAAO,CACHC,MAAO,CACHtN,UAAMiC,IAGd2J,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,WACrD2B,QAAS,CACLC,EAAG,CACCC,UAAW,SAAUC,GACjB,OAAOA,EAAM,OAIzBC,KAAM,CACFC,QAAS,GAEbxB,OAAQ,CACJC,MAAO,CACHC,OAAQ,SAGhBJ,OAAQ,CACJV,SAAU,MACVqC,gBAAiB,UAErBtB,KAAM,CACFC,YAAa,YAIXC,EAAmBsC,EAAayG,SAASC,kBACzCC,EAAoB3G,EAAayG,SAASE,kBAGhD,OAFAC,QAAQC,IAAI7G,EAAayG,UAGrB,mCACM,cAACzH,EAAA,EAAD,UACF,cAAClB,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,eAACkB,EAAA,EAAIC,UAAL,CAAeC,iBAAiB,IAAhC,UACE,eAACC,EAAA,EAAD,CAAK1E,QAAQ,OAAOpK,UAAU,eAAe6H,GAAG,KAAhD,UACM,cAACiH,EAAA,EAAIC,KAAL,CAAUlH,GAAG,KAAb,SACE,eAACiH,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIC,SAAU,IAA7B,UACE,mBAAGlP,UAAWuK,IAAW,YAAa,UAAW,UACjD,sBAAMvK,UAAU,oBAAhB,0BAHmB,KAMvB,cAAC8O,EAAA,EAAIC,KAAL,CAAUlH,GAAG,KAAb,SACE,eAACiH,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIC,SAAU,IAA7B,UACE,mBAAGlP,UAAWuK,IAAW,YAAa,UAAW,UACjD,sBAAMvK,UAAU,oBAAhB,sBAHmB,KAMvB,cAAC8O,EAAA,EAAIC,KAAL,CAAUlH,GAAG,KAAb,SACE,eAACiH,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIC,SAAU,IAA7B,UACE,mBAAGlP,UAAWuK,IAAW,YAAa,UAAW,UACjD,sBAAMvK,UAAU,oBAAhB,4BAHmB,QAO7B,cAAC2O,EAAA,EAAIQ,QAAL,CAAanP,UAAU,yBAAvB,SACM,cAAC2O,EAAA,EAAIS,KAAL,CAAUF,SAAU,IAAMpN,GAAI,IAA9B,SACA,eAAC4M,EAAA,EAAD,WACG,eAACiC,EAAA,EAAD,CAAKwD,GAAI,EAAT,UACC,oBAAInU,UAAU,oBAAd,gBAAmC0P,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAcsG,UACjD,cAAC,IAAD,CAAOrI,QAASjC,EAAkBkC,OAAQR,EAAkBrM,KAAK,MAAMf,UAAU,mBAEjF,eAAC2Q,EAAA,EAAD,CAAKwD,GAAI,EAAT,UACA,oBAAInU,UAAU,oBAAd,gBAAmC0P,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAcwG,UACjD,cAAC,IAAD,CAAOvI,QAASsI,EAAmBrI,OAAQyI,EAAmBtV,KAAK,MAAMf,UAAU,uBAR/C,OAc9C,cAAC2O,EAAA,EAAIQ,QAAL,CAAanP,UAAU,yBAAvB,SACM,cAAC2O,EAAA,EAAIS,KAAL,CAAUF,SAAU,IAAMpN,GAAI,IAA9B,SACA,eAAC4M,EAAA,EAAD,WACG,cAACiC,EAAA,EAAD,CAAKwD,GAAI,EAAT,SACC,oBAAInU,UAAU,oBAAd,0BAGA,cAAC2Q,EAAA,EAAD,CAAKwD,GAAI,EAAT,SACA,oBAAInU,UAAU,oBAAd,+BAPoC,OAa9C,cAAC2O,EAAA,EAAIQ,QAAL,CAAanP,UAAU,yBAAvB,SACM,cAAC2O,EAAA,EAAIS,KAAL,CAAUF,SAAU,IAAMpN,GAAI,IAA9B,SACA,oBAAI9B,UAAU,oBAAd,gBAAmC0P,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAcwG,WADT,mBAa7CrL,kBAAKkL,ICxDLS,GAjHG,WAAO,IAClBC,EAAqBpN,qBAAWC,KAAhCmN,kBAEP,OACI,cAAC,IAAMlL,SAAP,UACE,cAACmD,EAAA,EAAD,UACE,cAAClB,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,eAACkB,EAAA,EAAIC,UAAL,CAAeC,iBAAiB,IAAhC,UACE,cAACC,EAAA,EAAD,CAAK1E,QAAQ,OAAOpK,UAAWuK,IAAW,gBAAiB1C,GAAG,KAA9D,gBACGuL,SADH,IACGA,QADH,EACGA,GAAc3S,KAAI,SAACuT,EAAKtT,GACvB,OACE,cAACoO,EAAA,EAAIC,KAAL,CAAUlH,GAAG,KAAb,SACE,eAACiH,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIC,SAAU8E,EAAIlS,GAAjC,UACE,mBAAG9B,UAAWuK,IAAWyJ,EAAId,KAAM,YAAa,UAAW,UAC3D,sBAAMlT,UAAWuK,IAAW,qBAA5B,SAAmDyJ,EAAI/F,YAHpCvN,QAS7B,cAACiO,EAAA,EAAIQ,QAAL,CAAanP,UAAWuK,IAAW,0BAAnC,gBACG6I,SADH,IACGA,QADH,EACGA,GAAc3S,KAAI,SAACuT,EAAKtT,GACvB,OACE,cAACiO,EAAA,EAAIS,KAAL,CAAUF,SAAU8E,EAAIlS,GAAIA,GAAIkS,EAAIlS,GAApC,SACE,cAAC4M,EAAA,EAAD,UACE,cAACiC,EAAA,EAAD,CAAKsD,GAAG,UAAR,SACI,WAAO,IAAD,IACN,OAAQD,EAAIlS,IACV,KAAK,EACH,OAAS,qCACP,cAAC4M,EAAA,EAAD,UACA,cAACiC,EAAA,EAAD,CAAKsD,GAAG,UAAR,SACA,cAAC,EAAD,QAGF,cAACvF,EAAA,EAAD,UACG,cAACiC,EAAA,EAAD,CAAKsD,GAAG,UAAR,UAEc,OAAjBwC,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBvC,aAAnB,eAA0BpT,QAAQ,GAChC,cAAC,EAAD,CACMsD,QAASsP,GACTrP,KAAI,OAAEoS,QAAF,IAAEA,OAAF,EAAEA,EAAmBvC,MACzBrQ,YAAY,EACZD,cAAc,EACdjC,SAAU,IACVsC,WAAW,WAMrB,KAAK,EACH,OAAQ,oCACW,OAAjBwS,QAAiB,IAAjBA,GAAA,UAAAA,EAAmBvC,aAAnB,eAA0BpT,QAAQ,GAChC,cAAC,GAAD,CAAkB4O,aAAc+G,MACtC,KAAK,EACD,OAAQ,6BAIZ,KAAK,EACC,OAA4C,qCAC1C,eAAC/H,EAAA,EAAD,WACI,cAACiC,EAAA,EAAD,CAAKwD,GAAI,IAGT,cAACxD,EAAA,EAAD,CAAKwD,GAAI,OAKb,eAACzF,EAAA,EAAD,WACI,cAACiC,EAAA,EAAD,CAAKwD,GAAI,IAIT,cAACxD,EAAA,EAAD,CAAKwD,GAAI,IAIP,cAACxD,EAAA,EAAD,CAAKwD,GAAI,QAKX,cAACzF,EAAA,EAAD,UACF,cAACiC,EAAA,EAAD,SAIV,QACE,MACE,WAlEN,QAHqCjQ,oBChC3DgW,GAAe,WAAO,IAAD,EAKnBrN,qBAAWC,KAHXC,EAFmB,EAEnBA,mBACAC,EAHmB,EAGnBA,UACAC,EAJmB,EAInBA,UAJmB,EAYrBJ,qBAAWK,KALXC,EAPqB,EAOrBA,UACAG,EARqB,EAQrBA,YACAG,EATqB,EASrBA,aACAC,EAVqB,EAUrBA,UACAyM,EAXqB,EAWrBA,cAkBIC,EAXgBC,uBAAY,WAKhC,IAJA,IAAMC,EAAQ,GAILC,EAHS,OAGSA,GAFX,OAE4BA,IAC1CD,EAAMhS,KAAKiS,GAGb,OAAOD,IACN,GACYE,GACf,OACI,mCACI,cAAC7M,EAAA,EAAD,CAAOC,QAAS,UAAhB,SACI,cAACzC,EAAA,EAAD,CAAM0C,YAAU,EAACH,UAAWA,EAAWI,SAAUL,EAAjD,SACI,eAACtC,EAAA,EAAKc,MAAN,CAAYzI,UAAWuK,IAAW,0BAAlC,UACI,eAAC5C,EAAA,EAAKc,MAAN,CAAYzI,UAAWuK,IAAW,YAAlC,UACI,eAAC,EAAD,CACIxJ,KAAK,SACLoH,MAAM,OACNf,KAAK,QACLpH,UAAU,eACVqI,eAAgB,YAEhBvG,GAAG,QACH0I,UAAQ,EACRpK,SAAU,SAACC,GACPyJ,EAAW,WAAX,cAAeH,GAAf,QAA0BtJ,MAVlC,UAYI,wBAAQJ,MAAM,IAAd,+BACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,YAAd,yBARI,SAUR,cAAC0H,EAAA,EAAKC,QAAQe,SAAd,6BAEJ,cAAChB,EAAA,EAAKc,MAAN,CAAYzI,UAAWuK,IAAW,YAAlC,SACR,eAAC5C,EAAA,EAAKc,MAAN,CAAYzI,UAAU,kBAAtB,UACQ,eAAC,EAAD,CACKe,KAAK,SACLoH,MAAM,SACNf,KAAK,QACLpH,UAAU,eACVqI,eAAgB,YAEhBvG,GAAG,QACH0I,UAAQ,EACRpK,SAAU,SAACC,GACVsW,EAAa,WAAb,cAAiBhN,GAAjB,QAA4BtJ,MAVlC,UAYQ,wBAAQJ,MAAM,IAAd,kCAZR,OAaS2W,QAbT,IAaSA,OAbT,EAaSA,EAAQnW,KAAI,SAACgK,EAAG5D,GACb,OACI,wBAAQ5G,MAAOwK,EAAf,SACKA,GADkB5D,EAAI,QATlC,SAeX,cAACc,EAAA,EAAKC,QAAQe,SAAd,CAAuB5H,KAAK,UAA5B,wDAKH,cAAC4G,EAAA,EAAKc,MAAN,CAAYzI,UAAWuK,IAAW,YAAlC,SACS,eAAC5C,EAAA,EAAKc,MAAN,CAAYzI,UAAU,kBAAtB,UACI,cAAC2H,EAAA,EAAKC,QAAN,CACI7G,KAAK,SACLoH,MAAM,YACNlI,MAAOwJ,EACPrC,KAAK,YAELtF,GAAG,aADC,aAGR,cAAC6F,EAAA,EAAKC,QAAN,CACI7G,KAAK,SACLoH,MAAM,qBACNlI,MAAOsJ,EACPnC,KAAK,qBAELtF,GAAG,sBADC,sBAGR,cAAC6F,EAAA,EAAKC,QAAQe,SAAd,CAAuB5H,KAAK,UAA5B,gDAKR,cAAC4G,EAAA,EAAKc,MAAN,CAAYzI,UAAU,WAAtB,SACI,sBAAKA,UAAU,kBAAf,UACI,uBAAOA,UAAU,aAAjB,SAA+B,KADnC,IAC+C,uBAC1CwJ,EACG,cAACoB,EAAA,EAAD,CAAQ7J,KAAK,SAASqJ,QAAQ,UAA9B,uBAIA,eAACQ,EAAA,EAAD,CAAQ5B,MAAM,UAAU5H,UAAQ,EAAhC,UACI,cAAC,EAAD,CAASpB,UAAU,oBAAoB+I,IAAI,OAAOC,MAAM,UACxD,sBAAMhJ,UAAU,kBAAhB,0CAWzB6K,kBAAK6L,IChIdO,GAAe,SAAC,GAAoB,IAAnBvH,EAAkB,EAAlBA,aACvB4G,QAAQC,IAAI7G,GACZ,IAAMwH,EAAgB,CAClBvL,MAAO,CACHC,OAAQ,IACR7K,KAAM,OAEVkR,OAAQvC,EAAauC,OACrB1F,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAChEM,OAAQ,CACJf,MAAM,EACNK,SAAU,SACVqC,gBAAiB,SACjB0D,cAAe,SACfX,UAAU,EACVjF,SAAU,OACVD,QAAS,EACTS,SAAU,IAEd0E,WAAY,CACR,CACIC,WAAY,IACZ9D,QAAS,CACLhC,MAAO,CACHC,OAAQ,KAEZiB,OAAQ,CACJf,MAAM,OAMpBqL,EAAiB,CACrBxL,MAAO,CACHC,OAAQ,IACR7K,KAAM,OAEVkR,OAAQvC,EAAauC,OACrB1F,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAChEM,OAAQ,CACJf,MAAM,EACNK,SAAU,SACVqC,gBAAiB,SACjB0D,cAAe,SACfX,UAAU,EACVjF,SAAU,OACVD,QAAS,EACTS,SAAU,IAEd0E,WAAY,CACR,CACIC,WAAY,IACZ9D,QAAS,CACLhC,MAAO,CACHC,OAAQ,KAEZiB,OAAQ,CACJf,MAAM,OAOlBsL,EAAiB1H,EAAa0H,eAC9BC,EAAiB3H,EAAa2H,eAE9B3L,EAAmB,CACvBC,MAAO,CACHC,OAAQ,IACR7K,KAAM,MACN8K,QAAS,CACLC,MAAM,IAGdC,YAAa,CACTC,IAAK,CACDC,YAAY,EACZC,WAAY,CACRC,SAAU,SAItBD,WAAY,CACRE,SAAS,EACTC,SAAU,EACV7G,MAAO,CACH8G,SAAU,OACVC,OAAQ,CAAC,UAGjBA,OAAQ,CAAC,UAAW,UAAW,UAAU,UAAW,UAAW,WAC/DC,OAAQ,CACJV,MAAM,EACNW,MAAO,EACPF,OAAQ,CAAC,SAGbG,MAAO,CACHC,WAAY+C,EAAa9C,OAE7BC,OAAQ,CACJC,SAAU,IAEdC,OAAQ,CACJC,MAAO,CACHC,OAAQ,SAGhBC,KAAM,CACFC,YAAa,YAKbC,EAAmBsC,EAAatC,iBAEhCU,EAA0B,CAC9BnC,MAAO,CACHC,OAAQ,IACR7K,KAAM,MACNgN,SAAS,EACTlC,QAAS,CACLC,MAAM,IAGdC,YAAa,CACTC,IAAK,CACDC,YAAY,IAGpBO,OAAQ,CACJV,MAAM,GAEVY,MAAO,CACHC,WAAY+C,EAAa9C,MACzBqF,OAAQ,CACJ7D,UAAW,SAAUC,GACjB,OAAOA,EAAM,OAIzBL,MAAO,CACHC,MAAO,CACHtN,UAAMiC,IAGd2J,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAChE2B,QAAS,CACLC,EAAG,CACCC,UAAW,SAAUC,GACjB,OAAOA,EAAM,OAIzBC,KAAM,CACFC,QAAS,GAEbxB,OAAQ,CACJC,MAAO,CACHC,OAAQ,SAGhBJ,OAAQ,CACJV,SAAU,MACVqC,gBAAiB,UAErBtB,KAAM,CACFC,YAAa,YAInB,OACI,mCACM,cAACuB,EAAA,EAAD,UACF,cAAClB,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,eAACkB,EAAA,EAAIC,UAAL,CAAeC,iBAAiB,IAAhC,UACE,eAACC,EAAA,EAAD,CAAK1E,QAAQ,OAAOpK,UAAU,eAAe6H,GAAG,KAAhD,UACM,cAACiH,EAAA,EAAIC,KAAL,CAAUlH,GAAG,KAAb,SACE,eAACiH,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIC,SAAU,IAA7B,UACE,mBAAGlP,UAAWuK,IAAW,YAAa,UAAW,UACjD,sBAAMvK,UAAU,oBAAhB,0BAHmB,KAMvB,cAAC8O,EAAA,EAAIC,KAAL,CAAUlH,GAAG,KAAb,SACE,eAACiH,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIC,SAAU,IAA7B,UACE,mBAAGlP,UAAWuK,IAAW,YAAa,UAAW,UACjD,sBAAMvK,UAAU,oBAAhB,sBAHmB,KAMvB,cAAC8O,EAAA,EAAIC,KAAL,CAAUlH,GAAG,KAAb,SACE,eAACiH,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIC,SAAU,IAA7B,UACE,mBAAGlP,UAAWuK,IAAW,YAAa,UAAW,UACjD,sBAAMvK,UAAU,oBAAhB,4BAHmB,QAO7B,cAAC2O,EAAA,EAAIQ,QAAL,CAAanP,UAAU,yBAAvB,SACM,eAAC2O,EAAA,EAAIS,KAAL,CAAUF,SAAU,IAAMpN,GAAI,IAA9B,UACE,uBACF,oBAAI9B,UAAU,oBAAd,gBAAmC0P,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAchC,WAC/C,cAAC,IAAD,CAAOC,QAASjC,EAAkBkC,OAAQR,EAAkBrM,KAAK,MAAMf,UAAU,kBAH3C,OAM9C,cAAC2O,EAAA,EAAIQ,QAAL,CAAanP,UAAU,yBAAvB,SACM,cAAC2O,EAAA,EAAIS,KAAL,CAAUF,SAAU,IAAMpN,GAAI,IAA9B,SACA,eAAC4M,EAAA,EAAD,WACG,eAACiC,EAAA,EAAD,CAAKwD,GAAI,EAAT,UACC,oBAAInU,UAAU,oBAAd,wBACA,cAAC,IAAD,CAAO2N,QAASuJ,EAAetJ,OAAQwJ,EAAgBrW,KAAK,MAAM6K,OAAQ,IAAK5L,UAAU,mBAEzF,eAAC2Q,EAAA,EAAD,CAAKwD,GAAI,EAAT,UACA,oBAAInU,UAAU,oBAAd,yBACA,cAAC,IAAD,CAAO2N,QAASwJ,EAAgBvJ,OAAQyJ,EAAgBtW,KAAK,QAAQ6K,OAAQ,IAAK5L,UAAU,uBARxD,OAc9C,cAAC2O,EAAA,EAAIQ,QAAL,CAAanP,UAAU,yBAAvB,SACM,eAAC2O,EAAA,EAAIS,KAAL,CAAUF,SAAU,IAAMpN,GAAI,IAA9B,UACA,oBAAI9B,UAAU,oBAAd,gBAAmC0P,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAchC,WAChD,cAAC,IAAD,CACDC,QAASG,EACTF,OAAQR,EACRrM,KAAK,MACLf,UAAU,kBAN8B,mBAkB7C6K,kBAAKoM,IChJLK,GA1FM,WAAO,IAAD,EACYjO,qBAAWC,KAAxCiO,EADiB,EACjBA,iBAAiBC,EADA,EACAA,QACxB,OACC,cAAC,IAAMjM,SAAP,UACE,cAACmD,EAAA,EAAD,UACE,cAAClB,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,eAACkB,EAAA,EAAIC,UAAL,CAAeC,iBAAiB,IAAhC,UACE,cAACC,EAAA,EAAD,CAAK1E,QAAQ,OAAOpK,UAAU,eAAe6H,GAAG,KAAhD,gBACGuL,SADH,IACGA,QADH,EACGA,GAAc3S,KAAI,SAACuT,EAAKtT,GACvB,OACE,cAACoO,EAAA,EAAIC,KAAL,CAAUlH,GAAG,KAAb,SACE,eAACiH,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIC,SAAU8E,EAAIlS,GAAjC,UACE,mBAAG9B,UAAWuK,IAAWyJ,EAAId,KAAM,YAAa,UAAW,UAC3D,sBAAMlT,UAAU,oBAAhB,SAAqCgU,EAAI/F,YAHtBvN,QAS7B,cAACiO,EAAA,EAAIQ,QAAL,CAAanP,UAAU,yBAAvB,gBACGoT,SADH,IACGA,QADH,EACGA,GAAc3S,KAAI,SAACuT,EAAKtT,GACvB,OACE,cAACiO,EAAA,EAAIS,KAAL,CAAUF,SAAU8E,EAAIlS,GAAIA,GAAIkS,EAAIlS,GAApC,SACE,cAAC4M,EAAA,EAAD,UACE,cAACiC,EAAA,EAAD,CAAKsD,GAAG,UAAR,SACI,WAAO,IAAD,IACN,OAAQD,EAAIlS,IACV,KAAK,EACH,OACE,qCACE,cAAC4M,EAAA,EAAD,UACE,cAACiC,EAAA,EAAD,CAAKsD,GAAG,UAAR,SACE,cAAC,GAAD,QAGJ,cAACvF,EAAA,EAAD,UACE,cAACiC,EAAA,EAAD,CAAKsD,GAAG,UAAR,UACmB,OAAhBsD,QAAgB,IAAhBA,GAAA,UAAAA,EAAkBrD,aAAlB,eAAyBpT,QACxB,GACE,cAAC,EAAD,CACEsD,QAASmP,GACTlP,KAAI,OAAEkT,QAAF,IAAEA,OAAF,EAAEA,EAAkBrD,MACxBrQ,YAAY,EACZD,cAAc,EACdjC,SAAU6V,EACVvT,WAAW,WAO3B,KAAK,EACH,OACE,mCACE,cAACyK,EAAA,EAAD,UACE,cAACiC,EAAA,EAAD,CAAKwD,GAAI,EAAT,UAEiB,OAAhBoD,QAAgB,IAAhBA,GAAA,UAAAA,EAAkBrD,aAAlB,eAAyBpT,QACtB,GACE,cAAC,GAAD,CACE4O,aACE6H,EAAiBjD,iBASnC,QACE,MAAO,WA/CX,QAHqC5T,oB,UCElD+W,GA7BD,WAAM,IAAD,MAC4BpO,qBAAWC,KAAjDG,EADU,EACVA,UAAWF,EADD,EACCA,mBAAmBmO,EADpB,EACoBA,KAC3BC,EACJ,CAEE,CAAExP,MAA0B,IAAnBsB,EAAU3I,OAAY,cAAcyI,EAAmBqO,cAAc,MAAMnO,EAAUmO,cAAeC,KAAM,IAAItO,EAAmBqO,cAAc,IAAInO,EAAUmO,cAAe,IAAKE,QAAQ,GAElM,CAAC7J,MAAyB,IAAnBxE,EAAU3I,OAAY,4EAA4EyI,EAAmBqO,cAAc,IAAMnO,EAAUmO,gBAEhK,OACI,cAAClJ,EAAA,EAAD,UACI,cAACiC,EAAA,EAAD,UACI,sBAAK3Q,UAAU,uCAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,eAAC+X,GAAA,EAAD,CAAY/X,UAAU,MAAtB,UACI,cAAC+X,GAAA,EAAWhJ,KAAZ,CAAiBE,KAAK,IAAIjP,UAAU,aAApC,oBACQ,cAAC+X,GAAA,EAAWhJ,KAAZ,CAAiB+I,QAAM,EAAS9X,UAAU,aAA1C,mBACS2X,EAAgB,UADzB,aACS,EAAoBxP,OADD,UAM5C,oBAAInI,UAAU,sBAAd,UAAqC,UAAA2X,EAAgB,UAAhB,eAAoB1J,OAAO,QAAW,OAAJyJ,QAAI,IAAJA,OAAA,EAAAA,EAAMhK,WAAc,OAAJgK,QAAI,IAAJA,OAAA,EAAAA,EAAMhK,UAAS,MAAM,MAAS,OAAJgK,QAAI,IAAJA,OAAA,EAAAA,EAAMM,MAAN,OAAYN,QAAZ,IAAYA,OAAZ,EAAYA,EAAMM,KAAKJ,cAAc,c,kDCmD3J/X,GAvEI,SAAC,GAAyF,IAAvFC,EAAsF,EAAtFA,WAAYC,EAA0E,EAA1EA,gBAC9B,OACI,mCACI,sBAAKC,UAAU,gDAAf,UACI,uBAAOA,UAAU,OAAjB,uBACA,wBACIC,MAAOH,EAAWI,MAAMC,SACxBC,SAAU,SAACC,GACPP,EAAWQ,YAAYC,OAAOF,EAAEG,OAAOP,SAE3CD,UAAU,oCALd,SAMKD,EAAgBU,KAAI,SAACN,EAAUO,GAC5B,OACI,wBAAoBT,MAAOE,EAASF,MAApC,SACKE,EAASQ,MADDD,QAOzB,uBAAMV,UAAU,OAAhB,iBACS,IACL,mCACKF,EAAWI,MAAMU,UAAY,EADlC,OACyCd,EAAWe,YAAYC,UACtD,OAGd,uBAAMd,UAAU,2EAAhB,UACI,kDACA,uBACIe,KAAK,SACLC,aAAclB,EAAWI,MAAMU,UAAY,EAC3CR,SAAU,SAACC,GACP,IAAMY,EAAOZ,EAAEG,OAAOP,MAAQM,OAAOF,EAAEG,OAAOP,OAAS,EAAI,EAC3DH,EAAWoB,SAASD,IAExBjB,UAAU,6CAIlB,sBAAKA,UAAU,sDAAf,UACI,wBACImB,QAAS,kBAAMrB,EAAWoB,SAAS,IACnClB,UAAU,YACVoB,UAAWtB,EAAWuB,gBAH1B,SAIK,OACK,IACV,wBACIF,QAAS,kBAAMrB,EAAWwB,gBAC1BtB,UAAU,YACVoB,UAAWtB,EAAWuB,gBAH1B,SAIK,MACK,IACV,wBACIF,QAAS,kBAAMrB,EAAWyB,YAC1BvB,UAAU,YACVoB,UAAWtB,EAAW0B,YAH1B,SAIK,MACK,IACV,wBACIL,QAAS,kBAAMrB,EAAWoB,SAASpB,EAAW2B,UAAY,IAC1DzB,UAAU,YACVoB,UAAWtB,EAAW0B,YAH1B,SAIK,OACK,aC1DxBU,GAAe,SAAC,GAA8E,IAA5EC,EAA2E,EAA3EA,sBAAuBC,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,gBAAiBC,EAAqB,EAArBA,eACpEC,EAAQJ,EAAsBrB,OAD2D,EAErE0B,IAAMC,SAASL,GAFsD,mBAExFnC,EAFwF,KAEjFyC,EAFiF,KAGzFtC,EAAWuC,4BAAiB,SAAC1C,GAC/BoC,EAAgBpC,QAAS2C,KAC1B,KAEH,OACI,qBAAK5C,UAAW6C,IAAWP,GAA3B,SACI,uBAAMtC,UAAU,4BAAhB,qBACa,IACT,uBACIC,MAAOA,GAAS,GAChBG,SAAU,SAACC,GACPqC,EAASrC,EAAEG,OAAOP,OAClBG,EAASC,EAAEG,OAAOP,QAEtB6C,YAAW,UAAKP,EAAL,eACXvC,UAAU,mCAOxB+C,GAAwBC,sBAAW,WAA6BC,GAAS,IAAnCC,EAAkC,EAAlCA,cAAkBC,EAAgB,iCACpEC,EAAaC,mBACbC,EAAmBL,GAAOG,EAMhC,OAJAG,qBAAU,WACND,EAAYE,QAAQN,cAAgBA,IACrC,CAACI,EAAaJ,IAGb,mCACI,sBAAKlD,UAAU,aAAf,UACI,mCAAOe,KAAK,WAAWf,UAAU,mBAAmBiD,IAAKK,GAAiBH,IAC1E,uBAAOM,QAAQ,mBAAmBzD,UAAU,6BAuJ7C0D,GA/HD,SAACC,GACX,IAAMC,EAAeD,EAAK,eAAoB,EACxCE,EAAaF,EAAK,aAAkB,EACpCG,EAAaH,EAAK,aAAkB,EACpCI,EAAeJ,EAAK,eAAoB,EACxCK,EAAeL,EAAK,eAAoB,EAExCO,EAAYC,mBACd,CACIC,QAAST,EAAK,QACdU,KAAMV,EAAK,KACXW,aAAc,CAAEnE,SAAUwD,EAAK,UAAgB,KAEnDC,GAAgBW,kBAChBV,GAAcW,YACdR,GAAgBS,cAChBX,GAAcY,gBACdX,GAAgBY,gBAChB,SAACC,GACGb,GACIa,EAAMC,eAAeC,MAAK,SAACV,GAAD,OAEtB,CACItC,GAAI,YAGJiD,OAAQ,gBAAGC,EAAH,EAAGA,kCAAH,OACJ,8BACI,cAAC,GAAD,eAA2BA,SAKnCC,KAAM,gBAAGC,EAAH,EAAGA,IAAH,OACF,8BACI,cAAC,GAAD,eAA2BA,EAAIC,mCAfrB,mBAmBnBf,OAGXJ,GACIY,EAAMC,eAAeC,MAAK,SAACV,GAAD,OAEtB,CAEItC,GAAI,WACJiD,OAAQ,gBAAGK,EAAH,EAAGA,8BAA+BC,EAAlC,EAAkCA,kBAAlC,OACJ,gDAAUD,KAAV,aAA4CC,EAAoB,IAAM,QAE1EJ,KAAM,gBAAGC,EAAH,EAAGA,IAAH,OAGFA,EAAII,UACA,gDACQJ,EAAIK,0BAA0B,CAC9BC,MAAO,CAIHC,YAAY,GAAD,OAAiB,EAAZP,EAAIQ,MAAT,WANvB,aASKR,EAAIS,WAAa,IAAM,OAE5B,QAvBU,mBAyBnBvB,UAKfwB,EAAO9B,EAAaI,EAAUjD,KAAOiD,EAAU0B,KAEnD,OACI,qCACKhC,GACG,cAAC,GAAD,CACIzB,sBAAuB+B,EAAU/B,sBACjCC,aAAc8B,EAAUhE,MAAMkC,aAC9BC,gBAAiB6B,EAAU7B,gBAC3BC,eAAgBqB,EAAK,iBAI7B,qBAAK3D,UAAU,mBAAf,SACI,kDACQkE,EAAU4B,iBADlB,IAEI9F,UAAW6C,IAAW,mCAAoCc,EAAK,YAFnE,UAGI,uBAAO3D,UAAW2D,EAAK,WAAvB,SACKO,EAAU6B,aAAatF,KAAI,SAACuF,GAAD,OACxB,8CAAQA,EAAYC,uBAApB,aACKD,EAAYE,QAAQzF,KAAI,SAAC0F,GAAD,OACrB,8CACQA,EAAOC,eAAeD,EAAOE,MAAQF,EAAOG,yBADpD,IAEItG,UAAW6C,IAAW,CAClB0D,cAAsC,IAAxBJ,EAAOK,aACrBC,aAAqC,IAAxBN,EAAOK,aACpBE,UAA0B,IAAhBP,EAAOE,OALzB,SAOKF,EAAOQ,OAAO,wBAMnC,iDAAWzC,EAAU0C,qBAArB,cACMhB,GAAQ,IAAInF,KAAI,SAACyE,EAAK2B,GAEpB,OADA3C,EAAU4C,WAAW5B,GAEjB,8CAAQA,EAAI6B,eAAZ,aACK7B,EAAI8B,MAAMvG,KAAI,SAACwG,GACZ,OAAO,8CAAQA,EAAKC,gBAAb,aAA8BD,EAAKN,OAAO,6BAS5E7C,GAAc,cAAC,GAAD,CAAYhE,WAAYoE,EAAWnE,gBAAiB4D,EAAK,sB,8BC9L9EmH,GAAM,IAAIC,IAsJDkN,GAnJS,SAACtU,GAAW,IAAD,EACClB,oBAAS,GADV,mBAC1ByH,EAD0B,KACfgO,EADe,OAEPzV,mBAAS,IAFF,mBAE1B0V,EAF0B,KAEnBC,EAFmB,KAmCzBC,EAAMC,eAAND,EACFE,EAAiBC,aACrBC,OAAaC,MAAM,CACfC,SAAUF,OAAajO,SAAS6N,EAAE,0BAClCO,SAAUH,OAAajO,SAAS6N,EAAE,0BAClCQ,QAASJ,OAAajO,SAAS,wBAAwBsO,MAAM,8BAC7DC,UAAWN,OAAajO,SAAS,0BAA0BsO,MAAM,gCACjEE,IAAKP,OAAajO,SAAS,oBAAoBsO,MAAM,6BAI3D,OACI,cAACtL,EAAA,EAAD,UACI,cAACA,EAAA,EAAKC,KAAN,UAEI,cAACwL,GAAA,EAAD,CAAOnN,KAAMnI,EAAMuV,YAAaC,OAAQxV,EAAMyV,aAA9C,SACI,eAACH,GAAA,EAAMxL,KAAP,WACI,qBAAKzN,UAAU,wBAAf,SACI,oBAAGiP,KAAK,IAAR,UACI,yBACA,8BAGR,eAACtH,EAAA,EAAD,CAAMuC,UAAWA,EAAWmP,SAAUd,EAAgBe,cAAe,GAArE,UACA,eAAC3R,EAAA,EAAKc,MAAN,CAAYzI,UAAU,OAAOuZ,UAAU,WAAvC,UACI,cAAC5R,EAAA,EAAKe,MAAN,sBACA,cAACf,EAAA,EAAKC,QAAN,CACI7G,KAAK,OACLqG,KAAK,WACLtE,YAAY,qBACZ7C,MAAOkY,EAAMQ,SACbvY,SAAU,SAACC,GAAD,OAAO+X,EAAS,2BAAKD,GAAN,IAAaQ,SAAUtY,EAAEG,OAAOP,YAE7D,cAAC0H,EAAA,EAAKC,QAAQe,SAAd,CAAuB5H,KAAK,UAA5B,+CAIJ,eAAC4G,EAAA,EAAKc,MAAN,CAAYzI,UAAU,OAAOuZ,UAAU,WAAvC,UACI,cAAC5R,EAAA,EAAKe,MAAN,uBACA,cAACf,EAAA,EAAKC,QAAN,CACI7G,KAAK,OACLqG,KAAK,WACLtE,YAAY,qBACZ7C,MAAOkY,EAAMS,SACbxY,SAAU,SAACC,GAAD,OAAO+X,EAAS,2BAAKD,GAAN,IAAaS,SAAUvY,EAAEG,OAAOP,YAE7D,cAAC0H,EAAA,EAAKC,QAAQe,SAAd,CAAuB5H,KAAK,UAA5B,+CAIJ,eAAC4G,EAAA,EAAKc,MAAN,CAAYzI,UAAU,OAAOuZ,UAAU,UAAvC,UACI,cAAC5R,EAAA,EAAKe,MAAN,sBACA,cAACf,EAAA,EAAKC,QAAN,CACI7G,KAAK,OACLqG,KAAK,UACLtE,YAAY,oBACZ7C,MAAOkY,EAAMU,QACbzY,SAAU,SAACC,GAAD,OAAO+X,EAAS,2BAAKD,GAAN,IAAaU,QAASxY,EAAEG,OAAOP,YAE5D,cAAC0H,EAAA,EAAKC,QAAQe,SAAd,CAAuB5H,KAAK,UAA5B,6CAIJ,eAAC4G,EAAA,EAAKc,MAAN,CAAYzI,UAAU,OAAOuZ,UAAU,YAAvC,UACI,cAAC5R,EAAA,EAAKe,MAAN,uBACA,cAACf,EAAA,EAAKC,QAAN,CACI7G,KAAK,OACLqG,KAAK,YACLtE,YAAY,qBACZ7C,MAAOkY,EAAMY,UACb3Y,SAAU,SAACC,GAAD,OAAO+X,EAAS,2BAAKD,GAAN,IAAaY,UAAW1Y,EAAEG,OAAOP,YAE9D,cAAC0H,EAAA,EAAKC,QAAQe,SAAd,CAAuB5H,KAAK,UAA5B,+CAIJ,eAAC4G,EAAA,EAAKc,MAAN,CAAYzI,UAAU,OAAOuZ,UAAU,MAAvC,UACI,cAAC5R,EAAA,EAAKe,MAAN,kBACA,cAAC,KAAD,CACI3H,KAAK,SACLqG,KAAK,MACLpH,UAAU,eACVwZ,gBAAgB,eAChBpZ,SAAU,SAACC,GAAD,OAAO+X,EAAS,2BAAKD,GAAN,IAAaa,IAAK3Y,EAAEJ,UAC7C0N,QAAS,CACL,CAAE1N,MAAOkY,EAAMa,IAAKA,IAAK,QAAUb,EAAMa,KACzC,CAAE/Y,MAAO,QAASkI,MAAO,SACzB,CAAElI,MAAO,UAAWkI,MAAO,YAE/BrF,YAAY,sBACZ2W,SAAUtB,EAAMa,MAEpB,cAACrR,EAAA,EAAKC,QAAQe,SAAd,CAAuB5H,KAAK,UAA5B,6CAEA,sBAAKf,UAAU,cAAf,UACI,cAAC4K,EAAA,EAAD,CAAQ7J,KAAK,SAASK,SAAU+W,EAAMuB,QAAU,OAAS,GAAIvY,QA9HzE,SAACwY,GACf,IACIC,EADWC,EAAQ,KACHC,IAAIC,QAAb,OAAqB5B,QAArB,IAAqBA,OAArB,EAAqBA,EAAOS,SAAU,2BAA2BoB,WAS1E,IAL6B,IADlBL,EAAMM,cACRC,kBACLP,EAAMQ,iBACNR,EAAMS,mBAEVlC,GAAa,GACThO,EAAW,CACX,IAAImQ,EAAS,2BAAIlC,GAAL,IAAWmC,MAAMV,IAC7B,GAAIS,EACA,IAAIE,EAAcF,EACZG,OAAOC,KAAKJ,GACP5Z,KAAI,SAACia,GAAD,OAASA,EAAM,IAAML,EAASK,MAClCC,KAAK,KACV,GAIV,IAAMxP,EAAG,yCAFFoP,GAGWzP,GAAI8P,SAAJ,UAAgBzP,IACxBE,MAAK,SAAUC,GACjBA,GACFuP,KAAKC,KAAK,GAAKxP,EAAK,GAAGyP,eAoGT,eAGC5C,EAAMuB,SACH,cAAC9O,EAAA,EAAD,CAAQ7J,KAAK,SAASf,UAAU,WAAWmB,QAASwC,EAAMqX,MAA1D,SACI,mBAAGhb,UAAW6C,IAAW,MAAO,CAAC,oBAAqB,OAAQ,4BCtI9FiI,GAAM,IAAIC,IAsMV3G,GAAU,CACZ,CACIW,OAAQ,SACRuO,SAAU,SACVjN,MAAM,EACN4U,QAAS,eACThW,KA3La,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACdgW,EAAa,CACfpZ,IAAIoD,EAAI8B,MAAM,GAAG/G,MAAQiF,EAAI8B,MAAM,GAAG/G,OACtC0Y,UAAUzT,EAAI8B,MAAM,GAAG/G,MAAQiF,EAAI8B,MAAM,GAAG/G,OAC5C4Y,SAAS3T,EAAI8B,MAAM,GAAG/G,MAAQiF,EAAI8B,MAAM,GAAG/G,OAC3C8Y,WAAW7T,EAAI8B,MAAM,GAAG/G,MAAQiF,EAAI8B,MAAM,GAAG/G,OAC7C+Y,KAAK9T,EAAI8B,MAAM,GAAG/G,MAAQiF,EAAI8B,MAAM,GAAG/G,OACvCqa,OAAOpV,EAAI8B,MAAM,GAAG/G,MAAQiF,EAAI8B,MAAM,GAAG/G,OACzCkb,QAAQjW,EAAI8B,MAAM,GAAG/G,MAAQiF,EAAI8B,MAAM,GAAG/G,QARhB,EAWQwC,oBAAS,GAXjB,mBAWvByW,EAXuB,KAWVkC,EAXU,OAYI3Y,oBAAS,GAZb,mBAYvByH,EAZuB,KAYZgO,EAZY,OAaJzV,mBAASyY,GAbL,mBAavB/C,EAbuB,KAahBC,EAbgB,KAgBxBgB,EAAe,WACjBgC,GAAgBlC,IAwDpB,OACI,eAAC,IAAM3N,SAAP,WACI,cAAC0N,GAAA,EAAD,CAAOnN,KAAMoN,EAAaC,OAAQC,EAAlC,SACI,cAACH,GAAA,EAAMxL,KAAP,UACI,eAAC9F,EAAA,EAAD,CAAMuC,UAAWA,EAAjB,UACI,eAACvC,EAAA,EAAKc,MAAN,CAAYzI,UAAU,OAAOuZ,UAAU,WAAvC,UACI,cAAC5R,EAAA,EAAKe,MAAN,sBACA,cAACf,EAAA,EAAKC,QAAN,CACI4C,UAAQ,EACRzJ,KAAK,OACLqG,KAAK,WACLtE,YAAY,qBACZ7C,MAAOkY,EAAMlK,MACb7N,SAAU,SAACC,GAAD,OAAO+X,EAAS,2BAAKD,GAAN,IAAaQ,SAAUtY,EAAEG,OAAOP,YAE7D,cAAC0H,EAAA,EAAKC,QAAQe,SAAd,CAAuB5H,KAAK,UAA5B,+CAIJ,eAAC4G,EAAA,EAAKc,MAAN,CAAYzI,UAAU,OAAOuZ,UAAU,UAAvC,UACI,cAAC5R,EAAA,EAAKe,MAAN,sBACA,cAACf,EAAA,EAAKC,QAAN,CACI4C,UAAQ,EACRzJ,KAAK,OACLqG,KAAK,UACLtE,YAAY,oBACZ7C,MAAOkY,EAAMlK,MACb7N,SAAU,SAACC,GAAD,OAAO+X,EAAS,2BAAKD,GAAN,IAAaU,QAASxY,EAAEG,OAAOP,YAE5D,cAAC0H,EAAA,EAAKC,QAAQe,SAAd,CAAuB5H,KAAK,UAA5B,6CAIJ,eAAC4G,EAAA,EAAKc,MAAN,CAAYzI,UAAU,OAAOuZ,UAAU,YAAvC,UACI,cAAC5R,EAAA,EAAKe,MAAN,wBACA,cAACf,EAAA,EAAKC,QAAN,CACI4C,UAAQ,EACRzJ,KAAK,OACLqG,KAAK,YACLtE,YAAY,qBACZ7C,MAAOkY,EAAMlK,MACb7N,SAAU,SAACC,GAAD,OAAO+X,EAAS,2BAAKD,GAAN,IAAaY,UAAW1Y,EAAEG,OAAOP,YAE9D,cAAC0H,EAAA,EAAKC,QAAQe,SAAd,CAAuB5H,KAAK,UAA5B,+CAIJ,eAAC4G,EAAA,EAAKc,MAAN,CAAYzI,UAAU,OAAOuZ,UAAU,MAAvC,UACI,cAAC5R,EAAA,EAAKe,MAAN,kBACA,cAAC,KAAD,CACI3H,KAAK,SACLqG,KAAK,MACLoD,UAAQ,EACRxK,UAAU,eACVwZ,gBAAgB,eAChBpZ,SAAU,SAACC,GAAD,OAAO+X,EAAS,2BAAKD,GAAN,IAAagD,OAAQ9a,EAAEJ,UAChD0N,QAAS,CACL,CAAE1N,MAAOkY,EAAMa,IAAKA,IAAK,WAAab,EAAMa,KAC5C,CAAE/Y,MAAO,QAASkI,MAAO,SACzB,CAAElI,MAAO,YAAakI,MAAO,cAEjCrF,YAAY,sBACZ2W,SAAUtB,EAAMa,MAEpB,cAACrR,EAAA,EAAKC,QAAQe,SAAd,CAAuB5H,KAAK,UAA5B,6CAEJ,eAAC4G,EAAA,EAAKc,MAAN,CAAYzI,UAAU,OAAOuZ,UAAU,SAAvC,UACI,cAAC5R,EAAA,EAAKe,MAAN,qBACA,cAAC,KAAD,CACI3H,KAAK,SACLqG,KAAK,SACLoD,UAAQ,EACRxK,UAAU,eACVwZ,gBAAgB,eAChBpZ,SAAU,SAACC,GAAD,OAAO+X,EAAS,2BAAKD,GAAN,IAAagD,OAAQ9a,EAAEJ,UAChD0N,QAAS,CACL,CAAE1N,MAAOkY,EAAMgD,OAAQhT,MAAO,WAAagQ,EAAMgD,QACjD,CAAElb,MAAO,SAAUkI,MAAO,UAC1B,CAAElI,MAAO,cAAekI,MAAO,aAEnCrF,YAAY,yBACZ2W,SAAUtB,EAAMgD,SAEpB,cAACxT,EAAA,EAAKC,QAAQe,SAAd,CAAuB5H,KAAK,UAA5B,6CAEJ,sBAAKf,UAAU,cAAf,UACI,cAAC4K,EAAA,EAAD,CAAQ7J,KAAK,SAASI,QAxH3B,SAACwY,GAOhB,IAL6B,IADhBA,EAAMM,cACVC,kBACLP,EAAMQ,iBACNR,EAAMS,mBAEVlC,GAAa,GACThO,EAAW,CAEX,GAAIiO,EACA,IAAIoC,EAAcpC,EACZqC,OAAOC,KAAKtC,GACP1X,KAAI,SAACia,GAAD,OAASA,EAAM,IAAMvC,EAAMuC,MAC/BC,KAAK,KACV,GAIV,IAAMxP,EAAG,4CAFEoP,GAGOzP,GAAI8P,SAAJ,UAAgBzP,IACxBE,MAAK,SAAUC,GACjBA,GACFuP,KAAKC,KAAK,GAAKxP,EAAK,GAAGyP,eAkGb,eAIA,cAACnQ,EAAA,EAAD,CAAQ7J,KAAK,SAASf,UAAU,WAAWmB,QAhGrD,SAACd,GACXA,EAAE8Z,iBACFiB,GAAe,GACfhD,EAAS,KA6FW,SACI,mBAAGpY,UAAW6C,IAAW,MAAO,CAAC,oBAAqB,OAAQ,sBAMlF,eAAC,KAAD,CAAMwY,GAAG,IAAIrb,UAAU,cAAcmB,QAAS,kBAAMiY,KAApD,UACK,IACD,mBAAGpZ,UAAU,mCAEjB,eAAC,KAAD,CAAMqb,GAAG,IAAIrb,UAAU,cAAcmB,QAAS,kBA1JpCwY,EA0JmDxB,OAzJjE0C,KAAKC,KAAK,CACR7M,MAAO,+BACPqN,kBAAkB,IACjBjQ,MAAK,SAACkQ,GAEP,GAAIA,EAAOC,YAAa,CAEtB,IAAMrQ,EAAG,iBAAawO,EAAMnC,QAAnB,+BAAiDmC,EAAM7X,IAC9CgJ,GAAI8P,SAAJ,UAAgBzP,IACxBE,MAAK,SAAUC,GACjBA,GACFuP,KAAKC,KAAK,GAAKxP,EAAK,GAAGyP,iBAZpB,IAACpB,GA0JV,UACK,IACD,mBAAG3Z,UAAU,2BAazB,CACI+E,OAAQ,KACRuO,SAAU,KACVjN,MAAM,GAEV,CACItB,OAAQ,UACRuO,SAAU,WACVjN,MAAM,GAEV,CACItB,OAAQ,UACRuO,SAAU,UACVjN,MAAM,GACR,CACEtB,OAAQ,YACRuO,SAAU,YACVjN,MAAM,GACR,CACEtB,OAAQ,OACRuO,SAAU,OACVjN,MAAM,GACR,CACEtB,OAAQ,QACRuO,SAAU,QACVjN,MAAM,GAEV,CACItB,OAAQ,SACRuO,SAAU,SACVjN,MAAM,EACNpB,KA1Oa,SAAC,GAAa,IAAD,IAAVC,EAAU,EAAVA,IACpB,OACI,cAAC,IAAMqG,SAAP,UACI,sBACIvL,UAAW6C,IAAW,QAAS,CAC3B,uBAAcqC,EAAIuW,gBAAlB,aAAc,EAAcN,OAC5B,cAAa,UAACjW,EAAIuW,gBAAL,aAAC,EAAcN,UAHpC,SAKKjW,EAAIuW,SAASN,OAAS,SAAW,qBAqO5Cpb,GAAkB,CACpB,CACIY,KAAM,IACNV,MAAO,GAEX,CACIU,KAAM,KACNV,MAAO,IAEX,CACIU,KAAM,KACNV,MAAO,KA8FAyb,GA3EO,SAAC,GAAa,IAAZ/X,EAAW,EAAXA,MAAW,EACIlB,mBAAS,IADb,mBACxBkZ,EADwB,KACfC,EADe,OAEEnZ,mBAAS,IAFX,mBAExB4B,EAFwB,KAElBwX,EAFkB,OAGOpZ,oBAAS,GAHhB,mBAGxByW,EAHwB,KAGXkC,EAHW,KAK/B7X,qBAAU,WAESuH,GAAI8P,SAAJ,UADN,4CAEFvP,MAAK,SAAUC,GACdA,GACAsQ,EAAgBtQ,QAGzB,CAAC3H,IAEJJ,qBAAU,WACN,GAAIoY,GAAWA,EAAQ7a,OAAS,EAAG,CAE/B,IAAMgb,EAAS,GACfA,EAAOhX,KAAK6W,GACZE,EAAiBC,EAAO,OAE7B,CAACH,IAEJ,IAAMvC,EAAe,WACjBgC,GAAgBlC,IAOpB,OACI,mCACI,cAACxK,EAAA,EAAD,UACI,cAACiC,EAAA,EAAD,UACI,cAACnD,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIzN,UAAU,eAAd,uCACA,eAAC0O,EAAA,EAAD,WACA,cAACiC,EAAA,EAAD,CAAKsD,GAAI,IACL,cAACtD,EAAA,EAAD,CAAKsD,GAAI,EAAT,SACI,qBAAKjU,UAAU,cAAf,SACI,cAAC4K,EAAA,EAAD,CAAQ5K,UAAU,4BAA4BmB,QAASiY,EAAvD,SACI,mBAAGpZ,UAAU,iCAK7B,cAAC,GAAD,CACIoE,QAASA,GACTC,KAAMA,EACNlE,SAAU,EACVJ,gBAAiBA,GACjB8D,YAAY,EACZC,YAAY,EACZiY,WAAW,cACXzZ,eAAe,YACfsB,cAAc,IAElB,cAAC8K,EAAA,EAAD,UACQ,cAAC,GAAD,CACIwK,YAAaA,EACb8B,MApCtB,SAAC3a,GACXA,EAAE8Z,iBACFiB,GAAe,IAmCiBhC,aAAcA,kB,UClQvC4C,GApFK,SAAC,GAQd,IAAD,IAPLC,yBAOK,MAPe,UAOf,MANJC,uBAMI,MANc,UAMd,EALJC,EAKI,EALJA,eACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,QACAC,EACI,EADJA,gBAiCA,OADCjG,QAAQC,IAAI+F,GAET,cAAC,IAAM/Q,SAAP,UACI,cAACmD,EAAA,EAAD,UACI,cAACiC,EAAA,EAAD,UACI,cAACnD,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIzN,UAAU,oBAAd,2CAEA,mBAAGA,UAAU,8BACT,cAAC,EAAD,CACII,SAzCV,SAACC,GACrB+b,EAAgB/b,EAAEG,OAAOgc,MAAM,KAyCDrU,MAAM,gBACNpH,KAAK,OACLqG,KAAK,OACLiB,eAAgB,QACZ,QAEHgU,GACG,cAACzR,EAAA,EAAD,CAAQR,QAAQ,OAAOtI,GAAG,gBAAgBX,QA1C1D,WAClB,IAAIsb,EAAQ,GAEZ,GAAIJ,EAAc,CAChB,IAAIK,EAAa,IAAIC,WACrBD,EAAWE,kBAAkBP,GAC7BK,EAAWG,OAAS,SAAClD,GACnB,IAAImD,EAAQnD,EAAMnZ,OAAO+a,OACrBlX,EAAO,IAAI0Y,WAAWD,GACtBE,EAAWC,KAAU5Y,EAAM,CAAEtD,KAAM,UACvCic,EAASE,WAAWC,SAAQ,SAASC,GAEnC,IAAIC,EAAgBJ,KAAWK,0BAA0BN,EAASO,OAAOH,IACzEX,EAAM3X,KAAK,CACTT,KAAMgZ,EACND,iBAIJjB,EAAeqB,KAAKC,MAAMD,KAAKE,UAAUjB,QAuBX,SACKR,IAGRI,GACG,cAACzR,EAAA,EAAD,CAAQR,QAAQ,OAAOtI,GAAG,gBAAgBX,QAnD1D,WAClBib,EAAgB,IAChBuB,SAASC,eAAe,4BAA4B3d,MAAQ,IAiD1B,SACKic,IAIT,cAACtR,EAAA,EAAD,CAAQ7J,KAAK,SAAUI,QAASob,EAAgBF,GAAhD,wCCgDnBwB,GAtHa,SAAC,GAMtB,IALH1B,EAKE,EALFA,eACA2B,EAIE,EAJFA,eACA1B,EAGE,EAHFA,gBACAC,EAEE,EAFFA,aACAE,EACE,EADFA,gBACE,EAC0B9Z,qBAD1B,mBACKsb,EADL,KACYC,EADZ,OAE4Bvb,oBAAS,GAFrC,mBAEK6Z,EAFL,KAEc2B,EAFd,KA2EF,OArBA1a,qBAAU,WACN,GAAIua,EAAgB,CAAC,IAAD,EACVI,EAAK,UAAG1D,OAAOC,KAAKqD,UAAf,aAAG,EAA6Brd,KAAI,SAACia,GAAS,IAAD,wBACpD,MAAO,CACHhQ,UAAU,UAAAoT,EAAepD,UAAf,eAAqBhQ,UAArB,UAAgCoT,EAAepD,UAA/C,aAAgC,EAAqBhQ,SAAWuT,GAAW,GACrFE,kBAAkB,UAAAL,EAAepD,UAAf,eAAqByD,kBAArB,UACZL,EAAepD,UADH,aACZ,EAAqByD,iBACrBF,GAAW,GACjBG,gBAAgB,UAAAN,EAAepD,UAAf,eAAqB0D,gBAArB,UACVN,EAAepD,UADL,aACV,EAAqB0D,eACrBH,GAAW,GACjBI,OAAO,UAAAP,EAAepD,UAAf,eAAqB2D,OAArB,UAA6BP,EAAepD,UAA5C,aAA6B,EAAqB2D,MAAQJ,GAAW,GAC5EtT,SAAS,UAAAmT,EAAepD,UAAf,eAAqB/P,SAArB,UAA+BmT,EAAepD,UAA9C,aAA+B,EAAqB/P,QAAUsT,GAAW,GAClFK,MAAM,UAAAR,EAAepD,UAAf,eAAqB4D,MAArB,UAA4BR,EAAepD,UAA3C,aAA4B,EAAqB4D,KAAOL,GAAW,OAGjFD,EAAWE,MAEhB,CAACJ,IAIA,eAAC,IAAMvS,SAAP,WACI,cAACmD,EAAA,EAAD,UACI,cAACiC,EAAA,EAAD,UACI,cAACnD,EAAA,EAAD,UACI,cAACA,EAAA,EAAKC,KAAN,UACI,cAAC,GAAD,CACI0O,eAAgBA,EAChBC,gBAAiBA,EACjBC,aAAcA,EACdC,QAASA,EACTC,gBAAiBA,YAMrC,cAAC7N,EAAA,EAAD,UACI,cAACiC,EAAA,EAAD,CAAKsD,GAAG,UAAR,UACU,OAAL8J,QAAK,IAALA,OAAA,EAAAA,EAAOjd,QAAS,GACb,cAAC,GAAD,CACIsD,QA7FR,CACZ,CACIW,OAAQ,WACRuO,SAAU,WACVjN,MAAM,GAEV,CACItB,OAAQ,mBACRuO,SAAU,mBACVjN,MAAM,GAEV,CACItB,OAAQ,iBACRuO,SAAU,iBACVjN,MAAM,GAEV,CACItB,OAAQ,QACRuO,SAAU,QACVjN,MAAM,GAEV,CACItB,OAAQ,UACRuO,SAAU,UACVjN,MAAM,GAEV,CACItB,OAAQ,OACRuO,SAAU,OACVjN,MAAM,IAiEUhC,KAAM0Z,EACN5d,SAAU,EACVJ,gBAhEA,CACpB,CACIY,KAAM,IACNV,MAAO,GAEX,CACIU,KAAM,KACNV,MAAO,IAEX,CACIU,KAAM,KACNV,MAAO,IAEX,CACIU,KAAM,MACNV,MAAO,OAkDS4D,YAAY,EACZC,YAAY,EACZF,cAAc,EACdK,WAAW,YCrGjCsa,GAAmB,WAAO,IACtBhV,EAAuBF,qBAAWC,KAAlCC,mBAIR,OACE,eAAC,IAAMgC,SAAP,WACE,cAAC,GAAD,IACE,WACA,OAAQhC,GACN,IAAK,YACH,OACE,mCACE,cAAC,GAAD,MAGN,IAAK,eACH,OACE,mCACE,cAAC,GAAD,MAGN,IAAK,YACH,OAAQ,mCACN,cAAC,GAAD,MAEJ,IAAK,YACH,OAAQ,mCACN,cAAC,GAAD,MAEJ,IAAK,cACH,OAAQ,mCACN,cAAC,GAAD,MAEJ,IAAK,gBACH,OAAQ,mCACN,cAAC,GAAD,MACJ,IAAK,YACH,OAAQ,mCACN,cAAC,GAAD,MACJ,QACE,OACE,mCAAG,MAlCT,OAyCRgV,GAAiBpV,aAAe,CAC9BM,UAAW,KAEE8U","file":"static/js/10.286113f5.chunk.js","sourcesContent":["// @flow\r\nimport React from 'react';\r\n\r\ntype PaginationProps = {\r\n    tableProps: any,\r\n    sizePerPageList: {\r\n        text: string,\r\n        value: number,\r\n    }[],\r\n};\r\n\r\nconst Pagination = ({ tableProps, sizePerPageList }: PaginationProps): React$Element<React$FragmentType> => {\r\n    return (\r\n        <>\r\n            <div className=\"d-lg-flex align-items-center text-center pb-1\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={tableProps.state.pageSize}\r\n                    onChange={(e) => {\r\n                        tableProps.setPageSize(Number(e.target.value));\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    {sizePerPageList.map((pageSize, index) => {\r\n                        return (\r\n                            <option key={index} value={pageSize.value}>\r\n                                {pageSize.text}\r\n                            </option>\r\n                        );\r\n                    })}\r\n                </select>\r\n\r\n                <span className=\"mx-3\">\r\n                    Page{' '}\r\n                    <strong>\r\n                        {tableProps.state.pageIndex + 1} of {tableProps.pageOptions.length}\r\n                    </strong>{' '}\r\n                </span>\r\n\r\n                <span className=\"d-inline-block align-items-center text-sm-start text-center my-sm-0 my-2\">\r\n                    <label>Go to page : </label>\r\n                    <input\r\n                        type=\"number\"\r\n                        defaultValue={tableProps.state.pageIndex + 1}\r\n                        onChange={(e) => {\r\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                            tableProps.gotoPage(page);\r\n                        }}\r\n                        className=\"form-control w-25 ms-1 d-inline-block\"\r\n                    />\r\n                </span>\r\n\r\n                <div className=\"pagination pagination-rounded d-inline-flex ms-auto\">\r\n                    <button\r\n                        onClick={() => tableProps.gotoPage(0)}\r\n                        className=\"page-link\"\r\n                        disabled={!tableProps.canPreviousPage}>\r\n                        {'<<'}\r\n                    </button>{' '}\r\n                    <button\r\n                        onClick={() => tableProps.previousPage()}\r\n                        className=\"page-link\"\r\n                        disabled={!tableProps.canPreviousPage}>\r\n                        {'<'}\r\n                    </button>{' '}\r\n                    <button\r\n                        onClick={() => tableProps.nextPage()}\r\n                        className=\"page-link\"\r\n                        disabled={!tableProps.canNextPage}>\r\n                        {'>'}\r\n                    </button>{' '}\r\n                    <button\r\n                        onClick={() => tableProps.gotoPage(tableProps.pageCount - 1)}\r\n                        className=\"page-link\"\r\n                        disabled={!tableProps.canNextPage}>\r\n                        {'>>'}\r\n                    </button>{' '}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nconst ButtonExportar = ({numtable}) => {\n  const tablexls=`${numtable}`\n  const sheet=`tablexls${numtable}`\n    return (\n      <div  className=\"float-end\">\n      <ReactHTMLTableToExcel\n                    id=\"Table\"\n                    className={'mdi mdi mdi-download ms-1 ms-1 me-1 btn btn-primary ms-2'}\n                    table={numtable}\n                    filename={tablexls}\n                    sheet={sheet}\n                    buttonText=\"XLS\"/>\n            </div>\n     );\n};\nexport default ButtonExportar;\n","// @flow\nimport React, { useRef, useEffect, forwardRef } from 'react';\nimport {\n    useTable,\n    useSortBy,\n    usePagination,\n    useRowSelect,\n    useGlobalFilter,\n    useAsyncDebounce,\n    useExpanded,\n} from 'react-table';\nimport classNames from 'classnames';\n\n// components\nimport Pagination from './Pagination';\nimport ButtonExportar from '../pages/dashboard/components/ButtonExportar/ButtonExportar';\n\n// Define a default UI for filtering\nconst GlobalFilter = ({ preGlobalFilteredRows, globalFilter, setGlobalFilter, searchBoxClass }) => {\n    const count = preGlobalFilteredRows.length;\n    const [value, setValue] = React.useState(globalFilter);\n    const onChange = useAsyncDebounce((value) => {\n        setGlobalFilter(value || undefined);\n    }, 200);\n\n    return (\n        <div className={classNames(searchBoxClass)}>\n            <span className=\"d-flex align-items-center\">\n                Search :{' '}\n                <input\n                    value={value || ''}\n                    onChange={(e) => {\n                        setValue(e.target.value);\n                        onChange(e.target.value);\n                    }}\n                    placeholder={`${count} records...`}\n                    className=\"form-control w-auto ms-1\"\n                />\n            </span>\n        </div>\n    );\n};\n\n\n\nconst IndeterminateCheckbox = forwardRef(({ indeterminate, ...rest }, ref) => {\n    const defaultRef = useRef();\n    const resolvedRef: any = ref || defaultRef;\n\n    useEffect(() => {\n        resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n        <>\n            <div className=\"form-check\">\n                <input type=\"checkbox\" className=\"form-check-input\" ref={resolvedRef} {...rest} />\n                <label htmlFor=\"form-check-input\" className=\"form-check-label\"></label>\n            </div>\n        </>\n    );\n});\n\ntype TableProps = {\n    isSearchable?: boolean,\n    isSortable?: boolean,\n    pagination?: boolean,\n    isSelectable?: boolean,\n    isExpandable?: boolean,\n    isVisible?: boolean,\n    numtable?: number,\n    pageSize: number,\n    columns: Array<any>,\n    data: Array<any>,\n    searchBoxClass?: string,\n    tableClass?: string,\n    theadClass?: string,\n    sizePerPageList: {\n        text: string,\n        value: number,\n    }[],\n};\n\nconst Table = (props: TableProps): React$Element<React$FragmentType> => {\n    const isSearchable = props['isSearchable'] || false;\n    const isSortable = props['isSortable'] || false;\n    const pagination = props['pagination'] || false;\n    const isSelectable = props['isSelectable'] || false;\n    const isExpandable = props['isExpandable'] || false;\n    const isVisible = props['isVisible'] || false;\n    const numtable = props['numtable'] || '0';\n\n    const dataTable = useTable(\n        {\n            columns: props['columns'],\n            data: props['data'],\n            initialState: { pageSize: props['pageSize'] || 10 },\n        },\n        isSearchable && useGlobalFilter,\n        isSortable && useSortBy,\n        isExpandable && useExpanded,\n        pagination && usePagination,\n        isSelectable && useRowSelect,\n        (hooks) => {\n            isSelectable &&\n                hooks.visibleColumns.push((columns) => [\n                    // Let's make a column for selection\n                    {\n                        id: 'selection',\n                        // The header can use the table's getToggleAllRowsSelectedProps method\n                        // to render a checkbox\n                        Header: ({ getToggleAllPageRowsSelectedProps }) => (\n                            <div>\n                                <IndeterminateCheckbox {...getToggleAllPageRowsSelectedProps()} />\n                            </div>\n                        ),\n                        // The cell can use the individual row's getToggleRowSelectedProps method\n                        // to the render a checkbox\n                        Cell: ({ row }) => (\n                            <div>\n                                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n                            </div>\n                        ),\n                    },\n                    ...columns,\n                ]);\n\n            isExpandable &&\n                hooks.visibleColumns.push((columns) => [\n                    // Let's make a column for selection\n                    {\n                        // Build our expander column\n                        id: 'expander', // Make sure it has an ID\n                        Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n                            <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? '-' : '+'}</span>\n                        ),\n                        Cell: ({ row }) =>\n                            // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n                            // to build the toggle for expanding a row\n                            row.canExpand ? (\n                                <span\n                                    {...row.getToggleRowExpandedProps({\n                                        style: {\n                                            // We can even use the row.depth property\n                                            // and paddingLeft to indicate the depth\n                                            // of the row\n                                            paddingLeft: `${row.depth * 2}rem`,\n                                        },\n                                    })}>\n                                    {row.isExpanded ? '-' : '+'}\n                                </span>\n                            ) : null,\n                    },\n                    ...columns,\n                ]);\n        }\n    );\n\n    let rows = pagination ? dataTable.page : dataTable.rows;\n    const table=`Table_Export_${numtable}`\n    return (\n        <>\n            <div className=\"row justify-content-start\">\n            <div class=\"col-4\">\n             {isSearchable && (\n                <GlobalFilter\n                    preGlobalFilteredRows={dataTable.preGlobalFilteredRows}\n                    globalFilter={dataTable.state.globalFilter}\n                    setGlobalFilter={dataTable.setGlobalFilter}\n                    searchBoxClass={props['searchBoxClass']}\n                />\n            )}</div>\n                <div class=\"col-12\">\n                {isVisible && (<ButtonExportar numtable={table}/> )}\n                </div>\n            </div>\n\n            <div className=\"table-responsive\">\n                <table id={table}\n                    {...dataTable.getTableProps()}\n                    className={classNames('table table-centered react-table', props['tableClass'])}>\n                    <thead className={props['theadClass']} >\n                        {dataTable.headerGroups.map((headerGroup) => (\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {headerGroup.headers.map((column) => (\n                                    <th\n                                        {...column.getHeaderProps(column.sort && column.getSortByToggleProps())}\n                                        className={classNames({\n                                            sorting_desc: column.isSortedDesc === true,\n                                            sorting_asc: column.isSortedDesc === false,\n                                            sortable: column.sort === true,\n                                        })}>\n                                        {column.render('Header')}\n                                    </th>\n                                ))}\n                            </tr>\n                        ))}\n                    </thead>\n                    <tbody {...dataTable.getTableBodyProps()}>\n                        {(rows || []).map((row, i) => {\n                            dataTable.prepareRow(row);\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {row.cells.map((cell) => {\n                                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\n                                    })}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n\n            </div>\n\n            {pagination && <Pagination tableProps={dataTable} sizePerPageList={props['sizePerPageList']} />}\n        </>\n    );\n};\n\nexport default Table;\n","// @flow\nimport React, { useState } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n/* Password Input */\nconst PasswordInput = ({ name, placeholder, refCallback, errors, register, className }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}>\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}></span>\n                </div>\n            </InputGroup>\n        </>\n    );\n};\n\ntype FormInputProps = {\n    label?: string,\n    type?: string,\n    name?: string,\n    placeholder?: string,\n    register?: any,\n    errors?: any,\n    className?: string,\n    labelClassName?: string,\n    containerClass?: string,\n    refCallback?: any,\n    children?: any,\n};\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    placeholder,\n    register,\n    errors,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    ...otherProps\n}: FormInputProps): React$Element<React$FragmentType> => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    return (\n        <>\n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'password' ? (\n                        <>\n                            <Form.Group className={containerClass}>\n                                {label ? (\n                                    <>\n                                        {' '}\n                                        <Form.Label className={labelClassName}>{label}</Form.Label> {children}{' '}\n                                    </>\n                                ) : null}\n                                <PasswordInput\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors}\n                                    register={register}\n                                    className={className}\n                                />\n\n                                {errors && errors[name] ? (\n                                    <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                                        {errors[name]['message']}\n                                    </Form.Control.Feedback>\n                                ) : null}\n                            </Form.Group>\n                        </>\n                    ) : (\n                        <>\n                            {type === 'checkbox' || type === 'radio' ? (\n                                <>\n                                    <Form.Group className={containerClass}>\n                                        <Form.Check\n                                            type={type}\n                                            label={label}\n                                            name={name}\n                                            id={name}\n                                            ref={(r) => {\n                                                if (refCallback) refCallback(r);\n                                            }}\n                                            className={className}\n                                            isInvalid={errors && errors[name] ? true : false}\n                                            {...(register ? register(name) : {})}\n                                            {...otherProps}\n                                        />\n\n                                        {errors && errors[name] ? (\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                {errors[name]['message']}\n                                            </Form.Control.Feedback>\n                                        ) : null}\n                                    </Form.Group>\n                                </>\n                            ) : (\n                                <Form.Group className={containerClass}>\n                                    {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                    <Form.Control\n                                        type={type}\n                                        placeholder={placeholder}\n                                        name={name}\n                                        id={name}\n                                        as={comp}\n                                        ref={(r) => {\n                                            if (refCallback) refCallback(r);\n                                        }}\n                                        className={className}\n                                        isInvalid={errors && errors[name] ? true : false}\n                                        {...(register ? register(name) : {})}\n                                        {...otherProps}\n                                        autoComplete={name}>\n                                        {children ? children : null}\n                                    </Form.Control>\n\n                                    {errors && errors[name] ? (\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            {errors[name]['message']}\n                                        </Form.Control.Feedback>\n                                    ) : null}\n                                </Form.Group>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","// @flow\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\n\r\ntype SpinnerProps = {\r\n    tag?: string,\r\n    className?: string,\r\n    size?: 'lg' | 'md' | 'sm',\r\n    type?: 'bordered' | 'grow',\r\n    color?: string,\r\n    children?: any,\r\n};\r\n\r\n/**\r\n * Spinner\r\n */\r\nconst Spinner = (props: SpinnerProps): React$Element<any> => {\r\n    const children = props.children || null;\r\n    const Tag = props.tag || 'div';\r\n    const color = props.color || 'secondary';\r\n    const size = props.size || '';\r\n\r\n    return (\r\n        <Tag\r\n            role=\"status\"\r\n            className={classNames(\r\n                { 'spinner-border': props.type === 'bordered', 'spinner-grow': props.type === 'grow' },\r\n                [`text-${color}`],\r\n                { [`avatar-${size}|`]: size },\r\n                props.className\r\n            )}>\r\n            {children}\r\n        </Tag>\r\n    );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n    tag: 'div',\r\n    type: 'bordered',\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { memo, useContext } from 'react';\n// components\nimport FormInput from '../FormInput';\nimport Spinner from '../Spinner';\nimport { Alert, Button, Form } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport { SearchContext } from '../../../../layouts/context/SearchContext';\nimport { DashboardContext } from '../../../../layouts/context/DashboardContext';\n\nconst BuscadorProgramas = () => {\n    const {\n        itemsmenuprincipal,\n        isLoading,\n        itemsmenu,\n    } = useContext(DashboardContext);\n    const {\n      itemsForm,\n      itemsProgramas,\n      itemPeriodo,\n      onItemSedes,\n      onItemPeriodo,\n      onItemProgramas,\n      handleSubmit,\n      validated,\n  } = useContext(SearchContext);\n\n\n    /*\n     * handle form submission\n     */\n\n\n\n    return (\n        <>\n            <Alert variant={'success'}>\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                    <Form.Group className={classnames('mh-100 d-flex flex-row')}>\n                        <Form.Group className={classnames('w-65 p-0')}>\n                            <FormInput\n                                type=\"select\"\n                                label=\"Sede\"\n                                name=\"Sedes\"\n                                className=\"form-control\"\n                                containerClass={'w-65  p-0'}\n                                key=\"Sedes\"\n                                id=\"Sedes\"\n                                required\n                                onChange={(e) => {\n                                    onItemSedes(...itemsForm, e);\n                                }}>\n                                <option value=\"0\">Selecione la sede</option>\n                                <option value=\"Valledupar\">Valledupar</option>\n                                <option value=\"Aguachica\">Aguachica</option>\n                                {itemsmenu === 'maestrias' ? (\n                                    <>\n                                        <option value=\"A distancia\">Maestrías A distancia</option>\n                                        <option value=\"SUE\">Maestrías SUE</option>\n                                    </>\n                                ) : (\n                                    ''\n                                )}\n                            </FormInput>\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className={classnames('w-65 p-0')}>\n                            <FormInput\n                                type=\"select\"\n                                label=\"Programa\"\n                                name=\"programas\"\n                                className=\"form-control\"\n                                containerClass={'w-65  p-0'}\n                                key=\"programas\"\n                                id=\"programas\"\n                                required\n                                onChange={(e) => {\n                                    onItemProgramas(...itemsForm, e);\n                                }}>\n                                <option value=\"0\">Seleccione el Programa</option>\n                                {itemsProgramas?.map((p, i) => {\n                                    return (\n                                        <option value={p.Programa} key={i + 1}>\n                                            {p.Programa}\n                                        </option>\n                                    );\n                                })}\n                            </FormInput>\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className={classnames('w-15 p-0')}>\n                            <Form.Group className=\"form-group mb-3\">\n                                <FormInput\n                                    type=\"select\"\n                                    label=\"Año\"\n                                    name=\"periodo\"\n                                    className=\"form-control\"\n                                    containerClass={'w-65  p-0'}\n                                    key=\"periodo\"\n                                    id=\"periodo\"\n                                    required\n                                    onChange={(e) => {\n                                        onItemPeriodo(...itemsForm, e);\n                                    }}>\n                                    <option value=\"0\">Seleccione el Año</option>\n                                    {\n                                        // eslint-disable-next-line array-callback-return\n                                        itemPeriodo[0]?.map((p, i) => {\n                                            if (p.Periodo > 2005)\n                                                return (\n                                                    <option value={p.Periodo} key={i + 1}>\n                                                        {p.Periodo}\n                                                    </option>\n                                                );\n                                        })\n                                    }\n                                </FormInput>\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Please provide a valid Fecha Inicial.\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                        </Form.Group>\n                        <Form.Group className={classnames('w-15 p-0')}>\n                            <Form.Group className=\"form-group mb-3\">\n                                <Form.Control\n                                    type=\"hidden\"\n                                    label=\"itemsmenu\"\n                                    value={itemsmenu}\n                                    name=\"itemsmenu\"\n                                    key=\"itemsmenu\"\n                                    id=\"itemsmenu\"\n                                />\n                                <Form.Control\n                                    type=\"hidden\"\n                                    label=\"itemsmenuprincipal\"\n                                    value={itemsmenuprincipal}\n                                    name=\"itemsmenuprincipal\"\n                                    key=\"itemsmenuprincipal\"\n                                    id=\"itemsmenuprincipal\"\n                                />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Please provide a valid Final.\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                        </Form.Group>\n                        <Form.Group className=\"w-15 p-1\">\n                            <div className=\"form-group mb-3\">\n                                <label className=\"form-label\">{''}</label> <br />\n                                {isLoading ? (\n                                    <Button type=\"submit\" variant=\"success\">\n                                        Consultar\n                                    </Button>\n                                ) : (\n                                    <Button color=\"primary\" disabled>\n                                        <Spinner className=\"spinner-border-sm\" tag=\"span\" color=\"white\" />\n                                        <span className=\"visually-hidden\">Loading...</span>\n                                    </Button>\n                                )}\n                            </div>\n                        </Form.Group>\n                    </Form.Group>\n                </Form>\n            </Alert>\n        </>\n    );\n};\nexport default memo(BuscadorProgramas);\n","import React, {useEffect,useContext } from 'react';\nimport BuscadorProgramas from './BuscadorProgramas/BuscadorProgramas';\nimport { DashboardContext } from '../../../layouts/context/DashboardContext';\nimport { SearchContext } from '../../../layouts/context/SearchContext';\nimport { APICore } from '../../../helpers/api/apiCore';\nconst api = new APICore();\n\nconst SearchCustomizations = () => {\n  const {\n    itemPrograma,\n    setPeriodo,\n} = useContext(SearchContext);\n\n  const {itemsmenuprincipal} = useContext(DashboardContext)\n\n  useEffect(() => {\n    if(itemPrograma?.length > 0){\n     const url = `accion=periodos&opcion=consulta&programa=${itemPrograma}&datable=${itemsmenuprincipal}`;\n     const syllab = api.sendRequestData(`${url}`);\n     syllab.then(function (resp) {\n         if (resp) {\n           setPeriodo([resp]);\n         }\n     });\n    }\n   }, [itemPrograma,itemsmenuprincipal,setPeriodo]);\n\n    return (\n        <React.Fragment>\n            <BuscadorProgramas />\n        </React.Fragment>\n    );\n};\n\nexport default SearchCustomizations;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\n\n// simple bar chart\nconst BarChart = ({ApexBarChartData}): React$Element<any> => {\n    // default options\n    const apexBarChartOpts = {\n        chart: {\n            height: 380,\n            type: 'bar',\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                dataLabels: {\n                    position: 'top',\n                },\n            },\n        },\n        dataLabels: {\n            enabled: true,\n            offsetX: -6,\n            style: {\n                fontSize: '12px',\n                colors: ['#fff'],\n            },\n        },\n        colors: ['#C0E38E', '#5AC32D', '#3DAC4C', '#6c757d'],\n        stroke: {\n            show: true,\n            width: 1,\n            colors: ['#fff'],\n        },\n\n        xaxis: {\n            categories: ApexBarChartData?.axial,\n        },\n        legend: {\n            offsetY: -10,\n        },\n        states: {\n            hover: {\n                filter: 'none',\n            },\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n    };\n\n    // chart data\n    const apexBarChartData = [\n      {\n        name: 'graduados',\n        data:ApexBarChartData?.graduados,\n    },\n    {\n        name: 'inscritos',\n        data: ApexBarChartData?.inscritos,\n    },\n    {\n        name: 'admitidos',\n        data:ApexBarChartData?.admitidos,\n    },\n    {\n        name: 'matriculados',\n        data: ApexBarChartData?.admitidos,\n    },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n              <h4 className=\"header-title mb-3\">{ApexBarChartData?.programa}</h4>\n                <Chart options={apexBarChartOpts} series={apexBarChartData} type=\"bar\" className=\"apex-charts\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BarChart;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\n\n// stacked bar chart\nconst StackedBarChart = ({ApexBarChartData}): React$Element<any> => {\n    // default options\n    const apexBarChartStackedOpts = {\n        chart: {\n            height: 380,\n            type: 'bar',\n            stacked: true,\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            bar: {\n                horizontal: true,\n            },\n        },\n        stroke: {\n            show: false,\n        },\n        xaxis: {\n            categories: ApexBarChartData.axial,\n        },\n        yaxis: {\n            title: {\n                text: undefined,\n            },\n        },\n        colors: ['#C0E38E', '#5AC32D', '#3DAC4C', '#6c757d'],\n        tooltip: {\n            y: {\n                formatter: function (val) {\n                    return val;\n                },\n            },\n        },\n        fill: {\n            opacity: 1,\n        },\n        states: {\n            hover: {\n                filter: 'none',\n            },\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'center',\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n    };\n\n    // chart data\n    const apexBarChartStackedData = [\n      {\n        name: 'graduados',\n        data:ApexBarChartData.graduados,\n    },\n    {\n        name: 'inscritos',\n        data: ApexBarChartData.inscritos,\n    },\n    {\n        name: 'admitidos',\n        data:ApexBarChartData.admitidos,\n    },\n    {\n        name: 'matriculados',\n        data: ApexBarChartData.admitidos,\n    },\n    ];\n//console.log('ApexBarChartData',ApexBarChartData);\n    return (\n        <Card>\n            <Card.Body>\n            <h4 className=\"header-title mb-3\">{ApexBarChartData.programa}</h4>\n                <Chart\n                    options={apexBarChartStackedOpts}\n                    series={apexBarChartStackedData}\n                    type=\"bar\"\n                    className=\"apex-charts\"\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StackedBarChart;\n","import React,{memo} from 'react';\nimport { Row, Card,Tab,Nav } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport BarChartMaInsGra from '../estadisticas/BarChartMaInsGra';\nimport StackedBarChart from '../estadisticas/StackedBarChart';\nconst ApexBarChartData = ({ApexBarChartData}) => {\n  return (\n    <>\n          <Row>\n        <Card>\n          <Card.Body>\n            <Tab.Container defaultActiveKey=\"1\">\n              <Nav variant=\"tabs\" className=\"nav-bordered\" as=\"ul\">\n                    <Nav.Item as=\"li\" key={'1'}>\n                      <Nav.Link href=\"#\" eventKey={'1'} >\n                        <i className={classnames('d-md-none', 'd-block', 'me-1')}></i>\n                        <span className=\"d-none d-md-block\">Vertical</span>\n                      </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item as=\"li\" key={'2'}>\n                      <Nav.Link href=\"#\" eventKey={'2'} >\n                        <i className={classnames('d-md-none', 'd-block', 'me-1')}></i>\n                        <span className=\"d-none d-md-block\">Horizontal</span>\n                      </Nav.Link>\n                    </Nav.Item>\n              </Nav>\n              <Tab.Content className=\"px-4 pb-4 pt-0 mx-auto\">\n                    <Tab.Pane eventKey={'1'}  id={'1'} key={'1'}><BarChartMaInsGra ApexBarChartData={ApexBarChartData}/></Tab.Pane>\n              </Tab.Content>\n              <Tab.Content className=\"px-4 pb-4 pt-0 mx-auto\">\n                    <Tab.Pane eventKey={'2'}  id={'2'} key={'2'} ><StackedBarChart ApexBarChartData={ApexBarChartData}/></Tab.Pane>\n              </Tab.Content>\n            </Tab.Container>\n          </Card.Body>\n        </Card>\n      </Row>\n    </>\n    );\n};\nexport default memo(ApexBarChartData);\n","// @flow\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Bar, withResponsiveness } from 'britecharts-react';\n\nconst ResponsiveBarChart = withResponsiveness(Bar);\n\n// simple bar chart\nconst BarChart = (Data): React$Element<any> => {\n    // container style\n    const chartContainerStyle = {\n        width: '100%',\n        height: '300px',\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <div className=\"bar-container\" style={chartContainerStyle}>\n                   {\n                   (Data?.barChartData?.length>0)?\n                   <ResponsiveBarChart\n                        isAnimated={false}\n                        data={Data?.barChartData}\n                        isHorizontal={false}\n                        height={300}\n                        betweenBarsPadding={0.5}\n                        colorSchema={['#C0E38E']}\n                        margin={{ top: 10, left: 50, bottom: 20, right: 10 }}\n                    />:''\n                    }\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BarChart;\n","// @flow\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Bar, withResponsiveness } from 'britecharts-react';\n\nconst ResponsiveBarChart = withResponsiveness(Bar);\n\n// simple horizontal bar chart\nconst BarChartVertical = ({barChartData}): React$Element<any> => {\n    // container style\n    const chartContainerStyle = {\n        width: '100%',\n        height: '300px',\n    };\n     return (\n        <Card>\n            <Card.Body>\n                <div className=\"bar-container\" style={chartContainerStyle}>\n                    <ResponsiveBarChart\n                        data={barChartData}\n                        isHorizontal={true}\n                        height={300}\n                        enableLabels={true}\n                        percentageAxisToMaxRatio={1.3}\n                        labelsNumberFormat={1}\n                        colorSchema={['#C0E38E', '#5AC32D', '#3DAC4C', '#6c757d', '#ffbc00', '#39afd1']}\n                        margin={{ top: 10, left: 50, bottom: 20, right: 10 }}\n                    />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BarChartVertical;\n","// @flow\nimport React from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { Donut, Legend, ResponsiveContainer } from 'britecharts-react';\n\n// donut chart\nconst DonutChart = (donutDatas): React$Element<any> => {\n    return (\n      (donutDatas?.donutData?.length>0)?\n        <Card>\n            <Card.Body>\n                <div className=\"donut-container\">\n                    <ResponsiveContainer\n                        render={() => (\n                            <Row>\n                                <Col>\n                                    <Donut\n                                        data={donutDatas?.donutData}\n                                        height={300}\n                                        internalRadius={80}\n                                        colorSchema={['#C0E38E', '#5AC32D', '#3DAC4C', '#6c757d', '#ffbc00', '#39afd1']}\n                                        isAnimated={false}\n                                        hasFixedHighlightedSlice={true}\n                                    />\n                                </Col>\n                                <Col>\n                                    <Legend\n                                        data={donutDatas?.donutData}\n                                        height={200}\n                                        width={250}\n                                        numberFormat={'s'}\n                                        colorSchema={['#C0E38E', '#5AC32D', '#3DAC4C', '#6c757d', '#ffbc00', '#39afd1']}\n                                        margin={{ top: 10, bottom: 10, left: 0, right: 30 }}\n                                    />\n                                </Col>\n                            </Row>\n                        )}\n                    />\n                </div>\n            </Card.Body>\n        </Card>:''\n    );\n};\n\nexport default DonutChart;\n","import React,{memo} from 'react';\nimport { Row, Card,Tab,Nav } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport BarChart from '../estadisticas/BarChart';\nimport BarChartVertical from '../estadisticas/BarChartVertical';\nimport DonutChart from '../estadisticas/DonutChart';\nconst GraficaUno = ({barChartData,donutData}) => {\n\n  return (\n    <>\n          <Row>\n        <Card>\n          <Card.Body>\n            <Tab.Container defaultActiveKey=\"1\">\n              <Nav variant=\"tabs\" className=\"nav-bordered\" as=\"ul\">\n                    <Nav.Item as=\"li\" key={'1'}>\n                      <Nav.Link href=\"#\" eventKey={'1'} >\n                        <i className={classnames('d-md-none', 'd-block', 'me-1')}></i>\n                        <span className=\"d-none d-md-block\">Vertical</span>\n                      </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item as=\"li\" key={'2'}>\n                      <Nav.Link href=\"#\" eventKey={'2'} >\n                        <i className={classnames('d-md-none', 'd-block', 'me-1')}></i>\n                        <span className=\"d-none d-md-block\">Horizontal</span>\n                      </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item as=\"li\" key={'3'}>\n                      <Nav.Link href=\"#\" eventKey={'3'} >\n                        <i className={classnames('d-md-none', 'd-block', 'me-1')}></i>\n                        <span className=\"d-none d-md-block\">Dona</span>\n                      </Nav.Link>\n                    </Nav.Item>\n              </Nav>\n              <Tab.Content className=\"px-4 pb-4 pt-0 mx-auto\">\n                    <Tab.Pane eventKey={'1'}  id={'1'} key={'1'}>\n                      <br/>\n                    <h4 className=\"header-title mb-3\">{donutData[0]?.programa}</h4>\n                      <BarChart barChartData={barChartData}/>\n                      </Tab.Pane>\n              </Tab.Content>\n              <Tab.Content className=\"px-4 pb-4 pt-0 mx-auto\">\n                    <Tab.Pane eventKey={'2'}  id={'2'} key={'2'} >\n                    <h4 className=\"header-title mb-3\">{donutData[0]?.programa}</h4>\n                      <BarChartVertical barChartData={barChartData}/>\n                      </Tab.Pane>\n              </Tab.Content>\n              <Tab.Content className=\"px-4 pb-4 pt-0 mx-auto\">\n                    <Tab.Pane eventKey={'3'}  id={'3'} key={'3'} >\n                    <h4 className=\"header-title mb-3\">{barChartData[0]?.programa}</h4>\n                      <DonutChart donutData={donutData}/>\n                      </Tab.Pane>\n              </Tab.Content>\n            </Tab.Container>\n\n          </Card.Body>\n        </Card>\n      </Row>\n    </>\n    );\n};\nexport default memo(GraficaUno);\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\n\n// simple line chart\nconst LineChart = ({barChartData}): React$Element<any> => {\n    // default options\n    const apexLineChartWithLables = {\n        chart: {\n            height: 680,\n            type: 'line',\n            zoom: {\n                enabled: false,\n            },\n            toolbar: {\n                show: false,\n            },\n        },\n        colors: ['#C0E38E', '#5AC32D', '#3DAC4C', '#6c757d'],\n        dataLabels: {\n            enabled: true,\n        },\n        stroke: {\n            width: [3, 3],\n            curve: 'smooth',\n        },\n        title: {\n            text: barChartData.categoria,\n            align: 'left',\n            style: {\n                fontSize: '14px',\n            },\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f1f3fa',\n        },\n        markers: {\n            style: 'inverted',\n            size: 6,\n        },\n        xaxis: {\n            categories: barChartData.axial,\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'right',\n            floating: true,\n            offsetY: -25,\n            offsetX: -5,\n        },\n        responsive: [\n            {\n                breakpoint: 10,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    // chart data\n    const apexLineChartWithLablesData = [\n      {\n        name: 'graduados',\n        data:barChartData.graduados,\n    },\n    {\n        name: 'inscritos',\n        data: barChartData.inscritos,\n    },\n    {\n        name: 'admitidos',\n        data:barChartData.admitidos,\n    },\n    {\n        name: 'matriculados',\n        data: barChartData.admitidos,\n    },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n            <h4 className=\"header-title mb-3\">{barChartData.programa}</h4>\n                <Chart\n                    options={apexLineChartWithLables}\n                    series={apexLineChartWithLablesData}\n                    type=\"line\"\n                    className=\"apex-charts\"\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default LineChart;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\n\n// simple pie chart\nconst PieChart = ({pieChart}): React$Element<any> => {\n    // default options\n    const apexDonutOpts = {\n        chart: {\n            height: 320,\n            type: 'pie',\n        },\n        labels: ['Total General', 'Total Rango', 'Total Programa'],\n        colors: ['#C0E38E', '#5AC32D', '#6c757d'],\n        legend: {\n            show: true,\n            position: 'bottom',\n            horizontalAlign: 'center',\n            verticalAlign: 'middle',\n            floating: false,\n            fontSize: '14px',\n            offsetX: 0,\n            offsetY: -10,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        height: 240,\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    // chart data\n    const apexDonutData = [Number(pieChart.totalgeneral), Number(pieChart.totalrango), Number(pieChart.totalprograma)];\n//console.log(pieChart);\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">{pieChart.programa}</h4>\n                <Chart options={apexDonutOpts} series={apexDonutData} type=\"pie\" height={320} className=\"apex-charts\" />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PieChart;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\n\n// Mixed chart\nconst MixedChart = ({grafiCuatro}): React$Element<any> => {\n    // default options\n    var apexMixedOpts = {\n        chart: {\n            height: 380,\n            type: 'line',\n            stacked: false,\n            toolbar: {\n                show: false,\n            },\n        },\n        stroke: {\n            width: [0, 2, 4],\n            curve: 'smooth',\n        },\n        plotOptions: {\n            bar: {\n                columnWidth: '50%',\n            },\n        },\n        colors: ['#C0E38E', '#5AC32D', '#3DAC4C', '#6c757d'],\n        fill: {\n            opacity: [0.85, 0.25, 1],\n            gradient: {\n                inverseColors: false,\n                shade: 'light',\n                type: 'vertical',\n                opacityFrom: 0.85,\n                opacityTo: 0.55,\n                stops: [0, 100, 100, 100],\n            },\n        },\n        labels: grafiCuatro.axial,\n        markers: {\n            size: 0,\n        },\n        legend: {\n            offsetY: -10,\n        },\n        xaxis: {\n            type: 'date',\n        },\n        tooltip: {\n            shared: true,\n            intersect: false,\n            y: {\n                formatter: function (y) {\n                    if (typeof y !== 'undefined') {\n                        return y.toFixed(0) + ' Total';\n                    }\n                    return y;\n                },\n            },\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n    };\n\n    // chart data\n    const apexMixedData = [\n        {\n            name: 'Graduados',\n            type: 'column',\n            data:grafiCuatro.graduados\n        },\n        {\n            name: 'Inscritos',\n            type: 'area',\n            data:grafiCuatro.admitidos,\n        },\n        {\n            name: 'admitidos',\n            type: 'line',\n            data:grafiCuatro.admitidos,\n        },{\n            name: 'admitidos',\n            type: 'line',\n            data: grafiCuatro.admitidos,\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n            <h4 className=\"header-title mb-3\">{grafiCuatro.programa}</h4>\n                <Chart\n                    options={apexMixedOpts}\n                    series={apexMixedData}\n                    type=\"line\"\n                    height={320}\n                    className=\"apex-charts\"\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default MixedChart;\n","\nconst tabItems = [\n  {\n    id: 1,\n    title: 'Consultar',\n    icon: 'mdi mdi-home-variant',\n    text: 'Clasificación por Consultas',\n  },\n  {\n    id: 2,\n    title: 'Gráficas',\n    icon: 'mdi mdi-chart-bar',\n    text: 'En esta session puedes consultar las estadsticas',\n  }\n  ,\n  {\n    id: 3,\n    title: 'Total General',\n    icon: 'mdi mdi-calendar-search',\n    text: 'En esta session puedes consultar los reportes',\n  },\n];\n\nconst tabMatriculados = [\n  {\n    id: 1,\n    title: 'Consultar',\n    icon: 'mdi mdi-home-variant',\n    text: 'Clasificación por Consultas',\n  },\n  {\n    id: 2,\n    title: 'Por Estratificación Social',\n    icon: 'mdi mdi-calendar-search',\n    text: 'En esta session puedes consultar los estracto',\n  },\n  {\n    id: 3,\n    title: 'Por Género',\n    icon: 'mdi mdi-calendar-search',\n    text: 'En esta session puedes consultar por Género',\n  },{\n    id: 4,\n    title: 'Por Categorías',\n    icon: 'mdi mdi-calendar-search',\n    text: 'En esta session puedes consultar por Categorías',\n  },{\n    id: 5,\n    title: 'Gráficas',\n    icon: 'mdi mdi-chart-bar',\n    text: 'En esta session puedes consultar las estadsticas',\n  },\n];\n\nconst tabAdmitidos = [\n  {\n    id: 1,\n    title: 'Consultar',\n    icon: 'mdi mdi-home-variant',\n    text: 'Clasificación por Consultas',\n  },\n  {\n    id: 2,\n    title: 'Gráficas',\n    icon: 'mdi mdi-chart-bar',\n    text: 'En esta session puedes consultar las estadsticas',\n  },\n];\n/*\nconst tabInscritos = [\n  {\n    id: 1,\n    title: 'Consultar',\n    icon: 'mdi mdi-home-variant',\n    text: 'Clasificación por Consultas',\n  },\n  {\n    id: 2,\n    title: 'Gráficas',\n    icon: 'mdi mdi-chart-bar',\n    text: 'En esta session puedes consultar las estadsticas',\n  },\n  {\n    id: 3,\n    title: 'Categorias',\n    icon: 'mdi mdi-calendar-search',\n    text: 'En esta session puedes consultar los Categorias',\n  }\n];\n*/\nconst columItemsPrincipal = [\n  {\n    Header: 'Sede',\n    accessor: 'sede',\n    sort: true,\n},\n  {\n      Header: 'Programa',\n      accessor: 'programa',\n      sort: true,\n  },\n  {\n      Header: 'Etiqueta',\n      accessor: 'etiqueta',\n      sort: false,\n  },{\n      Header: 'Periodo',\n      accessor: 'periodo',\n      sort: true,\n  },{\n      Header: 'Total',\n      accessor: 'total',\n      sort: true,\n  },\n];\nconst columFecha = [\n  {\n    Header: 'Sede',\n    accessor: 'sede',\n    sort: true,\n},\n  {\n      Header: 'Periodo',\n      accessor: 'periodo',\n      sort: true,\n  },\n  {\n      Header: 'Inscritos',\n      accessor: 'inscritos',\n      sort: false,\n  },{\n      Header: 'Admitidos',\n      accessor: 'admitidos',\n      sort: true,\n  },{\n      Header: 'Matriculados',\n      accessor: 'matriculados',\n      sort: true,\n  },{\n      Header: 'Graduados',\n      accessor: 'graduados',\n      sort: true,\n  },{\n      Header: 'Total',\n      accessor: 'total',\n      sort: true,\n  },\n];\nconst columTotales = [\n  {\n    Header: 'Sede',\n    accessor: 'sede',\n    sort: false,\n},\n  {\n      Header: 'Programa',\n      accessor: 'programa',\n      sort: false,\n  },\n  {\n      Header: 'Pregrado - Programas',\n      accessor: 'etiqueta',\n      sort: false,\n  },{\n      Header: 'Rango de Fechas',\n      accessor: 'periodo',\n      sort: false,\n  },{\n      Header: 'Total',\n      accessor: 'total',\n      sort: false,\n  },\n];\nconst columAdInsMa = [\n  {\n    Header: 'Periodos',\n    accessor: 'periodo',\n    sort: false,\n},\n  {\n      Header: 'Inscritos',\n      accessor: 'inscritos',\n      sort: false,\n  },\n  {\n      Header: 'Admitidos',\n      accessor: 'admitidos',\n      sort: false,\n  },{\n      Header: 'Matriculados',\n      accessor: 'matriculados',\n      sort: false,\n  },{\n      Header: 'Graduados',\n      accessor: 'graduados',\n      sort: false,\n  },\n];\n\nconst columnsEstadistInscritos = [\n  {\n    Header: 'ASPIRANTE REGULAR',\n    accessor: 'ASPIRANTEREGULAR',\n    sort: false,\n},\n  {\n      Header: 'AFROCOLOMBIANOS',\n      accessor: 'AFROCOLOMBIANOS',\n      sort: false,\n  },{\n      Header: 'DESPLAZADOS',\n      accessor: 'DESPLAZADOS',\n      sort: false,\n  },{\n      Header: 'ESCUELA BÁSICA DE PERFACADÉMICO',\n      accessor: 'ESCUELABASICADEPERFACADEMICO',\n      sort: false,\n  },{\n      Header: 'MINORIAS ETNICAS Y CULTURALES',\n      accessor: 'MINORIASETNICASYCULTURALES',\n      sort: false,\n  },{\n      Header: 'PERSONERO (A) ESTUDIANTIL',\n      accessor: 'PERSONERO(A)ESTUDIANTIL',\n      sort: false,\n  },{\n      Header: 'PERSONA CON DISCAPACIDAD',\n      accessor: 'PERSONACONDISCAPACIDAD',\n      sort: false,\n  },{\n      Header: 'HIJO DE EMPLEADO',\n      accessor: 'HIJODEEMPLEADO',\n      sort: false,\n  },{\n      Header: 'VOLUNTARIO CRUZ ROJA',\n      accessor: 'VOLUNTARIOCRUZROJA',\n      sort: false,\n  },{\n      Header: 'VOLUNTARIO CUERPO DE BOMBEROS',\n      accessor: 'VOLUNTARIOCUERPODEBOMBEROS',\n      sort: false,\n  },{\n      Header: 'REINSERTADO',\n      accessor: 'REINSERTADO',\n      sort: false,\n  },{\n      Header: 'VOLUNTARIO DEFENSA CIVIL',\n      accessor: 'VOLUNTARIO DEFENSA CIVIL',\n      sort: false,\n  },{\n      Header: 'ESCUELA BASICA (ANTIGUA)',\n      accessor: 'ESCUELABASICA(ANTIGUA)',\n      sort: false,\n  },{\n      Header: 'ESCUELA NORMAL MANAURE',\n      accessor: 'ESCUELANORMALMANAURE',\n      sort: false,\n  },{\n      Header: 'EDUCACIÓN CONTINUA',\n      accessor: 'EDUCACIONCONTINUA',\n      sort: false,\n  },\n];\nconst columnsAdmitidos = [\n  {\n    Header: 'Periodo',\n    accessor: 'Periodo',\n    sort: false,\n},\n  {\n      Header: 'Categorias',\n      accessor: 'Categoria',\n      sort: false,\n  },{\n      Header: 'Total',\n      accessor: 'Total',\n      sort: false,\n  }\n];\nconst sizePerPageList = [\n  {\n      text: '5',\n      value: 5,\n  },\n  {\n      text: '10',\n      value: 10,\n  },\n  {\n      text: '25',\n      value: 25,\n  },\n  {\n      text: 'All',\n      value:9999,\n  },\n];\nconst columItemsMatriculados = [\n  {\n    Header: 'Sede',\n    accessor: 'Sede',\n    sort: true,\n},\n  {\n      Header: 'Programa',\n      accessor: 'Programa',\n      sort: true,\n  },\n  {\n      Header: 'Periodo',\n      accessor: 'Periodo',\n      sort: true,\n  },{\n      Header: 'Total',\n      accessor: 'Total',\n      sort: true,\n  },\n];\n\nconst colMatricGenero = [\n  {\n    Header: 'Sede',\n    accessor: 'Sede',\n    sort: true,\n},\n  {\n      Header: 'Programa',\n      accessor: 'Programa',\n      sort: true,\n  },\n  {\n      Header: 'Periodo',\n      accessor: 'Periodo',\n      sort: true,\n  },{\n      Header: 'Femenino',\n      accessor: 'F',\n      sort: true,\n  },\n  {\n    Header: 'Masculino',\n    accessor: 'M',\n    sort: true,\n},\n  {\n    Header: 'Total',\n    accessor: 'Total',\n    sort: true,\n},\n];\nconst colMatricEstracto = [\n  {\n    Header: 'Sede',\n    accessor: 'Sede',\n    sort: false,\n},\n  {\n      Header: 'Programa',\n      accessor: 'Programa',\n      sort: false,\n  },\n  {\n      Header: 'Periodo',\n      accessor: 'Periodo',\n      sort: false,\n  },{\n      Header: '1',\n      accessor: '1',\n      sort: false,\n  },\n  {\n    Header: '2',\n    accessor: '2',\n    sort: false,\n},  {\n    Header: '3',\n    accessor: '3',\n    sort: false,\n},  {\n    Header: '4',\n    accessor: '4',\n    sort: false,\n},  {\n    Header: '5',\n    accessor: '5',\n    sort: false,\n},  {\n    Header: '6',\n    accessor: '6',\n    sort: false,\n},  {\n    Header: '7',\n    accessor: '7',\n    sort: false,\n},  {\n    Header: '8',\n    accessor: '8',\n    sort: false,\n},\n  {\n    Header: 'Total',\n    accessor: 'Total',\n    sort: false,\n},\n];\nexport {\n  tabItems,\n  tabMatriculados,\n  colMatricGenero,\n  colMatricEstracto,\n  tabAdmitidos,\n  columItemsPrincipal,\n  columTotales,columAdInsMa,\n  columnsEstadistInscritos,\n  columnsAdmitidos,\n  sizePerPageList,\n  columItemsMatriculados,\n  columFecha\n };\n","import React, { useContext } from 'react';\nimport { Row, Col, Tab, Card, Nav } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport Table from '../../../components/Table';\n\nimport SearchCustomizations from '../components/SearchCustomizations';\nimport ApexBarChartData from '../estadisticas/ApexBarChartData';\nimport GraficaUno from '../estadisticas/GraficaUno';\nimport LineChart from '../estadisticas/LineChart';\nimport PieChart from '../estadisticas/PieChart';\nimport MixedChart from '../estadisticas/MixedChart';\nimport { DashboardContext } from '../../../layouts/context/DashboardContext';\nimport { tabItems, columItemsPrincipal, columTotales, columAdInsMa } from './menu';\nconst Graduados = () => {\n  const { categoryGraduados } = useContext(DashboardContext);\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Card>\n          <Card.Body>\n            <Tab.Container defaultActiveKey=\"1\">\n              <Nav variant=\"tabs\" className=\"nav-bordered\" as=\"ul\">\n                {tabItems?.map((tab, index) => {\n                  return (\n                    <Nav.Item as=\"li\" key={index}>\n                      <Nav.Link href=\"#\" eventKey={tab.id}>\n                        <i className={classnames(tab.icon, 'd-md-none', 'd-block', 'me-1')}></i>\n                        <span className=\"d-none d-md-block\">{tab.title}</span>\n                      </Nav.Link>\n                    </Nav.Item>\n                  );\n                })}\n              </Nav>\n              <Tab.Content className=\"px-4 pb-4 pt-0 mx-auto\">\n                {tabItems?.map((tab, index) => {\n                  return (\n                    <Tab.Pane eventKey={tab.id} id={tab.id} key={index}>\n                      <Row>\n                        <Col sm=\"12 mt-1\">\n                          {(() => {\n                            switch (tab.id) {\n                              case 1:\n                                return (\n                                  <>\n                                    <Row>\n                                      <Col sm=\"12 mt-1\">\n                                        <SearchCustomizations />\n                                      </Col>\n                                    </Row>\n                                    <Row>\n                                      <Col sm=\"12 mt-1\">\n                                        {categoryGraduados?.Items?.length >\n                                          0 && (\n                                            <Table\n                                              columns={columItemsPrincipal}\n                                              data={categoryGraduados?.Items}\n                                              isSortable={true}\n                                              isSearchable={true}\n                                              numtable={'3'}\n                                              isVisible={true}\n                                            />\n                                          )}\n                                      </Col>\n                                    </Row>\n                                  </>\n                                );\n                              case 2:\n                                return (\n                                  <>\n                                    <Row>\n                                      <Col xl={6}>\n                                        {categoryGraduados?.DonutData?.length >\n                                          0 && (\n                                            <GraficaUno\n                                              barChartData={\n                                                categoryGraduados.Chart\n                                              }\n                                              donutData={\n                                                categoryGraduados.DonutData\n                                              }\n                                            />\n                                          )}\n                                      </Col>\n                                      <Col xl={6}>\n                                        {categoryGraduados?.ApexBarChartData\n                                          ?.axial?.length > 0 && (\n                                            <ApexBarChartData\n                                              ApexBarChartData={\n                                                categoryGraduados?.ApexBarChartData\n                                              }\n                                            />\n                                          )}\n                                      </Col>\n                                    </Row>\n                                    <Row>\n                                      <Col xl={6}>\n                                        {categoryGraduados?.ApexBarChartData\n                                          ?.axial?.length > 0 && (\n                                            <LineChart\n                                              barChartData={\n                                                categoryGraduados?.ApexBarChartData\n                                              }\n                                            />\n                                          )}\n                                      </Col>\n                                      <Col xl={6}>\n                                        {categoryGraduados?.Piechart?.programa\n                                          ?.length > 0 && (\n                                            <PieChart\n                                              pieChart={\n                                                categoryGraduados?.Piechart\n                                              }\n                                            />\n                                          )}\n                                      </Col>\n                                    </Row>\n                                    <Row>\n                                      <Col>\n                                        {categoryGraduados?.Piechart?.programa\n                                          ?.length > 0 && (\n                                            <MixedChart\n                                              grafiCuatro={\n                                                categoryGraduados?.ApexBarChartData\n                                              }\n                                            />\n                                          )}\n                                      </Col>\n                                    </Row>\n                                  </>\n                                );\n                              case 3:\n                                return (\n                                  <>\n                                    <Table\n                                      columns={columTotales}\n                                      data={categoryGraduados?.Totales}\n                                      pageSize={0}\n                                      isSortable={true}\n                                      isSearchable={false}\n                                      numtable={'1'}\n                                      isVisible={false}\n                                    />\n                                    <Table\n                                      columns={columAdInsMa}\n                                      data={\n                                        categoryGraduados?.InscritosAdmitidosMatriculados\n                                      }\n                                      pageSize={0}\n                                      isSortable={true}\n                                      isSearchable={false}\n                                      numtable={'2'}\n                                      isVisible={true}\n                                    />\n                                  </>\n                                );\n                              // eslint-disable-next-line no-fallthrough\n                              case 4:\n                                return (\n                                  <>\n                                    <Row>\n                                      <Col sm=\"12 mt-1\">{'4'}</Col>\n                                    </Row>\n                                  </>\n                                );\n                              default:\n                                return 'defould';\n                            }\n                          })()}\n                        </Col>\n                      </Row>\n                    </Tab.Pane>\n                  );\n                })}\n              </Tab.Content>\n            </Tab.Container>\n          </Card.Body>\n        </Card>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default Graduados;\n","// @flow\nimport React,{memo} from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\n\n// simple bar chart\nconst BarChartGeneroUno = ({ApexBarChartData}): React$Element<any> => {\n    // default options\n    const apexBarChartOpts = {\n        chart: {\n            height: 380,\n            type: 'bar',\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                dataLabels: {\n                    position: 'top',\n                },\n            },\n        },\n        dataLabels: {\n            enabled: true,\n            offsetX: -6,\n            style: {\n                fontSize: '12px',\n                colors: ['#fff'],\n            },\n        },\n        colors: ['#C0E38E', '#5AC32D'],\n        stroke: {\n            show: true,\n            width: 1,\n            colors: ['#fff'],\n        },\n\n        xaxis: {\n            categories: ApexBarChartData?.axial,\n        },\n        legend: {\n            offsetY: -10,\n        },\n        states: {\n            hover: {\n                filter: 'none',\n            },\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n    };\n\n    // chart data\n    const apexBarChartData = [\n      {\n        name: 'Masculino',\n        data:ApexBarChartData?.masculino,\n    },\n    {\n        name: 'Femenino',\n        data: ApexBarChartData?.femenino,\n    }\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n              <h4 className=\"header-title mb-3\">{ApexBarChartData?.programa}</h4>\n                <Chart options={apexBarChartOpts} series={apexBarChartData} type=\"bar\" className=\"apex-charts\" />\n            </Card.Body>\n        </Card>\n    );\n};\nexport default memo(BarChartGeneroUno);\n\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\n\n// stacked bar chart\nconst BarChartGeneroDos = ({ApexBarChartData}): React$Element<any> => {\n    // default options\n    const apexBarChartStackedOpts = {\n        chart: {\n            height: 380,\n            type: 'bar',\n            stacked: true,\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            bar: {\n                horizontal: true,\n            },\n        },\n        stroke: {\n            show: false,\n        },\n        xaxis: {\n            categories: ApexBarChartData.axial,\n        },\n        yaxis: {\n            title: {\n                text: undefined,\n            },\n        },\n        colors: ['#C0E38E', '#5AC32D'],\n        tooltip: {\n            y: {\n                formatter: function (val) {\n                    return val;\n                },\n            },\n        },\n        fill: {\n            opacity: 1,\n        },\n        states: {\n            hover: {\n                filter: 'none',\n            },\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'center',\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n    };\n\n    // chart data\n    const apexBarChartStackedData = [\n      {\n        name: 'Femenino',\n        data:ApexBarChartData.femenino,\n    },\n    {\n        name: 'Masculino',\n        data: ApexBarChartData.masculino,\n    },\n    ];\n//console.log('ApexBarChartData',ApexBarChartData);\n    return (\n        <Card>\n            <Card.Body>\n            <h4 className=\"header-title mb-3\">{ApexBarChartData.programa}</h4>\n                <Chart\n                    options={apexBarChartStackedOpts}\n                    series={apexBarChartStackedData}\n                    type=\"bar\"\n                    className=\"apex-charts\"\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BarChartGeneroDos;\n","import React,{memo} from 'react';\nimport { Row, Card,Tab,Nav } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport BarChartGeneroUno from './BarChartGeneroUno';\nimport BarChartGeneroDos from './BarChartGeneroDos';\nconst ApexBarChartDataMatriculados = ({barChartData}) => {\n\n  //console.log('ApexBarChartData',barChartData)\n  return (\n    <>\n          <Row>\n        <Card>\n          <Card.Body>\n            <Tab.Container defaultActiveKey=\"1\">\n              <Nav variant=\"tabs\" className=\"nav-bordered\" as=\"ul\">\n                    <Nav.Item as=\"li\" key={'1'}>\n                      <Nav.Link href=\"#\" eventKey={'1'} >\n                        <i className={classnames('d-md-none', 'd-block', 'me-1')}></i>\n                        <span className=\"d-none d-md-block\">Vertical</span>\n                      </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item as=\"li\" key={'2'}>\n                      <Nav.Link href=\"#\" eventKey={'2'} >\n                        <i className={classnames('d-md-none', 'd-block', 'me-1')}></i>\n                        <span className=\"d-none d-md-block\">Horizontal</span>\n                      </Nav.Link>\n                    </Nav.Item>\n              </Nav>\n              <Tab.Content className=\"px-4 pb-4 pt-0 mx-auto\">\n                    <Tab.Pane eventKey={'1'}  id={'1'} key={'1'}><BarChartGeneroUno ApexBarChartData={barChartData}/></Tab.Pane>\n              </Tab.Content>\n              <Tab.Content className=\"px-4 pb-4 pt-0 mx-auto\">\n                    <Tab.Pane eventKey={'2'}  id={'2'} key={'2'} ><BarChartGeneroDos ApexBarChartData={barChartData}/></Tab.Pane>\n              </Tab.Content>\n            </Tab.Container>\n          </Card.Body>\n        </Card>\n      </Row>\n    </>\n    );\n};\nexport default memo(ApexBarChartDataMatriculados);\n","// @flow\nimport React,{memo} from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\n\n// simple line chart\nconst LineChartGenero = ({barChartData}): React$Element<any> => {\n    // default options\n    const apexLineChartWithLables = {\n        chart: {\n            height: 680,\n            type: 'line',\n            zoom: {\n                enabled: false,\n            },\n            toolbar: {\n                show: false,\n            },\n        },\n        colors: ['#C0E38E', '#5AC32D'],\n        dataLabels: {\n            enabled: true,\n        },\n        stroke: {\n            width: [3, 3],\n            curve: 'smooth',\n        },\n        title: {\n            text: barChartData.categoria,\n            align: 'left',\n            style: {\n                fontSize: '14px',\n            },\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f1f3fa',\n        },\n        markers: {\n            style: 'inverted',\n            size: 6,\n        },\n        xaxis: {\n            categories: barChartData.axial,\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'right',\n            floating: true,\n            offsetY: -25,\n            offsetX: -5,\n        },\n        responsive: [\n            {\n                breakpoint: 10,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    // chart data\n    const apexLineChartWithLablesData = [\n      {\n        name: 'Masculino',\n        data:barChartData.masculino,\n    },\n    {\n        name: 'Femenino',\n        data: barChartData.femenino,\n    },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n            <h4 className=\"header-title mb-3\">{barChartData.programa}</h4>\n                <Chart\n                    options={apexLineChartWithLables}\n                    series={apexLineChartWithLablesData}\n                    type=\"line\"\n                    className=\"apex-charts\"\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default memo(LineChartGenero);\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\n\n// simple line chart\nconst LineChartEstracto = ({barChartData}): React$Element<any> => {\n    // default options\n    const apexLineChartWithLables = {\n        chart: {\n            height: 680,\n            type: 'line',\n            zoom: {\n                enabled: false,\n            },\n            toolbar: {\n                show: false,\n            },\n        },\n        colors: ['#C0E38E', '#5AC32D', '#3DAC4C', '#6c757d'],\n        dataLabels: {\n            enabled: true,\n        },\n        stroke: {\n            width: [3, 3],\n            curve: 'smooth',\n        },\n        title: {\n            text: barChartData.categoria,\n            align: 'left',\n            style: {\n                fontSize: '14px',\n            },\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f1f3fa',\n        },\n        markers: {\n            style: 'inverted',\n            size: 6,\n        },\n        xaxis: {\n            categories: barChartData.axial,\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'right',\n            floating: true,\n            offsetY: -25,\n            offsetX: -5,\n        },\n        responsive: [\n            {\n                breakpoint: 10,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    // chart data\n    const apexLineChartWithLablesData = [\n      {\n        name: '1',\n        data:barChartData.uno,\n    },\n    {\n        name: '2',\n        data: barChartData.dos,\n    },\n    {\n        name: '3',\n        data:barChartData.tres,\n    },\n    {\n        name: '4',\n        data: barChartData.cuatro,\n    },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n            <h4 className=\"header-title mb-3\">{barChartData.programa}</h4>\n                <Chart\n                    options={apexLineChartWithLables}\n                    series={apexLineChartWithLablesData}\n                    type=\"line\"\n                    className=\"apex-charts\"\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default LineChartEstracto;\n","// @flow\nimport React,{memo} from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\n\n// Mixed chart\nconst MixedChartEstracto = ({barChartData}): React$Element<any> => {\n    // default options\n    var apexMixedOpts = {\n        chart: {\n            height: 380,\n            type: 'line',\n            stacked: false,\n            toolbar: {\n                show: false,\n            },\n        },\n        stroke: {\n            width: [0, 2, 4],\n            curve: 'smooth',\n        },\n        plotOptions: {\n            bar: {\n                columnWidth: '50%',\n            },\n        },\n        colors: ['#C0E38E', '#5AC32D', '#3DAC4C', '#6c757d'],\n        fill: {\n            opacity: [0.85, 0.25, 1],\n            gradient: {\n                inverseColors: false,\n                shade: 'light',\n                type: 'vertical',\n                opacityFrom: 0.85,\n                opacityTo: 0.55,\n                stops: [0, 100, 100, 100],\n            },\n        },\n        labels: barChartData.axial,\n        markers: {\n            size: 0,\n        },\n        legend: {\n            offsetY: -10,\n        },\n        xaxis: {\n            type: 'date',\n        },\n        tooltip: {\n            shared: true,\n            intersect: false,\n            y: {\n                formatter: function (y) {\n                    if (typeof y !== 'undefined') {\n                        return y.toFixed(0) + ' Total';\n                    }\n                    return y;\n                },\n            },\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n    };\n\n    // chart data\n    const apexMixedData = [\n        {\n            name: '1',\n            type: 'column',\n            data:barChartData.uno\n        },\n        {\n            name: '2',\n            type: 'area',\n            data:barChartData.dos,\n        },\n        {\n            name: '3',\n            type: 'line',\n            data:barChartData.tres,\n        },{\n            name: '4',\n            type: 'line',\n            data: barChartData.cuatro,\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n            <h4 className=\"header-title mb-3\">{barChartData.programa}</h4>\n            <h4 className=\"header-title mb-3\">Por Estracto</h4>\n                <Chart\n                    options={apexMixedOpts}\n                    series={apexMixedData}\n                    type=\"line\"\n                    height={320}\n                    className=\"apex-charts\"\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default memo(MixedChartEstracto);\n","import React,{useContext} from 'react';\nimport { Row, Col, Tab, Card, Nav} from 'react-bootstrap';\nimport classnames from 'classnames';\nimport Table from '../../../components/Table';\n\nimport SearchCustomizations  from '../components/SearchCustomizations';\nimport ApexBarChartDataMatriculados  from '../estadisticas/matriculados/ApexBarChartDataMatriculados';\nimport LineChartGenero  from '../estadisticas/matriculados/LineChartGenero';\nimport LineChartEstracto  from '../estadisticas/matriculados/LineChartEstracto';\nimport MixedChartEstracto  from '../estadisticas/matriculados/MixedChartEstracto';\nimport GraficaUno  from '../estadisticas/GraficaUno';\nimport { DashboardContext } from '../../../layouts/context/DashboardContext';\nimport  {\n  tabMatriculados,\n  colMatricGenero,\n  colMatricEstracto,\n  columItemsMatriculados,\n  columnsAdmitidos,\n}  from './menu';\n\n\nconst Matriculados = () => {\n  const {categoryMatriculados} = useContext(DashboardContext)\nreturn (\n    <React.Fragment>\n      <Row>\n        <Card>\n          <Card.Body>\n            <Tab.Container defaultActiveKey=\"1\">\n              <Nav variant=\"tabs\" className={classnames(\"nav-bordered\")} as=\"ul\">\n                {tabMatriculados?.map((tab, index) => {\n                  return (\n                    <Nav.Item as=\"li\" key={index}>\n                      <Nav.Link href=\"#\" eventKey={tab.id} >\n                        <i className={classnames(tab.icon, 'd-md-none', 'd-block', 'me-1')}></i>\n                        <span className={classnames(\"d-none d-md-block\")}>{tab.title}</span>\n                      </Nav.Link>\n                    </Nav.Item>\n\n                  )\n                })}\n              </Nav>\n              <Tab.Content className={classnames(\"px-4 pb-4 pt-0 mx-auto\")}>\n                {tabMatriculados?.map((tab, index) => {\n                  return (\n                    <Tab.Pane eventKey={tab.id} id={tab.id} key={index}>\n                      <Row>\n                        <Col sm=\"12 mt-1\">\n                          {(() => {\n                            switch (tab.id) {\n                              case 1:\n                                return ( <>\n                                  <Row>\n                                  <Col sm=\"12 mt-1\">\n                                  <SearchCustomizations />\n                                  </Col>\n                                </Row>\n                                   <Row>\n                                   <Col sm=\"12 mt-1\">\n                                {\n                                categoryMatriculados?.Items?.length >0 &&\n                                  <Table\n                                        columns={columItemsMatriculados}\n                                        data={categoryMatriculados?.Items}\n                                        isSortable={true}\n                                        isSearchable={true}\n                                        numtable={'1'}\n                                        isVisible={true}\n                                        />\n                                    }\n                                  </Col>\n                                </Row>\n                                </> );\n                              case 2:\n                                return (<>                                {\n                                  categoryMatriculados?.Estracto?.length >0 &&\n                                    <Table\n                                          columns={colMatricEstracto}\n                                          data={categoryMatriculados?.Estracto}\n                                          isSortable={true}\n                                          isSearchable={true}\n                                          numtable={'2'}\n                                          isVisible={true}\n                                          />\n                                      }</>);\n                              case 3:\n                                  return (<>                                {\n                                    categoryMatriculados?.Genero?.length >0 &&\n                                      <Table\n                                            columns={colMatricGenero}\n                                            data={categoryMatriculados?.Genero}\n                                            isSortable={true}\n                                            isSearchable={true}\n                                            numtable={'3'}\n                                            isVisible={true}\n                                            />\n                                        }</>);\n                                        case 4:\n                                          return (<>                                {\n                                            categoryMatriculados?.Categorias?.length >0 &&\n                                              <Table\n                                                    columns={columnsAdmitidos}\n                                                    data={categoryMatriculados?.Categorias}\n                                                    isSortable={true}\n                                                    isSearchable={true}\n                                                    numtable={'4'}\n                                                    isVisible={true}\n                                                    />\n                                                }</>);\n                              // eslint-disable-next-line no-fallthrough\n                              case 5:\n                                    return (                                    <>\n                                      <Row>\n                                          <Col xl={6}>\n                                            {\n\n                                            categoryMatriculados?.Chart?.length> 0 &&\n                                                <GraficaUno barChartData={categoryMatriculados?.Chart} donutData={categoryMatriculados?.Donut} />\n                                            }\n                                              </Col>\n                                          <Col xl={6}>\n                                          {\n                                              categoryMatriculados?.ApexBarChartGenero?.axial?.length >0 &&\n                                                <ApexBarChartDataMatriculados barChartData={categoryMatriculados?.ApexBarChartGenero} />\n                                            }\n\n                                          </Col>\n                                      </Row>\n                                      <Row>\n                                          <Col xl={6}>\n                                          {\n                                              categoryMatriculados?.ApexBarChartGenero?.axial?.length >0 &&\n                                                <LineChartGenero barChartData={categoryMatriculados?.ApexBarChartGenero} />\n                                            }\n\n                                          </Col>\n                                          <Col xl={6}>\n                                          {\n                                              categoryMatriculados?.ApexBarChartEstracto?.axial?.length >0 &&\n                                                <LineChartEstracto barChartData={categoryMatriculados?.ApexBarChartEstracto} />\n                                            }\n\n                                            </Col>\n                                            <Col xl={12}>\n                                          {\n                                              categoryMatriculados?.ApexBarChartEstracto?.axial?.length >0 &&\n                                                <MixedChartEstracto barChartData={categoryMatriculados?.ApexBarChartEstracto} />\n                                            }\n\n                                            </Col>\n                                          </Row>\n                                          <Row>\n                                        <Col>\n                                        </Col>\n                                    </Row>\n                                  </>);\n                              default:\n                                return (\n                                  'defould'\n                                );\n                            }\n                          })()}\n\n                        </Col>\n                      </Row>\n\n                    </Tab.Pane>\n                  );\n                })}\n              </Tab.Content>\n            </Tab.Container>\n          </Card.Body>\n        </Card>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default Matriculados;\n","import React, { useContext } from 'react';\nimport { Row, Col, Tab, Card, Nav } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport Table from '../../../components/Table';\nimport { DashboardContext } from '../../../layouts/context/DashboardContext';\nimport SearchCustomizations from '../components/SearchCustomizations';\n/*\nimport ApexBarChartDataMatriculados  from '../estadisticas/matriculados/ApexBarChartDataMatriculados';\nimport LineChartGenero  from '../estadisticas/matriculados/LineChartGenero';\nimport LineChartEstracto  from '../estadisticas/matriculados/LineChartEstracto';\nimport MixedChartEstracto  from '../estadisticas/matriculados/MixedChartEstracto';\nimport GraficaUno  from '../estadisticas/GraficaUno';\n*/\nimport { tabAdmitidos, columnsAdmitidos } from './menu';\n\nconst Admitidos = () => {\n    const { categoryAdmitidos } = useContext(DashboardContext);\n    return (\n        <React.Fragment>\n            <Row>\n                <Card>\n                    <Card.Body>\n                        <Tab.Container defaultActiveKey=\"1\">\n                            <Nav variant=\"tabs\" className={classnames('nav-bordered')} as=\"ul\">\n                                {tabAdmitidos?.map((tab, index) => {\n                                    return (\n                                        <Nav.Item as=\"li\" key={index}>\n                                            <Nav.Link href=\"#\" eventKey={tab.id}>\n                                                <i className={classnames(tab.icon, 'd-md-none', 'd-block', 'me-1')}></i>\n                                                <span className={classnames('d-none d-md-block')}>{tab.title}</span>\n                                            </Nav.Link>\n                                        </Nav.Item>\n                                    );\n                                })}\n                            </Nav>\n                            <Tab.Content className={classnames('px-4 pb-4 pt-0 mx-auto')}>\n                                {tabAdmitidos?.map((tab, index) => {\n                                    return (\n                                        <Tab.Pane eventKey={tab.id} id={tab.id} key={index}>\n                                            <Row>\n                                                <Col sm=\"12 mt-1\">\n                                                    {(() => {\n                                                        switch (tab.id) {\n                                                            case 1:\n                                                                return (\n                                                                    <>\n                                                                        <Row>\n                                                                            <Col sm=\"12 mt-1\">\n                                                                                <SearchCustomizations />\n                                                                            </Col>\n                                                                        </Row>\n                                                                        <Row>\n                                                                            <Col sm=\"12 mt-1\">\n                                                                                {categoryAdmitidos?.Items?.length >\n                                                                                    0 && (\n                                                                                    <Table\n                                                                                        columns={columnsAdmitidos}\n                                                                                        data={categoryAdmitidos?.Items}\n                                                                                        isSortable={true}\n                                                                                        isSearchable={true}\n                                                                                        numtable={'1'}\n                                                                                        isVisible={true}\n                                                                                    />\n                                                                                )}\n                                                                            </Col>\n                                                                        </Row>\n                                                                    </>\n                                                                );\n                                                            case 2:\n                                                                return <>{}</>;\n                                                            case 3:\n                                                                return <>{}</>;\n                                                            // eslint-disable-next-line no-fallthrough\n                                                            case 4:\n                                                                return (\n                                                                    <>\n                                                                        <Row>\n                                                                            <Col xl={6}>{}</Col>\n                                                                            <Col xl={6}>{}</Col>\n                                                                        </Row>\n                                                                        <Row>\n                                                                            <Col xl={6}>{}</Col>\n                                                                            <Col xl={6}>{}</Col>\n                                                                            <Col xl={12}>{}</Col>\n                                                                        </Row>\n                                                                        <Row>\n                                                                            <Col></Col>\n                                                                        </Row>\n                                                                    </>\n                                                                );\n                                                            default:\n                                                                return 'defould';\n                                                        }\n                                                    })()}\n                                                </Col>\n                                            </Row>\n                                        </Tab.Pane>\n                                    );\n                                })}\n                            </Tab.Content>\n                        </Tab.Container>\n                    </Card.Body>\n                </Card>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default Admitidos;\n","import React,{memo} from 'react';\nimport { Row, Card,Tab,Nav,Col } from 'react-bootstrap';\nimport classnames from 'classnames';\n//import BarChart from '../estadisticas/BarChart';\n//import BarChartVertical from '../estadisticas/BarChartVertical';\nimport Chart from 'react-apexcharts';\n//import DonutChart from '../estadisticas/DonutChart';\nconst GraficaInscritos = ({barChartData}) => {\n    // default options\n\n// chart data\n\n const apexBarChartOpts = {\n  chart: {\n      height: 380,\n      type: 'bar',\n      toolbar: {\n          show: false,\n      },\n  },\n  plotOptions: {\n      bar: {\n          horizontal: false,\n          dataLabels: {\n              position: 'top',\n          },\n      },\n  },\n  dataLabels: {\n      enabled: true,\n      offsetX: -6,\n      style: {\n          fontSize: '12px',\n          colors: ['#fff'],\n      },\n  },\n  colors: ['#C0E38E', '#5AC32D', '#3DAC4C', '#6c757d', '#ffbc00', '#39afd1'],\n  stroke: {\n      show: true,\n      width: 1,\n      colors: ['#fff'],\n  },\n\n  xaxis: {\n      categories: barChartData.labels1,\n  },\n  legend: {\n      offsetY: -10,\n  },\n  states: {\n      hover: {\n          filter: 'none',\n      },\n  },\n  grid: {\n      borderColor: '#f1f3fa',\n  },\n};\nconst apexBarChartOpts2 = {\n  chart: {\n    height: 380,\n    type: 'bar',\n    stacked: true,\n    toolbar: {\n        show: false,\n    },\n},\nplotOptions: {\n    bar: {\n        horizontal: true,\n    },\n},\nstroke: {\n    show: false,\n},\nxaxis: {\n    categories: barChartData.labels2,\n    labels: {\n        formatter: function (val) {\n            return val + 'K';\n        },\n    },\n},\nyaxis: {\n    title: {\n        text: undefined,\n    },\n},\ncolors: ['#727cf5', '#0acf97', '#fa5c7c', '#6c757d', '#39afd1'],\ntooltip: {\n    y: {\n        formatter: function (val) {\n            return val + 'K';\n        },\n    },\n},\nfill: {\n    opacity: 1,\n},\nstates: {\n    hover: {\n        filter: 'none',\n    },\n},\nlegend: {\n    position: 'top',\n    horizontalAlign: 'center',\n},\ngrid: {\n    borderColor: '#f1f3fa',\n},\n};\n// chart data\nconst apexBarChartData = barChartData.ChartUno.apexBarChartData1;\nconst apexBarChartData2 = barChartData.ChartUno.apexBarChartData2;\nconsole.log(barChartData.ChartUno)\n\nreturn (\n    <>\n          <Row>\n        <Card>\n          <Card.Body>\n            <Tab.Container defaultActiveKey=\"1\">\n              <Nav variant=\"tabs\" className=\"nav-bordered\" as=\"ul\">\n                    <Nav.Item as=\"li\" key={'1'}>\n                      <Nav.Link href=\"#\" eventKey={'1'} >\n                        <i className={classnames('d-md-none', 'd-block', 'me-1')}></i>\n                        <span className=\"d-none d-md-block\">Vertical</span>\n                      </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item as=\"li\" key={'2'}>\n                      <Nav.Link href=\"#\" eventKey={'2'} >\n                        <i className={classnames('d-md-none', 'd-block', 'me-1')}></i>\n                        <span className=\"d-none d-md-block\">Dona</span>\n                      </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item as=\"li\" key={'3'}>\n                      <Nav.Link href=\"#\" eventKey={'3'} >\n                        <i className={classnames('d-md-none', 'd-block', 'me-1')}></i>\n                        <span className=\"d-none d-md-block\">Horizontal</span>\n                      </Nav.Link>\n                    </Nav.Item>\n              </Nav>\n              <Tab.Content className=\"px-4 pb-4 pt-0 mx-auto\">\n                    <Tab.Pane eventKey={'1'}  id={'1'} key={'1'}>\n                    <Row>\n                       <Col xl={6}>\n                        <h4 className=\"header-title mb-3\">{barChartData?.labels1}</h4>\n                        <Chart options={apexBarChartOpts} series={apexBarChartData} type=\"bar\" className=\"apex-charts\" />\n                        </Col>\n                        <Col xl={6}>\n                        <h4 className=\"header-title mb-3\">{barChartData?.labels2}</h4>\n                        <Chart options={apexBarChartOpts2} series={apexBarChartData2} type=\"bar\" className=\"apex-charts\" />\n                       </Col>\n                   </Row>\n\n                      </Tab.Pane>\n              </Tab.Content>\n              <Tab.Content className=\"px-4 pb-4 pt-0 mx-auto\">\n                    <Tab.Pane eventKey={'2'}  id={'2'} key={'2'} >\n                    <Row>\n                       <Col xl={6}>\n                        <h4 className=\"header-title mb-3\">I Semestre</h4>\n\n                        </Col>\n                        <Col xl={6}>\n                        <h4 className=\"header-title mb-3\">II Semestre</h4>\n\n                       </Col>\n                   </Row>\n                      </Tab.Pane>\n              </Tab.Content>\n              <Tab.Content className=\"px-4 pb-4 pt-0 mx-auto\">\n                    <Tab.Pane eventKey={'3'}  id={'3'} key={'3'} >\n                    <h4 className=\"header-title mb-3\">{barChartData?.labels2}</h4>\n\n                      </Tab.Pane>\n              </Tab.Content>\n            </Tab.Container>\n\n          </Card.Body>\n        </Card>\n      </Row>\n    </>\n    );\n};\nexport default memo(GraficaInscritos);\n","import React,{useContext} from 'react';\nimport { Row, Col, Tab, Card, Nav} from 'react-bootstrap';\nimport classnames from 'classnames';\nimport Table from '../../../components/Table';\nimport { DashboardContext } from '../../../layouts/context/DashboardContext';\nimport SearchCustomizations  from '../components/SearchCustomizations';\nimport GraficaInscritos  from '../estadisticas/GraficaInscritos';\n/*\nimport ApexBarChartDataMatriculados  from '../estadisticas/matriculados/ApexBarChartDataMatriculados';\nimport LineChartGenero  from '../estadisticas/matriculados/LineChartGenero';\nimport LineChartEstracto  from '../estadisticas/matriculados/LineChartEstracto';\nimport MixedChartEstracto  from '../estadisticas/matriculados/MixedChartEstracto';\nimport GraficaUno  from '../estadisticas/GraficaUno';\n*/\nimport  {tabAdmitidos,columnsAdmitidos}  from './menu';\n\n\nconst Inscritos = () => {\nconst {categoryInscritos} = useContext(DashboardContext)\n\nreturn (\n    <React.Fragment>\n      <Row>\n        <Card>\n          <Card.Body>\n            <Tab.Container defaultActiveKey=\"1\">\n              <Nav variant=\"tabs\" className={classnames(\"nav-bordered\")} as=\"ul\">\n                {tabAdmitidos?.map((tab, index) => {\n                  return (\n                    <Nav.Item as=\"li\" key={index}>\n                      <Nav.Link href=\"#\" eventKey={tab.id} >\n                        <i className={classnames(tab.icon, 'd-md-none', 'd-block', 'me-1')}></i>\n                        <span className={classnames(\"d-none d-md-block\")}>{tab.title}</span>\n                      </Nav.Link>\n                    </Nav.Item>\n                  )\n                })}\n              </Nav>\n              <Tab.Content className={classnames(\"px-4 pb-4 pt-0 mx-auto\")}>\n                {tabAdmitidos?.map((tab, index) => {\n                  return (\n                    <Tab.Pane eventKey={tab.id} id={tab.id} key={index}>\n                      <Row>\n                        <Col sm=\"12 mt-1\">\n                          {(() => {\n                            switch (tab.id) {\n                              case 1:\n                                return ( <>\n                                  <Row>\n                                  <Col sm=\"12 mt-1\">\n                                  <SearchCustomizations />\n                                  </Col>\n                                </Row>\n                                <Row>\n                                   <Col sm=\"12 mt-1\">\n                                {\n                                categoryInscritos?.Items?.length >0 &&\n                                  <Table\n                                        columns={columnsAdmitidos}\n                                        data={categoryInscritos?.Items}\n                                        isSortable={true}\n                                        isSearchable={true}\n                                        numtable={'1'}\n                                        isVisible={true}\n                                        />\n                                    }\n                                  </Col>\n                                </Row>\n                                </> );\n                              case 2:\n                                return (<>{\n                                  categoryInscritos?.Items?.length >0 &&\n                                    <GraficaInscritos barChartData={categoryInscritos}/>}</>);\n                              case 3:\n                                  return (<>\n                                  {  }\n                                  </>);\n                              // eslint-disable-next-line no-fallthrough\n                              case 4:\n                                    return (                                    <>\n                                      <Row>\n                                          <Col xl={6}>\n                                            {}\n                                              </Col>\n                                          <Col xl={6}>\n                                          {}\n\n                                          </Col>\n                                      </Row>\n                                      <Row>\n                                          <Col xl={6}>\n                                          {}\n\n                                          </Col>\n                                          <Col xl={6}>\n                                          {}\n\n                                            </Col>\n                                            <Col xl={12}>\n                                          { }\n\n                                            </Col>\n                                          </Row>\n                                          <Row>\n                                        <Col>\n                                        </Col>\n                                    </Row>\n                                  </>);\n                              default:\n                                return (\n                                  'defould'\n                                );\n                            }\n                          })()}\n\n                        </Col>\n                      </Row>\n\n                    </Tab.Pane>\n                  );\n                })}\n              </Tab.Content>\n            </Tab.Container>\n          </Card.Body>\n        </Card>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default Inscritos;\n","import React, { memo, useContext,useCallback } from 'react';\n// components\nimport FormInput from '../FormInput';\nimport Spinner from '../Spinner';\nimport { Alert, Button, Form } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport { SearchContext } from '../../../../layouts/context/SearchContext';\nimport { DashboardContext } from '../../../../layouts/context/DashboardContext';\n\nconst SearchFechas = () => {\n    const {\n        itemsmenuprincipal,\n        isLoading,\n        itemsmenu,\n    } = useContext(DashboardContext);\n    const {\n      itemsForm,\n      onItemSedes,\n      handleSubmit,\n      validated,\n      onSelectFecha,\n  } = useContext(SearchContext);\n\n\n    /*\n     * handle form submission\n     */\n    const getYearsInRange=useCallback(() => {\n      const years = [];\n      const startYear = '2006';\n      const endYear = '2023';\n\n      for (let year = startYear; year <= endYear; year++) {\n        years.push(year);\n      }\n\n      return years;\n    }, []);\n    const fechas = getYearsInRange();\n    return (\n        <>\n            <Alert variant={'success'}>\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                    <Form.Group className={classnames('mh-100 d-flex flex-row')}>\n                        <Form.Group className={classnames('w-65 p-0')}>\n                            <FormInput\n                                type=\"select\"\n                                label=\"Sede\"\n                                name=\"Sedes\"\n                                className=\"form-control\"\n                                containerClass={'w-65  p-0'}\n                                key=\"Sedes\"\n                                id=\"Sedes\"\n                                required\n                                onChange={(e) => {\n                                    onItemSedes(...itemsForm, e);\n                                }}>\n                                <option value=\"0\">Selecione la sede</option>\n                                <option value=\"Valledupar\">Valledupar</option>\n                                <option value=\"Aguachica\">Aguachica</option>\n                            </FormInput>\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className={classnames(\"w-15 p-0\")}>\n                <Form.Group className=\"form-group mb-3\">\n                        <FormInput\n                             type=\"select\"\n                             label=\"Año\"\n                             name=\"fecha\"\n                             className=\"form-control\"\n                             containerClass={'w-65  p-0'}\n                             key=\"fecha\"\n                             id=\"fecha\"\n                             required\n                             onChange={(e) => {\n                              onSelectFecha(...itemsForm, e);\n                             }}>\n                                <option value=\"0\">Seleccione el Año</option>\n                                {fechas?.map((p, i) => {\n                                    return (\n                                        <option value={p} key={i + 1}>\n                                            {p}\n                                        </option>\n                                    );\n                                })}\n                            </FormInput>\n                      <Form.Control.Feedback type=\"invalid\">\n                        Please provide a valid Fecha Inicial.\n                    </Form.Control.Feedback>\n                </Form.Group>\n            </Form.Group>\n                   <Form.Group className={classnames('w-15 p-0')}>\n                            <Form.Group className=\"form-group mb-3\">\n                                <Form.Control\n                                    type=\"hidden\"\n                                    label=\"itemsmenu\"\n                                    value={itemsmenu}\n                                    name=\"itemsmenu\"\n                                    key=\"itemsmenu\"\n                                    id=\"itemsmenu\"\n                                />\n                                <Form.Control\n                                    type=\"hidden\"\n                                    label=\"itemsmenuprincipal\"\n                                    value={itemsmenuprincipal}\n                                    name=\"itemsmenuprincipal\"\n                                    key=\"itemsmenuprincipal\"\n                                    id=\"itemsmenuprincipal\"\n                                />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Please provide a valid Final.\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                        </Form.Group>\n                        <Form.Group className=\"w-15 p-1\">\n                            <div className=\"form-group mb-3\">\n                                <label className=\"form-label\">{''}</label> <br />\n                                {isLoading ? (\n                                    <Button type=\"submit\" variant=\"success\">\n                                        Consultar\n                                    </Button>\n                                ) : (\n                                    <Button color=\"primary\" disabled>\n                                        <Spinner className=\"spinner-border-sm\" tag=\"span\" color=\"white\" />\n                                        <span className=\"visually-hidden\">Loading...</span>\n                                    </Button>\n                                )}\n                            </div>\n                        </Form.Group>\n                    </Form.Group>\n                </Form>\n            </Alert>\n        </>\n    );\n};\nexport default memo(SearchFechas);\n","import React,{memo} from 'react';\nimport { Row, Card,Tab,Nav,Col } from 'react-bootstrap';\nimport classnames from 'classnames';\n//import BarChart from '../estadisticas/BarChart';\n//import BarChartVertical from '../estadisticas/BarChartVertical';\nimport Chart from 'react-apexcharts';\n//import DonutChart from '../estadisticas/DonutChart';\nconst GraficaFecha = ({barChartData}) => {\nconsole.log(barChartData)    // default options\nconst apexDonutOpts = {\n    chart: {\n        height: 320,\n        type: 'pie',\n    },\n    labels: barChartData.labels,\n    colors: ['#C0E38E', '#5AC32D', '#3DAC4C', '#6c757d', '#ffbc00', '#39afd1'],\n    legend: {\n        show: true,\n        position: 'bottom',\n        horizontalAlign: 'center',\n        verticalAlign: 'middle',\n        floating: false,\n        fontSize: '14px',\n        offsetX: 0,\n        offsetY: -10,\n    },\n    responsive: [\n        {\n            breakpoint: 600,\n            options: {\n                chart: {\n                    height: 240,\n                },\n                legend: {\n                    show: false,\n                },\n            },\n        },\n    ],\n};\nconst apexDonutOpts2 = {\n  chart: {\n      height: 320,\n      type: 'pie',\n  },\n  labels: barChartData.labels,\n  colors: ['#C0E38E', '#5AC32D', '#3DAC4C', '#6c757d', '#ffbc00', '#39afd1'],\n  legend: {\n      show: true,\n      position: 'bottom',\n      horizontalAlign: 'center',\n      verticalAlign: 'middle',\n      floating: false,\n      fontSize: '14px',\n      offsetX: 0,\n      offsetY: -10,\n  },\n  responsive: [\n      {\n          breakpoint: 600,\n          options: {\n              chart: {\n                  height: 240,\n              },\n              legend: {\n                  show: false,\n              },\n          },\n      },\n  ],\n};\n// chart data\nconst apexDonutData1 = barChartData.apexDonutData1;\nconst apexDonutData2 = barChartData.apexDonutData2;\n\nconst apexBarChartOpts = {\n  chart: {\n      height: 380,\n      type: 'bar',\n      toolbar: {\n          show: false,\n      },\n  },\n  plotOptions: {\n      bar: {\n          horizontal: false,\n          dataLabels: {\n              position: 'top',\n          },\n      },\n  },\n  dataLabels: {\n      enabled: true,\n      offsetX: -6,\n      style: {\n          fontSize: '12px',\n          colors: ['#fff'],\n      },\n  },\n  colors: ['#39afd1', '#ffbc00', '#6c757d','#C0E38E', '#5AC32D', '#3DAC4C'],\n  stroke: {\n      show: true,\n      width: 1,\n      colors: ['#fff'],\n  },\n\n  xaxis: {\n      categories: barChartData.axial,\n  },\n  legend: {\n      offsetY: -10,\n  },\n  states: {\n      hover: {\n          filter: 'none',\n      },\n  },\n  grid: {\n      borderColor: '#f1f3fa',\n  },\n};\n\n// chart data\nconst apexBarChartData = barChartData.apexBarChartData;\n\nconst apexBarChartStackedOpts = {\n  chart: {\n      height: 380,\n      type: 'bar',\n      stacked: true,\n      toolbar: {\n          show: false,\n      },\n  },\n  plotOptions: {\n      bar: {\n          horizontal: true,\n      },\n  },\n  stroke: {\n      show: false,\n  },\n  xaxis: {\n      categories: barChartData.axial,\n      labels: {\n          formatter: function (val) {\n              return val + 'K';\n          },\n      },\n  },\n  yaxis: {\n      title: {\n          text: undefined,\n      },\n  },\n  colors: ['#C0E38E', '#5AC32D', '#3DAC4C', '#6c757d', '#ffbc00', '#39afd1'],\n  tooltip: {\n      y: {\n          formatter: function (val) {\n              return val + 'K';\n          },\n      },\n  },\n  fill: {\n      opacity: 1,\n  },\n  states: {\n      hover: {\n          filter: 'none',\n      },\n  },\n  legend: {\n      position: 'top',\n      horizontalAlign: 'center',\n  },\n  grid: {\n      borderColor: '#f1f3fa',\n  },\n};\n\nreturn (\n    <>\n          <Row>\n        <Card>\n          <Card.Body>\n            <Tab.Container defaultActiveKey=\"1\">\n              <Nav variant=\"tabs\" className=\"nav-bordered\" as=\"ul\">\n                    <Nav.Item as=\"li\" key={'1'}>\n                      <Nav.Link href=\"#\" eventKey={'1'} >\n                        <i className={classnames('d-md-none', 'd-block', 'me-1')}></i>\n                        <span className=\"d-none d-md-block\">Vertical</span>\n                      </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item as=\"li\" key={'2'}>\n                      <Nav.Link href=\"#\" eventKey={'2'} >\n                        <i className={classnames('d-md-none', 'd-block', 'me-1')}></i>\n                        <span className=\"d-none d-md-block\">Dona</span>\n                      </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item as=\"li\" key={'3'}>\n                      <Nav.Link href=\"#\" eventKey={'3'} >\n                        <i className={classnames('d-md-none', 'd-block', 'me-1')}></i>\n                        <span className=\"d-none d-md-block\">Horizontal</span>\n                      </Nav.Link>\n                    </Nav.Item>\n              </Nav>\n              <Tab.Content className=\"px-4 pb-4 pt-0 mx-auto\">\n                    <Tab.Pane eventKey={'1'}  id={'1'} key={'1'}>\n                      <br/>\n                    <h4 className=\"header-title mb-3\">{barChartData?.programa}</h4>\n                      <Chart options={apexBarChartOpts} series={apexBarChartData} type=\"bar\" className=\"apex-charts\" />\n                      </Tab.Pane>\n              </Tab.Content>\n              <Tab.Content className=\"px-4 pb-4 pt-0 mx-auto\">\n                    <Tab.Pane eventKey={'2'}  id={'2'} key={'2'} >\n                    <Row>\n                       <Col xl={6}>\n                        <h4 className=\"header-title mb-3\">I Semestre</h4>\n                        <Chart options={apexDonutOpts} series={apexDonutData1} type=\"pie\" height={320} className=\"apex-charts\" />\n                        </Col>\n                        <Col xl={6}>\n                        <h4 className=\"header-title mb-3\">II Semestre</h4>\n                        <Chart options={apexDonutOpts2} series={apexDonutData2} type=\"donut\" height={320} className=\"apex-charts\" />\n\n                       </Col>\n                   </Row>\n                      </Tab.Pane>\n              </Tab.Content>\n              <Tab.Content className=\"px-4 pb-4 pt-0 mx-auto\">\n                    <Tab.Pane eventKey={'3'}  id={'3'} key={'3'} >\n                    <h4 className=\"header-title mb-3\">{barChartData?.programa}</h4>\n                     <Chart\n                    options={apexBarChartStackedOpts}\n                    series={apexBarChartData}\n                    type=\"bar\"\n                    className=\"apex-charts\"\n                />\n                      </Tab.Pane>\n              </Tab.Content>\n            </Tab.Container>\n\n          </Card.Body>\n        </Card>\n      </Row>\n    </>\n    );\n};\nexport default memo(GraficaFecha);\n","import React, { useContext } from 'react';\nimport { Row, Col, Tab, Card, Nav } from 'react-bootstrap';\nimport classnames from 'classnames';\nimport Table from '../../../components/Table';\n//import Chart from 'react-apexcharts';\nimport SearchFechas from '../components/BuscadorProgramas/SearchFechas';\n//import ApexBarChartData from '../estadisticas/ApexBarChartData';\nimport GraficaFecha from '../estadisticas/GraficaFecha';\n//import LineChart from '../estadisticas/LineChart';\n//import PieChart from '../estadisticas/PieChart';\n//import MixedChart from '../estadisticas/MixedChart';\nimport { DashboardContext } from '../../../layouts/context/DashboardContext';\nimport { tabAdmitidos, columFecha} from './menu';\nconst TotalesFecha = () => {\n  const { categoryPorFecha,itemUrl } = useContext(DashboardContext);\n   return (\n    <React.Fragment>\n      <Row>\n        <Card>\n          <Card.Body>\n            <Tab.Container defaultActiveKey=\"1\">\n              <Nav variant=\"tabs\" className=\"nav-bordered\" as=\"ul\">\n                {tabAdmitidos?.map((tab, index) => {\n                  return (\n                    <Nav.Item as=\"li\" key={index}>\n                      <Nav.Link href=\"#\" eventKey={tab.id}>\n                        <i className={classnames(tab.icon, 'd-md-none', 'd-block', 'me-1')}></i>\n                        <span className=\"d-none d-md-block\">{tab.title}</span>\n                      </Nav.Link>\n                    </Nav.Item>\n                  );\n                })}\n              </Nav>\n              <Tab.Content className=\"px-4 pb-4 pt-0 mx-auto\">\n                {tabAdmitidos?.map((tab, index) => {\n                  return (\n                    <Tab.Pane eventKey={tab.id} id={tab.id} key={index}>\n                      <Row>\n                        <Col sm=\"12 mt-1\">\n                          {(() => {\n                            switch (tab.id) {\n                              case 1:\n                                return (\n                                  <>\n                                    <Row>\n                                      <Col sm=\"12 mt-1\">\n                                        <SearchFechas />\n                                      </Col>\n                                    </Row>\n                                    <Row>\n                                      <Col sm=\"12 mt-1\">\n                                        {categoryPorFecha?.Items?.length >\n                                          0 && (\n                                            <Table\n                                              columns={columFecha}\n                                              data={categoryPorFecha?.Items}\n                                              isSortable={true}\n                                              isSearchable={true}\n                                              numtable={itemUrl}\n                                              isVisible={true}\n                                            />\n                                          )}\n                                      </Col>\n                                    </Row>\n                                  </>\n                                );\n                              case 2:\n                                return (\n                                  <>\n                                    <Row>\n                                      <Col xl={6}>\n\n                                      {categoryPorFecha?.Items?.length >\n                                          0 && (\n                                            <GraficaFecha\n                                              barChartData={\n                                                categoryPorFecha.Piechart\n                                              }\n                                            />\n                                            )}\n                                      </Col>\n\n                                    </Row>\n                                  </>\n                                );\n                              default:\n                                return 'defould';\n                            }\n                          })()}\n                        </Col>\n                      </Row>\n                    </Tab.Pane>\n                  );\n                })}\n              </Tab.Content>\n            </Tab.Container>\n          </Card.Body>\n        </Card>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default TotalesFecha;\n","// @flow\nimport React, { useContext } from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\nimport { DashboardContext } from '../../../layouts/context/DashboardContext';\n\n\n/**\n * PageTitle\n */\nconst Title = ()=> {\n  const {itemsmenu, itemsmenuprincipal,info} = useContext(DashboardContext)\n      const breadCrumbItems=\n        [\n          // eslint-disable-next-line no-undef\n          { label: itemsmenu.length===0 ?'Bienvenidos':itemsmenuprincipal.toUpperCase()+' / '+itemsmenu.toUpperCase(), path: '/'+itemsmenuprincipal.toUpperCase()+'/'+itemsmenu.toUpperCase()+ '/', active: true },\n          // eslint-disable-next-line no-undef\n          {title:itemsmenu.length===0 ?'Bienvenidos, para comenzar seleccione uno de los items del menu principal':itemsmenuprincipal.toUpperCase()+'-' + itemsmenu.toUpperCase()}\n        ]\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box bg-success text-white\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb className=\"m-0\">\n                            <Breadcrumb.Item href=\"/\" className=\"text-white\">Inicio</Breadcrumb.Item>\n                                    <Breadcrumb.Item active key='1' className=\"text-white\">\n                                            {breadCrumbItems[0]?.label}\n                                    </Breadcrumb.Item>\n\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title p-1 mb-2\">{breadCrumbItems[1]?.title +' / '+(info?.programa? info?.programa+' / ':'')+(info?.sede? info?.sede.toUpperCase():'')}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default Title;\n","// @flow\nimport React from 'react';\n\ntype PaginationProps = {\n    tableProps: any,\n    sizePerPageList: {\n        text: string,\n        value: number,\n    }[],\n};\n\nconst Pagination = ({ tableProps, sizePerPageList }: PaginationProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <div className=\"d-lg-flex align-items-center text-center pb-1\">\n                <label className=\"me-1\">Display :</label>\n                <select\n                    value={tableProps.state.pageSize}\n                    onChange={(e) => {\n                        tableProps.setPageSize(Number(e.target.value));\n                    }}\n                    className=\"form-select d-inline-block w-auto\">\n                    {sizePerPageList.map((pageSize, index) => {\n                        return (\n                            <option key={index} value={pageSize.value}>\n                                {pageSize.text}\n                            </option>\n                        );\n                    })}\n                </select>\n\n                <span className=\"mx-3\">\n                    Page{' '}\n                    <strong>\n                        {tableProps.state.pageIndex + 1} of {tableProps.pageOptions.length}\n                    </strong>{' '}\n                </span>\n\n                <span className=\"d-inline-block align-items-center text-sm-start text-center my-sm-0 my-2\">\n                    <label>Go to page : </label>\n                    <input\n                        type=\"number\"\n                        defaultValue={tableProps.state.pageIndex + 1}\n                        onChange={(e) => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                            tableProps.gotoPage(page);\n                        }}\n                        className=\"form-control w-25 ms-1 d-inline-block\"\n                    />\n                </span>\n\n                <div className=\"pagination pagination-rounded d-inline-flex ms-auto\">\n                    <button\n                        onClick={() => tableProps.gotoPage(0)}\n                        className=\"page-link\"\n                        disabled={!tableProps.canPreviousPage}>\n                        {'<<'}\n                    </button>{' '}\n                    <button\n                        onClick={() => tableProps.previousPage()}\n                        className=\"page-link\"\n                        disabled={!tableProps.canPreviousPage}>\n                        {'<'}\n                    </button>{' '}\n                    <button\n                        onClick={() => tableProps.nextPage()}\n                        className=\"page-link\"\n                        disabled={!tableProps.canNextPage}>\n                        {'>'}\n                    </button>{' '}\n                    <button\n                        onClick={() => tableProps.gotoPage(tableProps.pageCount - 1)}\n                        className=\"page-link\"\n                        disabled={!tableProps.canNextPage}>\n                        {'>>'}\n                    </button>{' '}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Pagination;\n","// @flow\nimport React, { useRef, useEffect, forwardRef } from 'react';\nimport {\n    useTable,\n    useSortBy,\n    usePagination,\n    useRowSelect,\n    useGlobalFilter,\n    useAsyncDebounce,\n    useExpanded,\n} from 'react-table';\nimport classNames from 'classnames';\n\n// components\nimport Pagination from './Pagination';\n\n// Define a default UI for filtering\nconst GlobalFilter = ({ preGlobalFilteredRows, globalFilter, setGlobalFilter, searchBoxClass }) => {\n    const count = preGlobalFilteredRows.length;\n    const [value, setValue] = React.useState(globalFilter);\n    const onChange = useAsyncDebounce((value) => {\n        setGlobalFilter(value || undefined);\n    }, 200);\n\n    return (\n        <div className={classNames(searchBoxClass)}>\n            <span className=\"d-flex align-items-center\">\n                Search :{' '}\n                <input\n                    value={value || ''}\n                    onChange={(e) => {\n                        setValue(e.target.value);\n                        onChange(e.target.value);\n                    }}\n                    placeholder={`${count} records...`}\n                    className=\"form-control w-auto ms-1\"\n                />\n            </span>\n        </div>\n    );\n};\n\nconst IndeterminateCheckbox = forwardRef(({ indeterminate, ...rest }, ref) => {\n    const defaultRef = useRef();\n    const resolvedRef: any = ref || defaultRef;\n\n    useEffect(() => {\n        resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n        <>\n            <div className=\"form-check\">\n                <input type=\"checkbox\" className=\"form-check-input\" ref={resolvedRef} {...rest} />\n                <label htmlFor=\"form-check-input\" className=\"form-check-label\"></label>\n            </div>\n        </>\n    );\n});\n\ntype TableProps = {\n    isSearchable?: boolean,\n    isSortable?: boolean,\n    pagination?: boolean,\n    isSelectable?: boolean,\n    isExpandable?: boolean,\n    pageSize: number,\n    columns: Array<any>,\n    data: Array<any>,\n    searchBoxClass?: string,\n    tableClass?: string,\n    theadClass?: string,\n    sizePerPageList: {\n        text: string,\n        value: number,\n    }[],\n};\n\nconst Table = (props: TableProps): React$Element<React$FragmentType> => {\n    const isSearchable = props['isSearchable'] || false;\n    const isSortable = props['isSortable'] || false;\n    const pagination = props['pagination'] || false;\n    const isSelectable = props['isSelectable'] || false;\n    const isExpandable = props['isExpandable'] || false;\n\n    const dataTable = useTable(\n        {\n            columns: props['columns'],\n            data: props['data'],\n            initialState: { pageSize: props['pageSize'] || 10 },\n        },\n        isSearchable && useGlobalFilter,\n        isSortable && useSortBy,\n        isExpandable && useExpanded,\n        pagination && usePagination,\n        isSelectable && useRowSelect,\n        (hooks) => {\n            isSelectable &&\n                hooks.visibleColumns.push((columns) => [\n                    // Let's make a column for selection\n                    {\n                        id: 'selection',\n                        // The header can use the table's getToggleAllRowsSelectedProps method\n                        // to render a checkbox\n                        Header: ({ getToggleAllPageRowsSelectedProps }) => (\n                            <div>\n                                <IndeterminateCheckbox {...getToggleAllPageRowsSelectedProps()} />\n                            </div>\n                        ),\n                        // The cell can use the individual row's getToggleRowSelectedProps method\n                        // to the render a checkbox\n                        Cell: ({ row }) => (\n                            <div>\n                                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n                            </div>\n                        ),\n                    },\n                    ...columns,\n                ]);\n\n            isExpandable &&\n                hooks.visibleColumns.push((columns) => [\n                    // Let's make a column for selection\n                    {\n                        // Build our expander column\n                        id: 'expander', // Make sure it has an ID\n                        Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n                            <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? '-' : '+'}</span>\n                        ),\n                        Cell: ({ row }) =>\n                            // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n                            // to build the toggle for expanding a row\n                            row.canExpand ? (\n                                <span\n                                    {...row.getToggleRowExpandedProps({\n                                        style: {\n                                            // We can even use the row.depth property\n                                            // and paddingLeft to indicate the depth\n                                            // of the row\n                                            paddingLeft: `${row.depth * 2}rem`,\n                                        },\n                                    })}>\n                                    {row.isExpanded ? '-' : '+'}\n                                </span>\n                            ) : null,\n                    },\n                    ...columns,\n                ]);\n        }\n    );\n\n    let rows = pagination ? dataTable.page : dataTable.rows;\n\n    return (\n        <>\n            {isSearchable && (\n                <GlobalFilter\n                    preGlobalFilteredRows={dataTable.preGlobalFilteredRows}\n                    globalFilter={dataTable.state.globalFilter}\n                    setGlobalFilter={dataTable.setGlobalFilter}\n                    searchBoxClass={props['searchBoxClass']}\n                />\n            )}\n\n            <div className=\"table-responsive\">\n                <table\n                    {...dataTable.getTableProps()}\n                    className={classNames('table table-centered react-table', props['tableClass'])}>\n                    <thead className={props['theadClass']}>\n                        {dataTable.headerGroups.map((headerGroup) => (\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {headerGroup.headers.map((column) => (\n                                    <th\n                                        {...column.getHeaderProps(column.sort && column.getSortByToggleProps())}\n                                        className={classNames({\n                                            sorting_desc: column.isSortedDesc === true,\n                                            sorting_asc: column.isSortedDesc === false,\n                                            sortable: column.sort === true,\n                                        })}>\n                                        {column.render('Header')}\n                                    </th>\n                                ))}\n                            </tr>\n                        ))}\n                    </thead>\n                    <tbody {...dataTable.getTableBodyProps()}>\n                        {(rows || []).map((row, i) => {\n                            dataTable.prepareRow(row);\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {row.cells.map((cell) => {\n                                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\n                                    })}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n\n            {pagination && <Pagination tableProps={dataTable} sizePerPageList={props['sizePerPageList']} />}\n        </>\n    );\n};\n\nexport default Table;\n","import React, { useState } from 'react';\nimport { Card, Button, Form, Modal } from 'react-bootstrap';\n// components\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useTranslation } from 'react-i18next';\nimport Select from 'react-select';\nimport Swal from 'sweetalert2'\nimport classNames from 'classnames';\nimport { APICore } from '../../../../helpers/api/apiCore';\nconst api = new APICore();\n\n\nconst GuardarUsuarios = (props) => {\n  const [validated, setValidated] = useState(false);\n  const [temas, setTemas] = useState([]);\n\n  const guardar = (event) => {\n    let CryptoJS = require('crypto-js');\n    var pass = CryptoJS.AES.encrypt(temas?.password, 'key instrumentacion 123').toString();\n    let resp ='';\n    //const toke =api.generateToken(temas?.username,temas?.username,temas?.id)\n    const form = event.currentTarget;\n      if (form.checkValidity() === false) {\n          event.preventDefault();\n          event.stopPropagation();\n      }\n      setValidated(true);\n      if (validated) {\n          let response={...temas,clave:pass};\n          if (response) {\n              var queryString = response\n                  ? Object.keys(response)\n                        .map((key) => key + '=' + response[key])\n                        .join('&')\n                  : '';\n          }\n          resp = queryString;\n\n          const url = `accion=usuarios&opcion=guardar&${resp}`;\n          const respuesta = api.getDatos(`${url}`);\n          respuesta.then(function (resp) {\n              if (resp) {\n                Swal.fire('' + resp[0].menssage + '');\n              }\n          });\n      }\n  };\n  const { t } = useTranslation();\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n        username: yup.string().required(t('Please enter Fullname')),\n        password: yup.string().required(t('Please enter Password')),\n        nombres: yup.string().required('Please enter Nombres').email('Please enter valid Nombres'),\n        apellidos: yup.string().required('Please enter apellidos').email('Please enter valid apellidos'),\n        rol: yup.string().required('Please enter rol').email('Please enter valid rol'),\n    })\n);\n\n  return (\n      <Card>\n          <Card.Body>\n              {/* Sign up Modal */}\n              <Modal show={props.signUpModal} onHide={props.toggleSignUp}>\n                  <Modal.Body>\n                      <div className=\"text-center mt-2 mb-4\">\n                          <a href=\"/\">\n                              <span></span>\n                              <span></span>\n                          </a>\n                      </div>\n                      <Form validated={validated} resolver={schemaResolver} defaultValues={{}}>\n                      <Form.Group className=\"mb-3\" controlId=\"username\">\n                          <Form.Label>Usuario</Form.Label>\n                          <Form.Control\n                              type=\"text\"\n                              name=\"username\"\n                              placeholder=\"Digite el username\"\n                              value={temas.username}\n                              onChange={(e) => setTemas({ ...temas, username: e.target.value})}\n                          />\n                          <Form.Control.Feedback type=\"invalid\">\n                              Por favor, digite el username.\n                          </Form.Control.Feedback>\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\" controlId=\"password\">\n                          <Form.Label>Password</Form.Label>\n                          <Form.Control\n                              type=\"text\"\n                              name=\"password\"\n                              placeholder=\"Digite el password\"\n                              value={temas.password}\n                              onChange={(e) => setTemas({ ...temas, password: e.target.value})}\n                          />\n                          <Form.Control.Feedback type=\"invalid\">\n                              Por favor, digite el password.\n                          </Form.Control.Feedback>\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\" controlId=\"nombres\">\n                          <Form.Label>Nombres</Form.Label>\n                          <Form.Control\n                              type=\"text\"\n                              name=\"nombres\"\n                              placeholder=\"Digite el nombres\"\n                              value={temas.nombres}\n                              onChange={(e) => setTemas({ ...temas, nombres: e.target.value})}\n                          />\n                          <Form.Control.Feedback type=\"invalid\">\n                              Por favor, digite el nombre.\n                          </Form.Control.Feedback>\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\" controlId=\"apellidos\">\n                          <Form.Label>Apellido</Form.Label>\n                          <Form.Control\n                              type=\"text\"\n                              name=\"apellidos\"\n                              placeholder=\"Digite el apellido\"\n                              value={temas.apellidos}\n                              onChange={(e) => setTemas({ ...temas, apellidos: e.target.value})}\n                          />\n                          <Form.Control.Feedback type=\"invalid\">\n                              Por favor, digite el apellido.\n                          </Form.Control.Feedback>\n                      </Form.Group>\n                      <Form.Group className=\"mb-3\" controlId=\"rol\">\n                          <Form.Label>Rol</Form.Label>\n                          <Select\n                              type=\"select\"\n                              name=\"rol\"\n                              className=\"react-select\"\n                              classNamePrefix=\"react-select\"\n                              onChange={(e) => setTemas({ ...temas, rol: e.value })}\n                              options={[\n                                  { value: temas.rol, rol: 'Rol: ' + temas.rol + '' },\n                                  { value: 'Admin', label: 'Admin' },\n                                  { value: 'Docente', label: 'Docente' },\n                              ]}\n                              placeholder=\"Selecione el rol...\"\n                              selected={temas.rol}\n                          />\n                          <Form.Control.Feedback type=\"invalid\">Por favor, digite el status.</Form.Control.Feedback>\n                      </Form.Group>\n                          <div className=\"button-list\">\n                              <Button type=\"button\" disabled={temas.message ? 'true' : ''} onClick={guardar}>\n                                  +\n                              </Button>\n                              {temas.message && (\n                                  <Button type=\"button\" className=\"btn-icon\" onClick={props.Close}>\n                                      <i className={classNames('mdi', ['mdi-window-close'], 'ms-1', 'me-1')}></i>\n                                  </Button>\n                              )}\n                          </div>\n                      </Form>\n                  </Modal.Body>\n              </Modal>\n          </Card.Body>\n      </Card>\n  );\n};\n\nexport default GuardarUsuarios;\n","// @flow\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Card, Button, Form, Modal } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport Select from 'react-select';\nimport Swal from 'sweetalert2'\n\n// components\nimport Table from '../../components/Table';\nimport GuardarUsuarios from './GuardarUsuarios';\n\n\nimport { APICore } from '../../../../helpers/api/apiCore';\nconst api = new APICore();\n//var jwt = require('jsonwebtoken')\n/* status column render */\nconst StatusColumn = ({ row }) => {\n    return (\n        <React.Fragment>\n            <span\n                className={classNames('badge', {\n                    'bg-success': row.original?.status,\n                    'bg-danger': !row.original?.status,\n                })}>\n                {row.original.status ? 'Active' : 'Deactivated'}\n            </span>\n        </React.Fragment>\n    );\n};\n/* action column render */\nconst ActionColumn = ({ row }) => {\n    const INIT_TEMAS = {\n        id: row.cells[1].value ? row.cells[1].value : row.cells[1].value,\n        username: row.cells[2].value ? row.cells[2].value : row.cells[2].value,\n        nombres: row.cells[3].value ? row.cells[3].value : row.cells[3].value,\n        apellidos: row.cells[4].value ? row.cells[4].value : row.cells[4].value,\n        rol: row.cells[5].value ? row.cells[5].value : row.cells[5].value,\n        clave: row.cells[6].value ? row.cells[6].value : row.cells[6].value,\n        status: row.cells[7].value ? row.cells[7].value : row.cells[7].value,\n    };\n\n    const [signUpModal, setSignUpModal] = useState(false);\n    const [validated, setValidated] = useState(false);\n    const [temas, setTemas] = useState(INIT_TEMAS);\n\n\n    const toggleSignUp = () => {\n        setSignUpModal(!signUpModal);\n    };\n\n    const eliminar = (event) => {\n        Swal.fire({\n          title: 'Desea eliminar el registro??',\n          showCancelButton: true,\n        }).then((result) => {\n          /* Read more about isConfirmed, isDenied below */\n          if (result.isConfirmed) {\n            //console.log('event',event.IdCategorias);\n            const url = `accion=${event.itemUrl}&opcion=eliminar&id=${event.id}`;\n            const respuesta = api.getDatos(`${url}`);\n            respuesta.then(function (resp) {\n                if (resp) {\n                  Swal.fire('' + resp[0].menssage + '');\n                }\n            });\n          }\n        })\n    };\n\n    const actualizar = (event) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        setValidated(true);\n        if (validated) {\n            let response;\n            if (temas) {\n                var queryString = temas\n                    ? Object.keys(temas)\n                          .map((key) => key + '=' + temas[key])\n                          .join('&')\n                    : '';\n            }\n            response = queryString;\n\n            const url = `accion=usuarios&opcion=actualizar&${response}`;\n            const respuesta = api.getDatos(`${url}`);\n            respuesta.then(function (resp) {\n                if (resp) {\n                  Swal.fire('' + resp[0].menssage + '');\n                }\n            });\n        }\n    };\n\n    const Close = (e) => {\n        e.preventDefault();\n        setSignUpModal(false);\n        setTemas([]);\n    };\n    //console.log(row);\n    return (\n        <React.Fragment>\n            <Modal show={signUpModal} onHide={toggleSignUp}>\n                <Modal.Body>\n                    <Form validated={validated}>\n                        <Form.Group className=\"mb-3\" controlId=\"username\">\n                            <Form.Label>Usuario</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                name=\"username\"\n                                placeholder=\"Digite el username\"\n                                value={temas.title}\n                                onChange={(e) => setTemas({ ...temas, username: e.target.value })}\n                            />\n                            <Form.Control.Feedback type=\"invalid\">\n                                Por favor, digite el username.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"nombres\">\n                            <Form.Label>Nombres</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                name=\"nombres\"\n                                placeholder=\"Digite el nombres\"\n                                value={temas.title}\n                                onChange={(e) => setTemas({ ...temas, nombres: e.target.value })}\n                            />\n                            <Form.Control.Feedback type=\"invalid\">\n                                Por favor, digite el nombre.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"apellidos\">\n                            <Form.Label>Apellidos</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                name=\"apellidos\"\n                                placeholder=\"Digite el apellido\"\n                                value={temas.title}\n                                onChange={(e) => setTemas({ ...temas, apellidos: e.target.value })}\n                            />\n                            <Form.Control.Feedback type=\"invalid\">\n                                Por favor, digite el apellido.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"rol\">\n                            <Form.Label>Rol</Form.Label>\n                            <Select\n                                type=\"select\"\n                                name=\"rol\"\n                                required\n                                className=\"react-select\"\n                                classNamePrefix=\"react-select\"\n                                onChange={(e) => setTemas({ ...temas, status: e.value })}\n                                options={[\n                                    { value: temas.rol, rol: 'Estado: ' + temas.rol + '' },\n                                    { value: 'Admin', label: 'Admin' },\n                                    { value: 'Consultas', label: 'Consultas' },\n                                ]}\n                                placeholder=\"Selecione el rol...\"\n                                selected={temas.rol}\n                            />\n                            <Form.Control.Feedback type=\"invalid\">Por favor, digite el status.</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"status\">\n                            <Form.Label>Status</Form.Label>\n                            <Select\n                                type=\"select\"\n                                name=\"status\"\n                                required\n                                className=\"react-select\"\n                                classNamePrefix=\"react-select\"\n                                onChange={(e) => setTemas({ ...temas, status: e.value })}\n                                options={[\n                                    { value: temas.status, label: 'Estado: ' + temas.status + '' },\n                                    { value: 'Active', label: 'Activo' },\n                                    { value: 'Deactivated', label: 'Inactivo' },\n                                ]}\n                                placeholder=\"Selecione el status...\"\n                                selected={temas.status}\n                            />\n                            <Form.Control.Feedback type=\"invalid\">Por favor, digite el status.</Form.Control.Feedback>\n                        </Form.Group>\n                        <div className=\"button-list\">\n                            <Button type=\"button\" onClick={actualizar}>\n                                +\n                            </Button>\n\n                            <Button type=\"button\" className=\"btn-icon\" onClick={Close}>\n                                <i className={classNames('mdi', ['mdi-window-close'], 'ms-1', 'me-1')}></i>\n                            </Button>\n                        </div>\n                    </Form>\n                </Modal.Body>\n            </Modal>\n            <Link to=\"#\" className=\"action-icon\" onClick={() => toggleSignUp()}>\n                {' '}\n                <i className=\"mdi mdi-square-edit-outline\"></i>\n            </Link>\n            <Link to=\"#\" className=\"action-icon\" onClick={() => eliminar(temas)}>\n                {' '}\n                <i className=\"mdi mdi-delete\"></i>\n            </Link>\n        </React.Fragment>\n    );\n};\nconst columns = [\n    {\n        Header: 'Action',\n        accessor: 'action',\n        sort: false,\n        classes: 'table-action',\n        Cell: ActionColumn,\n    },\n    {\n        Header: 'ID',\n        accessor: 'id',\n        sort: true,\n    },\n    {\n        Header: 'Usuario',\n        accessor: 'username',\n        sort: true,\n    },\n    {\n        Header: 'Nombres',\n        accessor: 'nombres',\n        sort: true,\n    },{\n        Header: 'Apellidos',\n        accessor: 'apellidos',\n        sort: true,\n    },{\n        Header: 'Role',\n        accessor: 'role',\n        sort: true,\n    },{\n        Header: 'Clave',\n        accessor: 'clave',\n        sort: true,\n    },\n    {\n        Header: 'Status',\n        accessor: 'status',\n        sort: true,\n        Cell: StatusColumn,\n    },\n];\nconst sizePerPageList = [\n    {\n        text: '5',\n        value: 5,\n    },\n    {\n        text: '10',\n        value: 10,\n    },\n    {\n        text: '25',\n        value: 25,\n    },\n];\n/*\nfunction generateToken(user) {\n\n    let token = '';\n    var u = {\n        username: user?.username,\n        id: user?.id,\n    };\n    token = jwt.sign(u, user?.password, {\n        expiresIn: 60 * 60 * 24, // expires in 24 hours\n    });\n    return token;\n}\n*/\n\n\nconst ListaUsuarios = ({props}) => {\n    const [records, openCategoriass] = useState([]);\n    const [data, cargarCategorias] = useState([]);\n    const [signUpModal, setSignUpModal] = useState(false);\n\n    useEffect(() => {\n        const url = `accion=configuraciones&opcion=consultar`;\n        const syllab = api.getDatos(`${url}`);\n        syllab.then(function (resp) {\n            if (resp) {\n                openCategoriass(resp);\n            }\n        });\n    }, [props]);\n\n    useEffect(() => {\n        if (records && records.length > 0) {\n            //const cur = JSON.parse(records);\n            const mapped = [];\n            mapped.push(records);\n            cargarCategorias(mapped[0]);\n        }\n    }, [records]);\n\n    const toggleSignUp = () => {\n        setSignUpModal(!signUpModal);\n    };\n    const Close = (e) => {\n        e.preventDefault();\n        setSignUpModal(false);\n        // agregarsetTemas([]);\n    };\n    return (\n        <>\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Adminitrador de Usuarios:</h4>\n                            <Row>\n                            <Col sm={4}></Col>\n                                <Col sm={8}>\n                                    <div className=\"text-sm-end\">\n                                        <Button className=\"btn btn-success mb-2 me-1\" onClick={toggleSignUp}>\n                                            <i className=\"mdi mdi-cog-outline\"></i>\n                                        </Button>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Table\n                                columns={columns}\n                                data={data}\n                                pageSize={5}\n                                sizePerPageList={sizePerPageList}\n                                isSortable={true}\n                                pagination={true}\n                                theadClass=\"table-light\"\n                                searchBoxClass=\"mt-2 mb-3\"\n                                isSearchable={true}\n                            />\n                            <Row>\n                                    <GuardarUsuarios\n                                        signUpModal={signUpModal}\n                                        Close={Close}\n                                        toggleSignUp={toggleSignUp}\n                                    />\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default ListaUsuarios;\n","import React from 'react';\nimport { Row, Col, Card,Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport FormInput from '../FormInput';\nimport * as XLSX from 'xlsx';\n\nconst ExcelToJson = ({\n ConvertButtonText = \"validar\",\n  CleanButtonText = \"Limpiar\",\n  JsonDataSetter,\n  setSelectedFile,\n  selectedFile,\n  validar,\n  importarDataCvs,\n}) => {\n  const OnchangeValue = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const CleanValues = () => {\n    setSelectedFile(\"\");\n    document.getElementById(\"excel-to-json-input-file\").value = \"\";\n  };\n  const onSubmitXLS = () => {\n    let hojas = []\n    //window.XLSX.utils.json_to_sheet(data, \"out.xlsx\");\n    if (selectedFile) {\n      let fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(selectedFile)\n      fileReader.onload = (event) => {\n        let datas = event.target.result;\n        let data = new Uint8Array(datas);\n        let workbook = XLSX.read(data, { type: \"array\" });\n        workbook.SheetNames.forEach(function(sheetName) {\n          // Here is your object\n          var XL_row_object = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);\n          hojas.push({\n            data: XL_row_object,\n            sheetName\n          })\n        })\n\n        JsonDataSetter(JSON.parse(JSON.stringify(hojas)));\n      };\n    }\n  };\n   console.log(validar);\n  return (\n      <React.Fragment>\n          <Row>\n              <Col>\n                  <Card>\n                      <Card.Body>\n                          <h4 className=\"header-title mb-3\">Cargar Información a la BD</h4>\n\n                          <p className=\"text-muted font-13 m-b-30\"></p>\n                              <FormInput\n                                  onChange={OnchangeValue}\n                                  label=\"Subir archivo\"\n                                  type=\"file\"\n                                  name=\"file\"\n                                  containerClass={'mb-3'}\n                                  key=\"file\"\n                              />\n                                  {selectedFile && (\n                                      <Button variant=\"dark\" id=\"button-addon2\" onClick={onSubmitXLS}>\n                                          {ConvertButtonText}\n                                      </Button>\n                                  )}\n                                  {selectedFile && (\n                                      <Button variant=\"dark\" id=\"button-addon2\" onClick={CleanValues}>\n                                          {CleanButtonText}\n                                      </Button>\n                                  )}\n                                {\n                                  <Button type=\"button\"  onClick={importarDataCvs(selectedFile)}>\n                                    Importar Datos\n                                </Button>\n                                 }\n                      </Card.Body>\n                  </Card>\n              </Col>\n          </Row>\n      </React.Fragment>\n  );\n};\nExcelToJson.propTypes = {\n  ConvertButtonText :PropTypes.string,\n  CleanButtonText :PropTypes.string,\n  JsonDataSetter:PropTypes.func.isRequired\n};\nexport default ExcelToJson;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport ExcelToJson from '../components/ExcelToJsonComponent/ExcelToJsonComponent';\nimport Table from '../components/Table';\nconst HerramientaImportar = ({\n    JsonDataSetter,\n    jsonDataImport,\n    setSelectedFile,\n    selectedFile,\n    importarDataCvs,\n}) => {\n    const [items, setEstados] = useState();\n    const [validar, setValidar] = useState(true);\n    const columns = [\n        {\n            Header: 'Programa',\n            accessor: 'Programa',\n            sort: false,\n        },\n        {\n            Header: 'NombresApellidos',\n            accessor: 'NombresApellidos',\n            sort: false,\n        },\n        {\n            Header: 'Identificacion',\n            accessor: 'Identificacion',\n            sort: false,\n        },\n        {\n            Header: 'Fecha',\n            accessor: 'Fecha',\n            sort: false,\n        },\n        {\n            Header: 'Periodo',\n            accessor: 'Periodo',\n            sort: false,\n        },\n        {\n            Header: 'Sede',\n            accessor: 'Sede',\n            sort: false,\n        },\n    ];\n    const sizePerPageList = [\n        {\n            text: '5',\n            value: 5,\n        },\n        {\n            text: '10',\n            value: 10,\n        },\n        {\n            text: '25',\n            value: 25,\n        },\n        {\n            text: 'All',\n            value: 9999,\n        },\n    ];\n\n    useEffect(() => {\n        if (jsonDataImport) {\n            const objet = Object.keys(jsonDataImport)?.map((key) => {\n                return {\n                    Programa: jsonDataImport[key]?.Programa ? jsonDataImport[key]?.Programa : setValidar(false),\n                    NombresApellidos: jsonDataImport[key]?.NombresApellidos\n                        ? jsonDataImport[key]?.NombresApellidos\n                        : setValidar(false),\n                    Identificacion: jsonDataImport[key]?.Identificacion\n                        ? jsonDataImport[key]?.Identificacion\n                        : setValidar(false),\n                    Fecha: jsonDataImport[key]?.Fecha ? jsonDataImport[key]?.Fecha : setValidar(false),\n                    Periodo: jsonDataImport[key]?.Periodo ? jsonDataImport[key]?.Periodo : setValidar(false),\n                    Sede: jsonDataImport[key]?.Sede ? jsonDataImport[key]?.Sede : setValidar(false),\n                };\n            });\n            setEstados(objet);\n        }\n    }, [jsonDataImport]);\n\n    //console.log(validar,selectedFile)\n    return (\n        <React.Fragment>\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            <ExcelToJson\n                                JsonDataSetter={JsonDataSetter}\n                                setSelectedFile={setSelectedFile}\n                                selectedFile={selectedFile}\n                                validar={validar}\n                                importarDataCvs={importarDataCvs}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n            <Row>\n                <Col sm=\"12 mt-1\">\n                    {items?.length > 0 && (\n                        <Table\n                            columns={columns}\n                            data={items}\n                            pageSize={5}\n                            sizePerPageList={sizePerPageList}\n                            isSortable={true}\n                            pagination={true}\n                            isSearchable={true}\n                            isVisible={true}\n                        />\n                    )}\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default HerramientaImportar;\n","import React, { useContext } from 'react';\nimport Graduados from './Graduados';\nimport Matriculados from './Matriculados';\nimport Admitidos from './Admitidos';\nimport Inscritos from './Inscritos';\nimport TotalesFecha from './TotalesFecha';\nimport Title from '../../../pages/dashboard/components/Title';\nimport ListaUsuarios from '../components/Usuarios/ListaUsuarios';\nimport HerramientaImportar from './HerramientaImportar';\nimport { DashboardContext } from '../../../layouts/context/DashboardContext';\n\n\nconst ProjectDashboard = () => {\n  const { itemsmenuprincipal } = useContext(DashboardContext)\n\n  // eslint-disable-next-line no-undef\n\n  return (\n    <React.Fragment>\n      <Title />\n      {(() => {\n        switch (itemsmenuprincipal) {\n          case 'graduados':\n            return (\n              <>\n                <Graduados />\n              </>\n            );\n          case 'matriculados':\n            return (\n              <>\n                <Matriculados />\n              </>\n            );\n          case 'inscritos':\n            return (<>\n              <Inscritos />\n            </>);\n          case 'admitidos':\n            return (<>\n              <Admitidos />\n            </>);\n          case 'herramienta':\n            return (<>\n              <HerramientaImportar />\n            </>);\n          case 'configuracion':\n            return (<>\n              <ListaUsuarios /></>);\n          case 'por_fecha':\n            return (<>\n              <TotalesFecha /></>);\n          default:\n            return (\n              <>{''}</>\n            );\n        }\n      })()}\n    </React.Fragment>\n  );\n};\nProjectDashboard.defaultProps = {\n  itemsmenu: '/',\n};\nexport default ProjectDashboard;\n"],"sourceRoot":""}